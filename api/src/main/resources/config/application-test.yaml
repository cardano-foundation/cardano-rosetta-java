server:
  port: ${API_BIND_PORT:8080}
  compression:
    enabled: true
    mime-types: text/html,text/plain,text/css,application/javascript,application/json
    min-response-size: 1024


spring:
  jackson:
    default-property-inclusion: NON_NULL
    serialization:
      write-dates-as-timestamps: false
  servlet:
    multipart:
      max-file-size: 8MB
      max-request-size: 16MB
  datasource:
    driver-class-name: org.postgresql.Driver
    username: ${DB_USER_TEST:postgres}
    password: ${DB_SECRET_TEST:123456}
    url: jdbc:postgresql://${DB_HOST_TEST:localhost}:${DB_PORT_TEST:5437}/${DB_NAME_TEST:test}?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false&createDatabaseIfNotExist=true&autoReconnect=true
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          lob:
            non-contextual-creation: true
    hibernate:
      ddl-auto: none
    show-sql: true
  liquibase:
    enabled: false

api:
  exception:
    isPrintStackTrace : {PRINT_EXCEPTION:true}


cardano:
  rosetta:
    version:
      ${ROSETTA_VERSION}
    implementation-version:
      @project.version@
    networks:
      [
        {
          id:
            mainnet,
          node-version:
            cardano node 1.30.1,
          indexer:
            {
              type:
                ledgersync,
              endpoint-url:
                http://localhost:8080
            },
          node-bridge:
            {
              type:
                ledgersync,
              endpoint-url:
                http://localhost:8080
            }
        },
        {
          id:
            preprod,
          protocol-magic: 1,
          node-version:
            cardano node 1.30.1,
          indexer:
            {
              type:
                ledgersync,
              endpoint-url:
                http://localhost:8080
            },
          node-bridge:
            {
              type:
                ledgersync,
              endpoint-url:
                http://localhost:8080
            }
        },
        {
          id:
            preview,
          protocol-magic: 2,
          node-version:
            cardano node 1.30.1,
          indexer:
            {
              type:
                ledgersync,
              endpoint-url:
                http://localhost:8080
            },
          node-bridge:
            {
              type:
                ledgersync,
              endpoint-url:
                http://localhost:8080
            }
        }

      ]
    TOPOLOGY_FILEPATH: ${TOPOLOGY_FILEPATH}
    GENESIS_SHELLEY_PATH: ${GENESIS_SHELLEY_PATH}
    EXEMPTION_TYPES_PATH: ${EXEMPTION_TYPES_PATH}
    API_NODE_SOCKET_PATH: ${API_NODE_SOCKET_PATH}
    # devkit variables
    DEVKIT_ENABLED: ${DEVKIT_ENABLED:false}
    DEVKIT_URL: ${DEVKIT_URL:yaci-cli}
    DEVKIT_PORT: ${HOST_N2C_SOCAT_PORT:3333}

page-size: ${PAGE_SIZE:5}
cardano-transaction-submitter:
  connection:
    socket:
      path: ${SUBMIT_SOCKET_CONNECTION}

  networkMagic: ${NETWORK_MAGIC:1}

  transaction:
    ttl: ${TRANSACTION_TTL:3000}
