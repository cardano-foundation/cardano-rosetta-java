/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.rosetta.api.jooq.tables.records;


import java.time.LocalDateTime;

import org.cardanofoundation.rosetta.api.jooq.tables.InvalidTransaction;
import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class InvalidTransactionRecord extends UpdatableRecordImpl<InvalidTransactionRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>preprod.invalid_transaction.tx_hash</code>.
     */
    public void setTxHash(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>preprod.invalid_transaction.tx_hash</code>.
     */
    public String getTxHash() {
        return (String) get(0);
    }

    /**
     * Setter for <code>preprod.invalid_transaction.slot</code>.
     */
    public void setSlot(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>preprod.invalid_transaction.slot</code>.
     */
    public Long getSlot() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>preprod.invalid_transaction.block_hash</code>.
     */
    public void setBlockHash(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>preprod.invalid_transaction.block_hash</code>.
     */
    public String getBlockHash() {
        return (String) get(2);
    }

    /**
     * Setter for <code>preprod.invalid_transaction.transaction</code>.
     */
    public void setTransaction(JSONB value) {
        set(3, value);
    }

    /**
     * Getter for <code>preprod.invalid_transaction.transaction</code>.
     */
    public JSONB getTransaction() {
        return (JSONB) get(3);
    }

    /**
     * Setter for <code>preprod.invalid_transaction.create_datetime</code>.
     */
    public void setCreateDatetime(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>preprod.invalid_transaction.create_datetime</code>.
     */
    public LocalDateTime getCreateDatetime() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>preprod.invalid_transaction.update_datetime</code>.
     */
    public void setUpdateDatetime(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>preprod.invalid_transaction.update_datetime</code>.
     */
    public LocalDateTime getUpdateDatetime() {
        return (LocalDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached InvalidTransactionRecord
     */
    public InvalidTransactionRecord() {
        super(InvalidTransaction.INVALID_TRANSACTION);
    }

    /**
     * Create a detached, initialised InvalidTransactionRecord
     */
    public InvalidTransactionRecord(String txHash, Long slot, String blockHash, JSONB transaction, LocalDateTime createDatetime, LocalDateTime updateDatetime) {
        super(InvalidTransaction.INVALID_TRANSACTION);

        setTxHash(txHash);
        setSlot(slot);
        setBlockHash(blockHash);
        setTransaction(transaction);
        setCreateDatetime(createDatetime);
        setUpdateDatetime(updateDatetime);
        resetChangedOnNotNull();
    }
}
