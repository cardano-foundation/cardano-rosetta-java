/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.rosetta.api.jooq.tables.records;


import java.time.LocalDateTime;

import org.cardanofoundation.rosetta.api.jooq.tables.PoolRetirement;
import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class PoolRetirementRecord extends UpdatableRecordImpl<PoolRetirementRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>preprod.pool_retirement.tx_hash</code>.
     */
    public void setTxHash(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>preprod.pool_retirement.tx_hash</code>.
     */
    public String getTxHash() {
        return (String) get(0);
    }

    /**
     * Setter for <code>preprod.pool_retirement.cert_index</code>.
     */
    public void setCertIndex(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>preprod.pool_retirement.cert_index</code>.
     */
    public Integer getCertIndex() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>preprod.pool_retirement.pool_id</code>.
     */
    public void setPoolId(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>preprod.pool_retirement.pool_id</code>.
     */
    public String getPoolId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>preprod.pool_retirement.retirement_epoch</code>.
     */
    public void setRetirementEpoch(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>preprod.pool_retirement.retirement_epoch</code>.
     */
    public Integer getRetirementEpoch() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>preprod.pool_retirement.epoch</code>.
     */
    public void setEpoch(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>preprod.pool_retirement.epoch</code>.
     */
    public Integer getEpoch() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>preprod.pool_retirement.slot</code>.
     */
    public void setSlot(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>preprod.pool_retirement.slot</code>.
     */
    public Long getSlot() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>preprod.pool_retirement.block_hash</code>.
     */
    public void setBlockHash(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>preprod.pool_retirement.block_hash</code>.
     */
    public String getBlockHash() {
        return (String) get(6);
    }

    /**
     * Setter for <code>preprod.pool_retirement.block</code>.
     */
    public void setBlock(Long value) {
        set(7, value);
    }

    /**
     * Getter for <code>preprod.pool_retirement.block</code>.
     */
    public Long getBlock() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>preprod.pool_retirement.block_time</code>.
     */
    public void setBlockTime(Long value) {
        set(8, value);
    }

    /**
     * Getter for <code>preprod.pool_retirement.block_time</code>.
     */
    public Long getBlockTime() {
        return (Long) get(8);
    }

    /**
     * Setter for <code>preprod.pool_retirement.update_datetime</code>.
     */
    public void setUpdateDatetime(LocalDateTime value) {
        set(9, value);
    }

    /**
     * Getter for <code>preprod.pool_retirement.update_datetime</code>.
     */
    public LocalDateTime getUpdateDatetime() {
        return (LocalDateTime) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<String, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PoolRetirementRecord
     */
    public PoolRetirementRecord() {
        super(PoolRetirement.POOL_RETIREMENT);
    }

    /**
     * Create a detached, initialised PoolRetirementRecord
     */
    public PoolRetirementRecord(String txHash, Integer certIndex, String poolId, Integer retirementEpoch, Integer epoch, Long slot, String blockHash, Long block, Long blockTime, LocalDateTime updateDatetime) {
        super(PoolRetirement.POOL_RETIREMENT);

        setTxHash(txHash);
        setCertIndex(certIndex);
        setPoolId(poolId);
        setRetirementEpoch(retirementEpoch);
        setEpoch(epoch);
        setSlot(slot);
        setBlockHash(blockHash);
        setBlock(block);
        setBlockTime(blockTime);
        setUpdateDatetime(updateDatetime);
        resetChangedOnNotNull();
    }
}
