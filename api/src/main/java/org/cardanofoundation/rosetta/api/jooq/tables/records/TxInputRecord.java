/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.rosetta.api.jooq.tables.records;


import org.cardanofoundation.rosetta.api.jooq.tables.TxInput;
import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class TxInputRecord extends UpdatableRecordImpl<TxInputRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>preprod.tx_input.output_index</code>.
     */
    public void setOutputIndex(Short value) {
        set(0, value);
    }

    /**
     * Getter for <code>preprod.tx_input.output_index</code>.
     */
    public Short getOutputIndex() {
        return (Short) get(0);
    }

    /**
     * Setter for <code>preprod.tx_input.tx_hash</code>.
     */
    public void setTxHash(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>preprod.tx_input.tx_hash</code>.
     */
    public String getTxHash() {
        return (String) get(1);
    }

    /**
     * Setter for <code>preprod.tx_input.spent_at_slot</code>.
     */
    public void setSpentAtSlot(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>preprod.tx_input.spent_at_slot</code>.
     */
    public Long getSpentAtSlot() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>preprod.tx_input.spent_at_block</code>.
     */
    public void setSpentAtBlock(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>preprod.tx_input.spent_at_block</code>.
     */
    public Long getSpentAtBlock() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>preprod.tx_input.spent_at_block_hash</code>.
     */
    public void setSpentAtBlockHash(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>preprod.tx_input.spent_at_block_hash</code>.
     */
    public String getSpentAtBlockHash() {
        return (String) get(4);
    }

    /**
     * Setter for <code>preprod.tx_input.spent_block_time</code>.
     */
    public void setSpentBlockTime(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>preprod.tx_input.spent_block_time</code>.
     */
    public Long getSpentBlockTime() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>preprod.tx_input.spent_epoch</code>.
     */
    public void setSpentEpoch(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>preprod.tx_input.spent_epoch</code>.
     */
    public Integer getSpentEpoch() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>preprod.tx_input.spent_tx_hash</code>.
     */
    public void setSpentTxHash(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>preprod.tx_input.spent_tx_hash</code>.
     */
    public String getSpentTxHash() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Short, String> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TxInputRecord
     */
    public TxInputRecord() {
        super(TxInput.TX_INPUT);
    }

    /**
     * Create a detached, initialised TxInputRecord
     */
    public TxInputRecord(Short outputIndex, String txHash, Long spentAtSlot, Long spentAtBlock, String spentAtBlockHash, Long spentBlockTime, Integer spentEpoch, String spentTxHash) {
        super(TxInput.TX_INPUT);

        setOutputIndex(outputIndex);
        setTxHash(txHash);
        setSpentAtSlot(spentAtSlot);
        setSpentAtBlock(spentAtBlock);
        setSpentAtBlockHash(spentAtBlockHash);
        setSpentBlockTime(spentBlockTime);
        setSpentEpoch(spentEpoch);
        setSpentTxHash(spentTxHash);
        resetChangedOnNotNull();
    }
}
