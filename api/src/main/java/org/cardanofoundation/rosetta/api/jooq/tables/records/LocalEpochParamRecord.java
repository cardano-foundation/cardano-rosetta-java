/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.rosetta.api.jooq.tables.records;


import java.time.LocalDateTime;

import org.cardanofoundation.rosetta.api.jooq.tables.LocalEpochParam;
import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class LocalEpochParamRecord extends UpdatableRecordImpl<LocalEpochParamRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>preprod.local_epoch_param.epoch</code>.
     */
    public void setEpoch(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>preprod.local_epoch_param.epoch</code>.
     */
    public Integer getEpoch() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>preprod.local_epoch_param.params</code>.
     */
    public void setParams(JSONB value) {
        set(1, value);
    }

    /**
     * Getter for <code>preprod.local_epoch_param.params</code>.
     */
    public JSONB getParams() {
        return (JSONB) get(1);
    }

    /**
     * Setter for <code>preprod.local_epoch_param.update_datetime</code>.
     */
    public void setUpdateDatetime(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>preprod.local_epoch_param.update_datetime</code>.
     */
    public LocalDateTime getUpdateDatetime() {
        return (LocalDateTime) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LocalEpochParamRecord
     */
    public LocalEpochParamRecord() {
        super(LocalEpochParam.LOCAL_EPOCH_PARAM);
    }

    /**
     * Create a detached, initialised LocalEpochParamRecord
     */
    public LocalEpochParamRecord(Integer epoch, JSONB params, LocalDateTime updateDatetime) {
        super(LocalEpochParam.LOCAL_EPOCH_PARAM);

        setEpoch(epoch);
        setParams(params);
        setUpdateDatetime(updateDatetime);
        resetChangedOnNotNull();
    }
}
