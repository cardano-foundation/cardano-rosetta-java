/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.rosetta.api.jooq.tables.records;


import org.cardanofoundation.rosetta.api.jooq.tables.Era;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class EraRecord extends UpdatableRecordImpl<EraRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>preprod.era.era</code>.
     */
    public void setEra(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>preprod.era.era</code>.
     */
    public Integer getEra() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>preprod.era.start_slot</code>.
     */
    public void setStartSlot(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>preprod.era.start_slot</code>.
     */
    public Long getStartSlot() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>preprod.era.block</code>.
     */
    public void setBlock(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>preprod.era.block</code>.
     */
    public Long getBlock() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>preprod.era.block_hash</code>.
     */
    public void setBlockHash(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>preprod.era.block_hash</code>.
     */
    public String getBlockHash() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EraRecord
     */
    public EraRecord() {
        super(Era.ERA);
    }

    /**
     * Create a detached, initialised EraRecord
     */
    public EraRecord(Integer era, Long startSlot, Long block, String blockHash) {
        super(Era.ERA);

        setEra(era);
        setStartSlot(startSlot);
        setBlock(block);
        setBlockHash(blockHash);
        resetChangedOnNotNull();
    }
}
