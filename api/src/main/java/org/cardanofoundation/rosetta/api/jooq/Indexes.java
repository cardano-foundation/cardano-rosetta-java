/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.rosetta.api.jooq;


import org.cardanofoundation.rosetta.api.jooq.tables.Address;
import org.cardanofoundation.rosetta.api.jooq.tables.AddressUtxo;
import org.cardanofoundation.rosetta.api.jooq.tables.Block;
import org.cardanofoundation.rosetta.api.jooq.tables.Cursor_;
import org.cardanofoundation.rosetta.api.jooq.tables.Delegation;
import org.cardanofoundation.rosetta.api.jooq.tables.EpochParam;
import org.cardanofoundation.rosetta.api.jooq.tables.FlywaySchemaHistory;
import org.cardanofoundation.rosetta.api.jooq.tables.InvalidTransaction;
import org.cardanofoundation.rosetta.api.jooq.tables.PoolRegistration;
import org.cardanofoundation.rosetta.api.jooq.tables.PoolRetirement;
import org.cardanofoundation.rosetta.api.jooq.tables.ProtocolParamsProposal;
import org.cardanofoundation.rosetta.api.jooq.tables.StakeRegistration;
import org.cardanofoundation.rosetta.api.jooq.tables.Transaction;
import org.cardanofoundation.rosetta.api.jooq.tables.TransactionWitness;
import org.cardanofoundation.rosetta.api.jooq.tables.TxInput;
import org.cardanofoundation.rosetta.api.jooq.tables.Withdrawal;
import org.jooq.Index;
import org.jooq.OrderField;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling indexes of tables in preprod.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Indexes {

    // -------------------------------------------------------------------------
    // INDEX definitions
    // -------------------------------------------------------------------------

    public static final Index FLYWAY_SCHEMA_HISTORY_S_IDX = Internal.createIndex(DSL.name("flyway_schema_history_s_idx"), FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, new OrderField[] { FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.SUCCESS }, false);
    public static final Index IDX_ADDRESS_STAKE_ADDRESS = Internal.createIndex(DSL.name("idx_address_stake_address"), Address.ADDRESS, new OrderField[] { Address.ADDRESS.STAKE_ADDRESS }, false);
    public static final Index IDX_ADDRESS_UTXO_EPOCH = Internal.createIndex(DSL.name("idx_address_utxo_epoch"), AddressUtxo.ADDRESS_UTXO, new OrderField[] { AddressUtxo.ADDRESS_UTXO.EPOCH }, false);
    public static final Index IDX_ADDRESS_UTXO_OWNER_ADDR = Internal.createIndex(DSL.name("idx_address_utxo_owner_addr"), AddressUtxo.ADDRESS_UTXO, new OrderField[] { AddressUtxo.ADDRESS_UTXO.OWNER_ADDR }, false);
    public static final Index IDX_ADDRESS_UTXO_OWNER_PAYKEY_HASH = Internal.createIndex(DSL.name("idx_address_utxo_owner_paykey_hash"), AddressUtxo.ADDRESS_UTXO, new OrderField[] { AddressUtxo.ADDRESS_UTXO.OWNER_PAYMENT_CREDENTIAL }, false);
    public static final Index IDX_ADDRESS_UTXO_OWNER_STAKE_ADDR = Internal.createIndex(DSL.name("idx_address_utxo_owner_stake_addr"), AddressUtxo.ADDRESS_UTXO, new OrderField[] { AddressUtxo.ADDRESS_UTXO.OWNER_STAKE_ADDR }, false);
    public static final Index IDX_ADDRESS_UTXO_OWNER_STAKEKEY_HASH = Internal.createIndex(DSL.name("idx_address_utxo_owner_stakekey_hash"), AddressUtxo.ADDRESS_UTXO, new OrderField[] { AddressUtxo.ADDRESS_UTXO.OWNER_STAKE_CREDENTIAL }, false);
    public static final Index IDX_ADDRESS_UTXO_SLOT = Internal.createIndex(DSL.name("idx_address_utxo_slot"), AddressUtxo.ADDRESS_UTXO, new OrderField[] { AddressUtxo.ADDRESS_UTXO.SLOT }, false);
    public static final Index IDX_ADDRESS_UTXO_TX_HASH = Internal.createIndex(DSL.name("idx_address_utxo_tx_hash"), AddressUtxo.ADDRESS_UTXO, new OrderField[] { AddressUtxo.ADDRESS_UTXO.TX_HASH }, false);
    public static final Index IDX_BLOCK_EPOCH = Internal.createIndex(DSL.name("idx_block_epoch"), Block.BLOCK, new OrderField[] { Block.BLOCK.EPOCH }, false);
    public static final Index IDX_BLOCK_NUMBER = Internal.createIndex(DSL.name("idx_block_number"), Block.BLOCK, new OrderField[] { Block.BLOCK.NUMBER }, false);
    public static final Index IDX_BLOCK_SLOT = Internal.createIndex(DSL.name("idx_block_slot"), Block.BLOCK, new OrderField[] { Block.BLOCK.SLOT }, false);
    public static final Index IDX_BLOCK_SLOT_LEADER = Internal.createIndex(DSL.name("idx_block_slot_leader"), Block.BLOCK, new OrderField[] { Block.BLOCK.SLOT_LEADER }, false);
    public static final Index IDX_CURSOR_BLOCK_HASH = Internal.createIndex(DSL.name("idx_cursor_block_hash"), Cursor_.CURSOR_, new OrderField[] { Cursor_.CURSOR_.BLOCK_HASH }, false);
    public static final Index IDX_CURSOR_BLOCK_NUMBER = Internal.createIndex(DSL.name("idx_cursor_block_number"), Cursor_.CURSOR_, new OrderField[] { Cursor_.CURSOR_.BLOCK_NUMBER }, false);
    public static final Index IDX_CURSOR_ID = Internal.createIndex(DSL.name("idx_cursor_id"), Cursor_.CURSOR_, new OrderField[] { Cursor_.CURSOR_.ID }, false);
    public static final Index IDX_CURSOR_SLOT = Internal.createIndex(DSL.name("idx_cursor_slot"), Cursor_.CURSOR_, new OrderField[] { Cursor_.CURSOR_.SLOT }, false);
    public static final Index IDX_DELEGATION_ADDRESS = Internal.createIndex(DSL.name("idx_delegation_address"), Delegation.DELEGATION, new OrderField[] { Delegation.DELEGATION.ADDRESS }, false);
    public static final Index IDX_DELEGATION_CREDENTIAL = Internal.createIndex(DSL.name("idx_delegation_credential"), Delegation.DELEGATION, new OrderField[] { Delegation.DELEGATION.CREDENTIAL }, false);
    public static final Index IDX_DELEGATION_SLOT = Internal.createIndex(DSL.name("idx_delegation_slot"), Delegation.DELEGATION, new OrderField[] { Delegation.DELEGATION.SLOT }, false);
    public static final Index IDX_DELEGATION_TXHASH = Internal.createIndex(DSL.name("idx_delegation_txhash"), Delegation.DELEGATION, new OrderField[] { Delegation.DELEGATION.TX_HASH }, false);
    public static final Index IDX_EPOCH_PARAM_SLOT = Internal.createIndex(DSL.name("idx_epoch_param_slot"), EpochParam.EPOCH_PARAM, new OrderField[] { EpochParam.EPOCH_PARAM.SLOT }, false);
    public static final Index IDX_INVALID_TRANSACTION_SLOT = Internal.createIndex(DSL.name("idx_invalid_transaction_slot"), InvalidTransaction.INVALID_TRANSACTION, new OrderField[] { InvalidTransaction.INVALID_TRANSACTION.SLOT }, false);
    public static final Index IDX_POOL_REGISTRATION_POOL_ID = Internal.createIndex(DSL.name("idx_pool_registration_pool_id"), PoolRegistration.POOL_REGISTRATION, new OrderField[] { PoolRegistration.POOL_REGISTRATION.POOL_ID }, false);
    public static final Index IDX_POOL_REGISTRATION_REWARD_ACCOUNT = Internal.createIndex(DSL.name("idx_pool_registration_reward_account"), PoolRegistration.POOL_REGISTRATION, new OrderField[] { PoolRegistration.POOL_REGISTRATION.REWARD_ACCOUNT }, false);
    public static final Index IDX_POOL_REGISTRATION_SLOT = Internal.createIndex(DSL.name("idx_pool_registration_slot"), PoolRegistration.POOL_REGISTRATION, new OrderField[] { PoolRegistration.POOL_REGISTRATION.SLOT }, false);
    public static final Index IDX_POOL_REGISTRATION_TXHASH = Internal.createIndex(DSL.name("idx_pool_registration_txhash"), PoolRegistration.POOL_REGISTRATION, new OrderField[] { PoolRegistration.POOL_REGISTRATION.TX_HASH }, false);
    public static final Index IDX_POOL_RETIREMENT_POOL_ID = Internal.createIndex(DSL.name("idx_pool_retirement_pool_id"), PoolRetirement.POOL_RETIREMENT, new OrderField[] { PoolRetirement.POOL_RETIREMENT.POOL_ID }, false);
    public static final Index IDX_POOL_RETIREMENT_RETIREMENT_EPOCH = Internal.createIndex(DSL.name("idx_pool_retirement_retirement_epoch"), PoolRetirement.POOL_RETIREMENT, new OrderField[] { PoolRetirement.POOL_RETIREMENT.RETIREMENT_EPOCH }, false);
    public static final Index IDX_POOL_RETIREMENT_SLOT = Internal.createIndex(DSL.name("idx_pool_retirement_slot"), PoolRetirement.POOL_RETIREMENT, new OrderField[] { PoolRetirement.POOL_RETIREMENT.SLOT }, false);
    public static final Index IDX_POOL_RETIREMENT_TXHASH = Internal.createIndex(DSL.name("idx_pool_retirement_txhash"), PoolRetirement.POOL_RETIREMENT, new OrderField[] { PoolRetirement.POOL_RETIREMENT.TX_HASH }, false);
    public static final Index IDX_PROTOCOL_PARAMS_PROPOSAL_EPOCH = Internal.createIndex(DSL.name("idx_protocol_params_proposal_epoch"), ProtocolParamsProposal.PROTOCOL_PARAMS_PROPOSAL, new OrderField[] { ProtocolParamsProposal.PROTOCOL_PARAMS_PROPOSAL.EPOCH }, false);
    public static final Index IDX_PROTOCOL_PARAMS_PROPOSAL_SLOT = Internal.createIndex(DSL.name("idx_protocol_params_proposal_slot"), ProtocolParamsProposal.PROTOCOL_PARAMS_PROPOSAL, new OrderField[] { ProtocolParamsProposal.PROTOCOL_PARAMS_PROPOSAL.SLOT }, false);
    public static final Index IDX_PROTOCOL_PARAMS_PROPOSAL_TARGET_EPOCH = Internal.createIndex(DSL.name("idx_protocol_params_proposal_target_epoch"), ProtocolParamsProposal.PROTOCOL_PARAMS_PROPOSAL, new OrderField[] { ProtocolParamsProposal.PROTOCOL_PARAMS_PROPOSAL.TARGET_EPOCH }, false);
    public static final Index IDX_REFERENCE_SCRIPT_HASH = Internal.createIndex(DSL.name("idx_reference_script_hash"), AddressUtxo.ADDRESS_UTXO, new OrderField[] { AddressUtxo.ADDRESS_UTXO.REFERENCE_SCRIPT_HASH }, false);
    public static final Index IDX_STAKE_REGISTRATION_SLOT = Internal.createIndex(DSL.name("idx_stake_registration_slot"), StakeRegistration.STAKE_REGISTRATION, new OrderField[] { StakeRegistration.STAKE_REGISTRATION.SLOT }, false);
    public static final Index IDX_STAKE_REGISTRATION_STAKE_ADDRESS = Internal.createIndex(DSL.name("idx_stake_registration_stake_address"), StakeRegistration.STAKE_REGISTRATION, new OrderField[] { StakeRegistration.STAKE_REGISTRATION.ADDRESS }, false);
    public static final Index IDX_STAKE_REGISTRATION_STAKE_CREDENTIAL = Internal.createIndex(DSL.name("idx_stake_registration_stake_credential"), StakeRegistration.STAKE_REGISTRATION, new OrderField[] { StakeRegistration.STAKE_REGISTRATION.CREDENTIAL }, false);
    public static final Index IDX_STAKE_REGISTRATION_STAKE_TXHASH = Internal.createIndex(DSL.name("idx_stake_registration_stake_txhash"), StakeRegistration.STAKE_REGISTRATION, new OrderField[] { StakeRegistration.STAKE_REGISTRATION.TX_HASH }, false);
    public static final Index IDX_STAKE_REGISTRATION_TYPE = Internal.createIndex(DSL.name("idx_stake_registration_type"), StakeRegistration.STAKE_REGISTRATION, new OrderField[] { StakeRegistration.STAKE_REGISTRATION.TYPE }, false);
    public static final Index IDX_TRANSACTION_BLOCK = Internal.createIndex(DSL.name("idx_transaction_block"), Transaction.TRANSACTION, new OrderField[] { Transaction.TRANSACTION.BLOCK }, false);
    public static final Index IDX_TRANSACTION_BLOCK_HASH = Internal.createIndex(DSL.name("idx_transaction_block_hash"), Transaction.TRANSACTION, new OrderField[] { Transaction.TRANSACTION.BLOCK_HASH }, false);
    public static final Index IDX_TRANSACTION_SLOT = Internal.createIndex(DSL.name("idx_transaction_slot"), Transaction.TRANSACTION, new OrderField[] { Transaction.TRANSACTION.SLOT }, false);
    public static final Index IDX_TRANSACTION_WITNESS_SLOT = Internal.createIndex(DSL.name("idx_transaction_witness_slot"), TransactionWitness.TRANSACTION_WITNESS, new OrderField[] { TransactionWitness.TRANSACTION_WITNESS.SLOT }, false);
    public static final Index IDX_TRANSACTION_WITNESS_TX_HASH = Internal.createIndex(DSL.name("idx_transaction_witness_tx_hash"), TransactionWitness.TRANSACTION_WITNESS, new OrderField[] { TransactionWitness.TRANSACTION_WITNESS.TX_HASH }, false);
    public static final Index IDX_TX_INPUT_BLOCK = Internal.createIndex(DSL.name("idx_tx_input_block"), TxInput.TX_INPUT, new OrderField[] { TxInput.TX_INPUT.SPENT_AT_BLOCK }, false);
    public static final Index IDX_TX_INPUT_SLOT = Internal.createIndex(DSL.name("idx_tx_input_slot"), TxInput.TX_INPUT, new OrderField[] { TxInput.TX_INPUT.SPENT_AT_SLOT }, false);
    public static final Index IDX_WITHDRAWAL_ADDRESS = Internal.createIndex(DSL.name("idx_withdrawal_address"), Withdrawal.WITHDRAWAL, new OrderField[] { Withdrawal.WITHDRAWAL.ADDRESS }, false);
    public static final Index IDX_WITHDRAWAL_SLOT = Internal.createIndex(DSL.name("idx_withdrawal_slot"), Withdrawal.WITHDRAWAL, new OrderField[] { Withdrawal.WITHDRAWAL.SLOT }, false);
    public static final Index IDX_WITHDRAWAL_TX_HASH = Internal.createIndex(DSL.name("idx_withdrawal_tx_hash"), Withdrawal.WITHDRAWAL, new OrderField[] { Withdrawal.WITHDRAWAL.TX_HASH }, false);
}
