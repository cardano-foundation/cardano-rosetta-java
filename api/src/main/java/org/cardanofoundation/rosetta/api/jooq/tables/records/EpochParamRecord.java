/*
 * This file is generated by jOOQ.
 */
package org.cardanofoundation.rosetta.api.jooq.tables.records;


import java.time.LocalDateTime;

import org.cardanofoundation.rosetta.api.jooq.tables.EpochParam;
import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class EpochParamRecord extends UpdatableRecordImpl<EpochParamRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>preprod.epoch_param.epoch</code>.
     */
    public void setEpoch(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>preprod.epoch_param.epoch</code>.
     */
    public Integer getEpoch() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>preprod.epoch_param.params</code>.
     */
    public void setParams(JSONB value) {
        set(1, value);
    }

    /**
     * Getter for <code>preprod.epoch_param.params</code>.
     */
    public JSONB getParams() {
        return (JSONB) get(1);
    }

    /**
     * Setter for <code>preprod.epoch_param.cost_model_hash</code>.
     */
    public void setCostModelHash(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>preprod.epoch_param.cost_model_hash</code>.
     */
    public String getCostModelHash() {
        return (String) get(2);
    }

    /**
     * Setter for <code>preprod.epoch_param.slot</code>.
     */
    public void setSlot(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>preprod.epoch_param.slot</code>.
     */
    public Long getSlot() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>preprod.epoch_param.block</code>.
     */
    public void setBlock(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>preprod.epoch_param.block</code>.
     */
    public Long getBlock() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>preprod.epoch_param.block_time</code>.
     */
    public void setBlockTime(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>preprod.epoch_param.block_time</code>.
     */
    public Long getBlockTime() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>preprod.epoch_param.update_datetime</code>.
     */
    public void setUpdateDatetime(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>preprod.epoch_param.update_datetime</code>.
     */
    public LocalDateTime getUpdateDatetime() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EpochParamRecord
     */
    public EpochParamRecord() {
        super(EpochParam.EPOCH_PARAM);
    }

    /**
     * Create a detached, initialised EpochParamRecord
     */
    public EpochParamRecord(Integer epoch, JSONB params, String costModelHash, Long slot, Long block, Long blockTime, LocalDateTime updateDatetime) {
        super(EpochParam.EPOCH_PARAM);

        setEpoch(epoch);
        setParams(params);
        setCostModelHash(costModelHash);
        setSlot(slot);
        setBlock(block);
        setBlockTime(blockTime);
        setUpdateDatetime(updateDatetime);
        resetChangedOnNotNull();
    }
}
