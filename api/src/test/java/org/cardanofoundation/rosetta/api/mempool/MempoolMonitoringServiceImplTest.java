//package org.cardanofoundation.rosetta.api.mempool;
//
//import com.fasterxml.jackson.core.JsonProcessingException;
//import jakarta.annotation.PostConstruct;
//import jakarta.annotation.PreDestroy;
//import org.cardanofoundation.rosetta.api.IntegrationTest;
//import org.cardanofoundation.rosetta.api.IntegrationTestWithDB;
//import org.cardanofoundation.rosetta.api.IntegrationTestWithDbAndRedis;
//import org.cardanofoundation.rosetta.api.exception.Error;
//import org.cardanofoundation.rosetta.api.model.TransactionIdentifier;
//import org.cardanofoundation.rosetta.api.model.rest.*;
//import org.cardanofoundation.rosetta.common.services.CardanoService;
//import org.cardanofoundation.rosetta.api.service.impl.MempoolMonitoringServiceImpl;
//import org.cardanofoundation.rosetta.api.util.RosettaConstants;
//import org.junit.jupiter.api.BeforeEach;
//import org.junit.jupiter.api.Test;
//import org.junit.jupiter.api.TestInstance;
//import org.junit.jupiter.api.TestInstance.Lifecycle;
//import org.junit.jupiter.api.extension.ExtendWith;
//import org.mockito.InjectMocks;
//import org.mockito.junit.jupiter.MockitoExtension;
//import org.springframework.beans.factory.annotation.Autowired;
//import org.springframework.beans.factory.annotation.Qualifier;
//import org.springframework.beans.factory.annotation.Value;
//import org.springframework.data.redis.core.RedisTemplate;
//import org.springframework.web.client.HttpServerErrorException;
//import redis.embedded.RedisServer;
//
//import static org.assertj.core.api.Assertions.assertThat;
//import static org.junit.jupiter.api.Assertions.assertEquals;
//import static org.junit.jupiter.api.Assertions.assertTrue;
//
//@ExtendWith(MockitoExtension.class)
//@TestInstance(Lifecycle.PER_CLASS)
//public class MempoolMonitoringServiceImplTest extends IntegrationTestWithDbAndRedis {
//
//  @Autowired
//  private CardanoService cardanoService;
//  @InjectMocks
//  private MempoolMonitoringServiceImpl mempoolMonitoringService;
//  private NetworkRequest networkRequest;
//  private MempoolTransactionRequest mempoolTransactionRequest;
//
//  @BeforeEach
//  void setUp() {
//    mempoolMonitoringService = new MempoolMonitoringServiceImpl(cardanoService);
//    NetworkIdentifier identifier = NetworkIdentifier.builder()
//        .blockchain(RosettaConstants.BLOCKCHAIN_NAME)
//        .network(RosettaConstants.MAINNET).build();
//    networkRequest = new NetworkRequest();
//    networkRequest.setNetworkIdentifier(identifier);
//    mempoolTransactionRequest = new MempoolTransactionRequest();
//    mempoolTransactionRequest.setNetworkIdentifier(identifier);
//  }
//  @Test
//  void test_MempoolMonitoringService_getAllTransaction_returns_empty_when_dont_have_transactions_in_mempool() {
//    MempoolResponse mempoolResponse = restTemplate.postForObject(
//        baseUrl.concat(":").concat(String.valueOf(serverPort)).concat("/mempool"),
//        mempoolTransactionRequest,
//        MempoolResponse.class
//    );
//    assertEquals(0, mempoolResponse.getTransactionIdentifierList().size());
//  }
//
//  @Test
//  void test_MempoolMonitoringService_getAllTransaction_returns_transactions_hash_when_have_transactions_in_mempool() {
////    redisTemplate.opsForValue().set("mempooledd724b2a96a8a27f176125d25cb296fe301511cc9b2da8bffeef46d8fae794c" ,
////        "8279020aa16a6f7065726174696f6e7380") ;
////    redisTemplate.opsForValue().set("mempoola1acec653fa426c5a5d8894f40d2b606fd005f43719fb79c9315872803285e08" ,
////        "82790252383461343030383338323538323039353561663635386135353435353163663638373831653035616532613062666437653362316536653963613464346130613066366665343865636662393664303038323538323039663030646265663438326237323464363631626663396639323164386264626366633232383866323439313862613637343335656439353132656164376361303038323538323064383462306661323737653566306332363339326131323930383537663762656639336131326536323061653134313866393338333661343936643261393739303030313831383235383339303030373433643136636665336334666363306331316332343033626263313064626337656364643434373765303533343831613336386537613036653261653434646666363737306463306634616461336366346366323630353030386532376165636462333332616433343966646137316130316465356366303032316130303139326435303033316130316539356238386131303038313832353832306631626431393865323736386137383837346335366263653938303163313736616631373862383163646530616134663964323864383566333732323038656235383430346165346662633865613961643035323030353866363032373636613737633365656437326139313438313266613063623863356339663962333865343166653933643736316262613833623631623535313965343735316561636563353830386637333866373730333466336161306363333462633033353261613364303166356636a16a6f7065726174696f6e7380") ;
//
////    MempoolResponse mempoolResponse = mempoolMonitoringService.getAllTransaction(networkRequest);
//    MempoolResponse mempoolResponse = restTemplate.postForObject(
//        baseUrl.concat(":").concat(String.valueOf(serverPort)).concat("/mempool"),
//        mempoolTransactionRequest,
//        MempoolResponse.class
//    );
//
//    assertEquals(2, mempoolResponse.getTransactionIdentifierList().size());
//    assertThat(mempoolResponse.getTransactionIdentifierList())
//        .filteredOn(transactionIdentifier -> transactionIdentifier.getHash()
//            .equals("edd724b2a96a8a27f176125d25cb296fe301511cc9b2da8bffeef46d8fae794c")
//        ).isNotEmpty();
//    assertThat(mempoolResponse.getTransactionIdentifierList())
//        .filteredOn(transactionIdentifier -> transactionIdentifier.getHash()
//            .equals("a1acec653fa426c5a5d8894f40d2b606fd005f43719fb79c9315872803285e08")
//        ).isNotEmpty();
//
//  }
//  @Test
//  void test_MempoolMornitoringService_GetDetailTransaction_return_null()
//      throws JsonProcessingException {
////    redisTemplate.opsForValue().set("mempooledd724b2a96a8a27f176125d25cb296fe301511cc9b2da8bffeef46d8fae794c" ,
////        "8279020a383461343030383238323538323039353561663635386135353435353163663638373831653035616532613062666437653362316536653963613464346130613066366665343865636662393664303038323538323064383462306661323737653566306332363339326131323930383537663762656639336131326536323061653134313866393338333661343936643261393739303030313831383235383339303030373433643136636665336334666363306331316332343033626263313064626337656364643434373765303533343831613336386537613036653261653434646666363737306463306634616461336366346366323630353030386532376165636462333332616433343966646137316130313365653861303032316130303130633865303033316130316539356130356131303038313832353832306631626431393865323736386137383837346335366263653938303163313736616631373862383163646530616134663964323864383566333732323038656235383430346130623562393165623534326165346465313666633332626264383133616130326461336532623362613665393739343237333134323039643830303732366638616538646531653364643632633630363331343261383462323363333963306436333534353164323138353265383834633764636333303363313335306366356636a16a6f7065726174696f6e7380") ;
//    TransactionIdentifier transactionIdentifier = new TransactionIdentifier("transactionHash");
//    mempoolTransactionRequest.setTransactionIdentifier(transactionIdentifier);
//    try{
//      restTemplate.postForEntity(
//          baseUrl.concat(":").concat(String.valueOf(serverPort)).concat("/mempool/transaction"),
//          mempoolTransactionRequest,
//          MempoolTransactionResponse.class
//      );
//    } catch (HttpServerErrorException e){
//      String responseBody = e.getResponseBodyAsString();
//      Error error = objectMapper.readValue(responseBody, Error.class);
//      assertTrue(error.isRetriable());
//      assertEquals(5000, error.getCode());
//      assertEquals("An error occurred",
//          error.getMessage());
//    }
//  }
//
//
//
//  @Test
//  void test_MempoolMornitoringService_GetDetailTransaction_return_detail_transaction_when_have_transaction_in_mempool()
//      {
////    redisTemplate.opsForValue().set("mempooledd724b2a96a8a27f176125d25cb296fe301511cc9b2da8bffeef46d8fae794c" ,
////        "8279020aa16a6f7065726174696f6e7380") ;
////    redisTemplate.opsForValue().set("mempoola1acec653fa426c5a5d8894f40d2b606fd005f43719fb79c9315872803285e08" ,
////        "82790252383461343030383338323538323039353561663635386135353435353163663638373831653035616532613062666437653362316536653963613464346130613066366665343865636662393664303038323538323039663030646265663438326237323464363631626663396639323164386264626366633232383866323439313862613637343335656439353132656164376361303038323538323064383462306661323737653566306332363339326131323930383537663762656639336131326536323061653134313866393338333661343936643261393739303030313831383235383339303030373433643136636665336334666363306331316332343033626263313064626337656364643434373765303533343831613336386537613036653261653434646666363737306463306634616461336366346366323630353030386532376165636462333332616433343966646137316130316465356366303032316130303139326435303033316130316539356238386131303038313832353832306631626431393865323736386137383837346335366263653938303163313736616631373862383163646530616134663964323864383566333732323038656235383430346165346662633865613961643035323030353866363032373636613737633365656437326139313438313266613063623863356339663962333865343166653933643736316262613833623631623535313965343735316561636563353830386637333866373730333466336161306363333462633033353261613364303166356636a16a6f7065726174696f6e7380") ;
//
//    TransactionIdentifier transactionIdentifier = new TransactionIdentifier();
//    transactionIdentifier.setHash("edd724b2a96a8a27f176125d25cb296fe301511cc9b2da8bffeef46d8fae794c");
//    mempoolTransactionRequest.setTransactionIdentifier(transactionIdentifier);
//    MempoolTransactionResponse mempoolTransactionResponse = restTemplate.postForObject(
//        baseUrl.concat(":").concat(String.valueOf(serverPort)).concat("/mempool/transaction"),
//        mempoolTransactionRequest,
//        MempoolTransactionResponse.class
//    );
//    assert mempoolTransactionResponse != null;
//    System.out.println("Operations : " + mempoolTransactionResponse.getTransaction().getOperations());
//    assertEquals(3 , mempoolTransactionResponse.getTransaction().getOperations().size());
//    assertEquals("edd724b2a96a8a27f176125d25cb296fe301511cc9b2da8bffeef46d8fae794c" ,
//        mempoolTransactionResponse.getTransaction().getTransactionIdentifier().getHash());
//  }
//}
