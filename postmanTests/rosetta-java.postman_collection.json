{
	"info": {
		"_postman_id": "0bd398f9-8919-4b31-9a8a-6b38bd418d94",
		"name": "rosetta-java",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22770953",
		"_collection_link": "https://universal-water-431619.postman.co/workspace/My-Workspace~207852b0-2ada-455f-838b-25731ed1d6fa/collection/22770953-0bd398f9-8919-4b31-9a8a-6b38bd418d94?action=share&source=collection_link&creator=22770953"
	},
	"item": [
		{
			"name": "construction",
			"item": [
				{
					"name": "preprocess",
					"item": [
						{
							"name": "withdrawals",
							"item": [
								{
									"name": "(-) fee is negative",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"network_identifier\": {\n    \"blockchain\": \"cardano\",\n    \"network\": \"{{networkId}}\"\n  },\n  \"operations\": [\n        {\n            \"operation_identifier\": {\n                \"index\": 0\n            },\n            \"type\": \"input\",\n            \"account\": {\n                \"address\": \"addr_test1qrtdh7587yz5m2w504sjhqnrfml5fpcuxu24fj8xwvk48artcrahhulmvvsnmwqk2k3nmrz20sw8uj7htlpnlutk0p9sjfnd3n\"\n            },\n            \"amount\": {\n                \"value\": \"-10000000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            },\n            \"coin_change\": {\n                \"coin_identifier\": {\n                    \"identifier\": \"727b898a39fe9039e82d4962d7282090ea5dde37a26d423b8f2e77a79955428e:8\"\n                },\n                \"coin_action\": \"coin_spent\"\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 1\n            },\n            \"type\": \"output\",\n            \"account\": {\n                \"address\": \"addr_test1qrtdh7587yz5m2w504sjhqnrfml5fpcuxu24fj8xwvk48artcrahhulmvvsnmwqk2k3nmrz20sw8uj7htlpnlutk0p9sjfnd3n\"\n            },\n            \"amount\": {\n                \"value\": \"16000000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 2\n            },\n            \"type\": \"withdrawal\",\n            \"account\": {\n                \"address\": \"stake_test1up4up7mm70akxgfahqt9tgea3398c8r7f0t4lsel79m8sjcs4vmjm\"\n            },\n            \"amount\": {\n                \"value\": \"5000000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            },\n            \"metadata\": {\n                \"staking_credential\": {\n                    \"hex_bytes\": \"8df7aadf70ae8a81dc6c9cead4994b36fabe7c0a13c164a1b15c0443fe60dfe2\",\n                    \"curve_type\": \"edwards25519\"\n                }\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/construction/preprocess",
											"host": [
												"{{URL}}"
											],
											"path": [
												"construction",
												"preprocess"
											]
										}
									},
									"response": []
								},
								{
									"name": "(-) fee 0",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"network_identifier\": {\n    \"blockchain\": \"cardano\",\n    \"network\": \"{{networkId}}\"\n  },\n  \"operations\": [\n        {\n            \"operation_identifier\": {\n                \"index\": 0\n            },\n            \"type\": \"input\",\n            \"account\": {\n                \"address\": \"addr_test1qrtdh7587yz5m2w504sjhqnrfml5fpcuxu24fj8xwvk48artcrahhulmvvsnmwqk2k3nmrz20sw8uj7htlpnlutk0p9sjfnd3n\"\n            },\n            \"amount\": {\n                \"value\": \"-10000000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            },\n            \"coin_change\": {\n                \"coin_identifier\": {\n                    \"identifier\": \"727b898a39fe9039e82d4962d7282090ea5dde37a26d423b8f2e77a79955428e:8\"\n                },\n                \"coin_action\": \"coin_spent\"\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 1\n            },\n            \"type\": \"output\",\n            \"account\": {\n                \"address\": \"addr_test1qrtdh7587yz5m2w504sjhqnrfml5fpcuxu24fj8xwvk48artcrahhulmvvsnmwqk2k3nmrz20sw8uj7htlpnlutk0p9sjfnd3n\"\n            },\n            \"amount\": {\n                \"value\": \"15000000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 2\n            },\n            \"type\": \"withdrawal\",\n            \"account\": {\n                \"address\": \"stake_test1up4up7mm70akxgfahqt9tgea3398c8r7f0t4lsel79m8sjcs4vmjm\"\n            },\n            \"amount\": {\n                \"value\": \"5000000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            },\n            \"metadata\": {\n                \"staking_credential\": {\n                    \"hex_bytes\": \"8df7aadf70ae8a81dc6c9cead4994b36fabe7c0a13c164a1b15c0443fe60dfe2\",\n                    \"curve_type\": \"edwards25519\"\n                }\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/construction/preprocess",
											"host": [
												"{{URL}}"
											],
											"path": [
												"construction",
												"preprocess"
											]
										}
									},
									"response": []
								},
								{
									"name": "(+) fee 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"network_identifier\": {\n    \"blockchain\": \"cardano\",\n    \"network\": \"{{networkId}}\"\n  },\n  \"operations\": [\n        {\n            \"operation_identifier\": {\n                \"index\": 0\n            },\n            \"type\": \"input\",\n            \"account\": {\n                \"address\": \"addr_test1qrtdh7587yz5m2w504sjhqnrfml5fpcuxu24fj8xwvk48artcrahhulmvvsnmwqk2k3nmrz20sw8uj7htlpnlutk0p9sjfnd3n\"\n            },\n            \"amount\": {\n                \"value\": \"-10000000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            },\n            \"coin_change\": {\n                \"coin_identifier\": {\n                    \"identifier\": \"727b898a39fe9039e82d4962d7282090ea5dde37a26d423b8f2e77a79955428e:8\"\n                },\n                \"coin_action\": \"coin_spent\"\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 1\n            },\n            \"type\": \"output\",\n            \"account\": {\n                \"address\": \"addr_test1qrtdh7587yz5m2w504sjhqnrfml5fpcuxu24fj8xwvk48artcrahhulmvvsnmwqk2k3nmrz20sw8uj7htlpnlutk0p9sjfnd3n\"\n            },\n            \"amount\": {\n                \"value\": \"14000000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 2\n            },\n            \"type\": \"withdrawal\",\n            \"account\": {\n                \"address\": \"stake_test1up4up7mm70akxgfahqt9tgea3398c8r7f0t4lsel79m8sjcs4vmjm\"\n            },\n            \"amount\": {\n                \"value\": \"5000000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            },\n            \"metadata\": {\n                \"staking_credential\": {\n                    \"hex_bytes\": \"8df7aadf70ae8a81dc6c9cead4994b36fabe7c0a13c164a1b15c0443fe60dfe2\",\n                    \"curve_type\": \"edwards25519\"\n                }\n            }\n        }\n    ],\n  \"metadata\": {\n    \"ttl\": 93835306,\n    \"protocol_parameters\": {\n      \"coinsPerUtxoSize\": \"4310\",\n      \"maxTxSize\": 16384,\n      \"maxValSize\": 5000,\n      \"keyDeposit\": \"2000000\",\n      \"maxCollateralInputs\": 3,\n      \"minFeeCoefficient\": 44,\n      \"minFeeConstant\": 155381,\n      \"minPoolCost\": \"170000000\",\n      \"poolDeposit\": \"500000000\",\n      \"protocol\": 10\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/construction/preprocess",
											"host": [
												"{{URL}}"
											],
											"path": [
												"construction",
												"preprocess"
											]
										}
									},
									"response": []
								},
								{
									"name": "(+) fee 14",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"network_identifier\": {\n    \"blockchain\": \"cardano\",\n    \"network\": \"{{networkId}}\"\n  },\n  \"operations\": [\n        {\n            \"operation_identifier\": {\n                \"index\": 0\n            },\n            \"type\": \"input\",\n            \"account\": {\n                \"address\": \"addr_test1qrtdh7587yz5m2w504sjhqnrfml5fpcuxu24fj8xwvk48artcrahhulmvvsnmwqk2k3nmrz20sw8uj7htlpnlutk0p9sjfnd3n\"\n            },\n            \"amount\": {\n                \"value\": \"-10000000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            },\n            \"coin_change\": {\n                \"coin_identifier\": {\n                    \"identifier\": \"727b898a39fe9039e82d4962d7282090ea5dde37a26d423b8f2e77a79955428e:8\"\n                },\n                \"coin_action\": \"coin_spent\"\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 1\n            },\n            \"type\": \"output\",\n            \"account\": {\n                \"address\": \"addr_test1qrtdh7587yz5m2w504sjhqnrfml5fpcuxu24fj8xwvk48artcrahhulmvvsnmwqk2k3nmrz20sw8uj7htlpnlutk0p9sjfnd3n\"\n            },\n            \"amount\": {\n                \"value\": \"1000000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 2\n            },\n            \"type\": \"withdrawal\",\n            \"account\": {\n                \"address\": \"stake_test1up4up7mm70akxgfahqt9tgea3398c8r7f0t4lsel79m8sjcs4vmjm\"\n            },\n            \"amount\": {\n                \"value\": \"5000000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            },\n            \"metadata\": {\n                \"staking_credential\": {\n                    \"hex_bytes\": \"8df7aadf70ae8a81dc6c9cead4994b36fabe7c0a13c164a1b15c0443fe60dfe2\",\n                    \"curve_type\": \"edwards25519\"\n                }\n            }\n        }\n    ],\n  \"metadata\": {\n    \"ttl\": 93835306,\n    \"protocol_parameters\": {\n      \"coinsPerUtxoSize\": \"4310\",\n      \"maxTxSize\": 16384,\n      \"maxValSize\": 5000,\n      \"keyDeposit\": \"2000000\",\n      \"maxCollateralInputs\": 3,\n      \"minFeeCoefficient\": 44,\n      \"minFeeConstant\": 155381,\n      \"minPoolCost\": \"170000000\",\n      \"poolDeposit\": \"500000000\",\n      \"protocol\": 10\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/construction/preprocess",
											"host": [
												"{{URL}}"
											],
											"path": [
												"construction",
												"preprocess"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"packages": {},
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"packages": {},
										"exec": [
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"pm.test('Contains Json Body', function () {",
											"    pm.response.to.have.jsonBody('options');",
											"})",
											"",
											"pm.test(\"Has correct response status and options values\", function () {",
											"    var responseData = pm.response.json();",
											"    pm.expect(pm.response.status).to.equal('OK', 'request has failed!');",
											"    pm.expect(responseData.options.relative_ttl).to.equal(1000, 'relative_ttl is not correct');",
											"    pm.expect(responseData.options.transaction_size).to.be.oneOf([368, 370], 'transaction_size is not correct');",
											"});",
											""
										]
									}
								}
							]
						},
						{
							"name": "spo_voting",
							"item": [
								{
									"name": "gov pool voting - account - vote yes, no vote rationale",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Status code is 200', function () {",
													"    pm.response.to.have.status(200);",
													"})",
													"console.log(pm.response.json())",
													"",
													"pm.test('Contains Json Body', function () {",
													"    pm.response.to.have.jsonBody('options');",
													"})",
													"",
													"pm.test(\"Correct Values\", function () {",
													"    var responseData = pm.response.json();",
													"    pm.expect(responseData).to.be.an('object');",
													"    pm.expect(responseData.options.relative_ttl).to.eql(100.0);",
													"    pm.expect(responseData.options.transaction_size).to.be.oneOf([411.0, 408.0]);",
													"});",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"network_identifier\": {\n        \"blockchain\": \"cardano\",\n        \"network\": \"{{networkId}}\"\n    },\n    \"metadata\": {\n        \"relative_ttl\": 100,\n        \"deposit_parameters\": {\n            \"poolDeposit\": \"500000000\",\n            \"keyDeposit\": \"2000000\"\n        }\n    },\n    \"operations\": [\n        {\n            \"operation_identifier\": {\n                \"index\": 0,\n                \"network_index\": 0\n            },\n            \"type\": \"input\",\n            \"status\": \"success\",\n            \"account\": {\n                \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n            },\n            \"amount\": {\n                \"value\": \"-90000000000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            },\n            \"coin_change\": {\n                \"coin_identifier\": {\n                    \"identifier\": \"2f23fd8cca835af21f3ac375bac601f97ead75f2e79143bdf71fe2c4be043e8f:1\"\n                },\n                \"coin_action\": \"coin_spent\"\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 1\n            },\n            \"related_operations\": [\n                {\n                    \"index\": 0\n                }\n            ],\n            \"type\": \"output\",\n            \"status\": \"success\",\n            \"account\": {\n                \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n            },\n            \"amount\": {\n                \"value\": \"10000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 2\n            },\n            \"related_operations\": [\n                {\n                    \"index\": 0\n                }\n            ],\n            \"type\": \"output\",\n            \"status\": \"success\",\n            \"account\": {\n                \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n            },\n            \"amount\": {\n                \"value\": \"40000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 3\n            },\n            \"type\": \"poolGovernanceVote\",\n            \"status\": \"success\",\n            \"account\": {\n                \"address\": \"6c518b4861bb88b1395ceb116342cecbcfb8736282655f9a61c4c368\"\n            },\n            \"metadata\": {\n                \"poolGovernanceVoteParams\": {\n                    \"governance_action_hash\": \"40c2a42fe324759a640dcfddbc69ef2e3b7fe5a998af8d6660359772bf44c9dc00\",\n                    \"pool_credential\": {\n                        \"hex_bytes\": \"60afbe982faaee34b02ad0e75cd50d5d7a734f5daaf7b67bc8c492eb5299af2b\",\n                        \"curve_type\": \"edwards25519\"\n                    },\n                    \"vote\": \"yes\"\n                }\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 4\n            },\n            \"type\": \"poolGovernanceVote\",\n            \"status\": \"success\",\n            \"account\": {\n                \"address\": \"6c518b4861bb88b1395ceb116342cecbcfb8736282655f9a61c4c368\"\n            },\n            \"metadata\": {\n                \"poolGovernanceVoteParams\": {\n                    \"governance_action_hash\": \"40c2a42fe324759a640dcfddbc69ef2e3b7fe5a998af8d6660359772bf44c9dc00\",\n                    \"pool_credential\": {\n                        \"hex_bytes\": \"582060afbe982faaee34b02ad0e75cd50d5d7a734f5daaf7b67bc8c492eb5299af2b\",\n                        \"curve_type\": \"edwards25519\"\n                    },\n                    \"vote\": \"yes\"\n                }\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/construction/preprocess",
											"host": [
												"{{URL}}"
											],
											"path": [
												"construction",
												"preprocess"
											]
										}
									},
									"response": []
								},
								{
									"name": "gov pool voting - account - vote yes, keys mismatch",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {",
													"    pm.response.to.have.status(500);",
													"});",
													"",
													"pm.test(\"Error code is 5047\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.code).to.eql(5047);",
													"});",
													"",
													"pm.test(\"Error message is 'Governance vote is invalid'\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Invalid governance vote, reason: Pool key hash passed as account.address does not match with pool credential key hash!\");",
													"});",
													"",
													"pm.test(\"Retriable is false\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.retriable).to.eql(false);",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"network_identifier\": {\n        \"blockchain\": \"cardano\",\n        \"network\": \"{{networkId}}\"\n    },\n    \"metadata\": {\n        \"relative_ttl\": 100,\n        \"deposit_parameters\": {\n            \"poolDeposit\": \"500000000\",\n            \"keyDeposit\": \"2000000\"\n        }\n    },\n    \"operations\": [\n        {\n            \"operation_identifier\": {\n                \"index\": 0,\n                \"network_index\": 0\n            },\n            \"type\": \"input\",\n            \"status\": \"success\",\n            \"account\": {\n                \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n            },\n            \"amount\": {\n                \"value\": \"-90000000000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            },\n            \"coin_change\": {\n                \"coin_identifier\": {\n                    \"identifier\": \"2f23fd8cca835af21f3ac375bac601f97ead75f2e79143bdf71fe2c4be043e8f:1\"\n                },\n                \"coin_action\": \"coin_spent\"\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 1\n            },\n            \"related_operations\": [\n                {\n                    \"index\": 0\n                }\n            ],\n            \"type\": \"output\",\n            \"status\": \"success\",\n            \"account\": {\n                \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n            },\n            \"amount\": {\n                \"value\": \"10000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 2\n            },\n            \"related_operations\": [\n                {\n                    \"index\": 0\n                }\n            ],\n            \"type\": \"output\",\n            \"status\": \"success\",\n            \"account\": {\n                \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n            },\n            \"amount\": {\n                \"value\": \"40000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 3\n            },\n            \"type\": \"poolGovernanceVote\",\n            \"status\": \"success\",\n            \"account\": {\n                \"address\": \"6c518b4861bb88b1395ceb116342cecbcfb8736282655f9a61c4c368\"\n            },\n            \"metadata\": {\n                \"poolGovernanceVoteParams\": {\n                    \"governance_action_hash\": \"40c2a42fe324759a640dcfddbc69ef2e3b7fe5a998af8d6660359772bf44c9dc00\",\n                    \"pool_credential\": {\n                        \"hex_bytes\": \"60afbe982faaee34b02ad0e75cd50d5d7a734f5daaf7b67bc8c492eb5299af2b\",\n                        \"curve_type\": \"edwards25519\"\n                    },\n                    \"vote\": \"yes\"\n                }\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 4\n            },\n            \"type\": \"poolGovernanceVote\",\n            \"status\": \"success\",\n            \"account\": {\n                \"address\": \"6c518b4861bb88b1395ceb116342cecbcfb8736282655f9a61c4c368\"\n            },\n            \"metadata\": {\n                \"poolGovernanceVoteParams\": {\n                    \"governance_action_hash\": \"40c2a42fe324759a640dcfddbc69ef2e3b7fe5a998af8d6660359772bf44c9dc00\",\n                    \"pool_credential\": {\n                        \"hex_bytes\": \"582060afbe982faaee34b02ad0e75cd50d5d7a734f5daaf7b67bc8c492eb5299af2c\",\n                        \"curve_type\": \"edwards25519\"\n                    },\n                    \"vote\": \"yes\"\n                }\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/construction/preprocess",
											"host": [
												"{{URL}}"
											],
											"path": [
												"construction",
												"preprocess"
											]
										}
									},
									"response": []
								},
								{
									"name": "gov pool voting - account bech32 - vote no, no vote rationale",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Status code is 200', function () {",
													"    pm.response.to.have.status(200);",
													"})",
													"console.log(pm.response.json())",
													"",
													"pm.test('Contains Json Body', function () {",
													"    pm.response.to.have.jsonBody('options');",
													"})",
													"",
													"pm.test(\"Correct Values\", function () {",
													"    var responseData = pm.response.json();",
													"    pm.expect(responseData).to.be.an('object');",
													"    pm.expect(responseData.options.relative_ttl).to.eql(100.0);",
													"    pm.expect(responseData.options.transaction_size).to.be.oneOf([411.0, 408.0]);",
													"});",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"network_identifier\": {\n        \"blockchain\": \"cardano\",\n        \"network\": \"{{networkId}}\"\n    },\n    \"metadata\": {\n        \"relative_ttl\": 100,\n        \"deposit_parameters\": {\n            \"poolDeposit\": \"500000000\",\n            \"keyDeposit\": \"2000000\"\n        }\n    },\n    \"operations\": [\n        {\n            \"operation_identifier\": {\n                \"index\": 0,\n                \"network_index\": 0\n            },\n            \"type\": \"input\",\n            \"status\": \"success\",\n            \"account\": {\n                \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n            },\n            \"amount\": {\n                \"value\": \"-90000000000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            },\n            \"coin_change\": {\n                \"coin_identifier\": {\n                    \"identifier\": \"2f23fd8cca835af21f3ac375bac601f97ead75f2e79143bdf71fe2c4be043e8f:1\"\n                },\n                \"coin_action\": \"coin_spent\"\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 1\n            },\n            \"related_operations\": [\n                {\n                    \"index\": 0\n                }\n            ],\n            \"type\": \"output\",\n            \"status\": \"success\",\n            \"account\": {\n                \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n            },\n            \"amount\": {\n                \"value\": \"10000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 2\n            },\n            \"related_operations\": [\n                {\n                    \"index\": 0\n                }\n            ],\n            \"type\": \"output\",\n            \"status\": \"success\",\n            \"account\": {\n                \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n            },\n            \"amount\": {\n                \"value\": \"40000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 3\n            },\n            \"type\": \"poolGovernanceVote\",\n            \"status\": \"success\",\n            \"account\": {\n                \"address\": \"6c518b4861bb88b1395ceb116342cecbcfb8736282655f9a61c4c368\"\n            },\n            \"metadata\": {\n                \"poolGovernanceVoteParams\": {\n                    \"governance_action_hash\": \"40c2a42fe324759a640dcfddbc69ef2e3b7fe5a998af8d6660359772bf44c9dc00\",\n                    \"pool_credential\": {\n                        \"hex_bytes\": \"60afbe982faaee34b02ad0e75cd50d5d7a734f5daaf7b67bc8c492eb5299af2b\",\n                        \"curve_type\": \"edwards25519\"\n                    },\n                    \"vote\": \"yes\"\n                }\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 4\n            },\n            \"type\": \"poolGovernanceVote\",\n            \"status\": \"success\",\n            \"account\": {\n                \"address\": \"pool1d3gckjrphwytzw2uavgkxskwe08msumzsfj4lxnpcnpks3zjml3\"\n            },\n            \"metadata\": {\n                \"poolGovernanceVoteParams\": {\n                    \"governance_action_hash\": \"40c2a42fe324759a640dcfddbc69ef2e3b7fe5a998af8d6660359772bf44c9dc00\",\n                    \"pool_credential\": {\n                        \"hex_bytes\": \"582060afbe982faaee34b02ad0e75cd50d5d7a734f5daaf7b67bc8c492eb5299af2b\",\n                        \"curve_type\": \"edwards25519\"\n                    },\n                    \"vote\": \"no\"\n                }\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/construction/preprocess",
											"host": [
												"{{URL}}"
											],
											"path": [
												"construction",
												"preprocess"
											]
										}
									},
									"response": []
								},
								{
									"name": "gov pool voting - account bech32 - vote abstain, no vote rationale",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Status code is 200', function () {",
													"    pm.response.to.have.status(200);",
													"})",
													"console.log(pm.response.json())",
													"",
													"pm.test('Contains Json Body', function () {",
													"    pm.response.to.have.jsonBody('options');",
													"})",
													"",
													"pm.test(\"Correct Values\", function () {",
													"    var responseData = pm.response.json();",
													"    pm.expect(responseData).to.be.an('object');",
													"    pm.expect(responseData.options.relative_ttl).to.eql(100.0);",
													"    pm.expect(responseData.options.transaction_size).to.be.oneOf([411.0, 408.0]);",
													"});",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"network_identifier\": {\n        \"blockchain\": \"cardano\",\n        \"network\": \"{{networkId}}\"\n    },\n    \"metadata\": {\n        \"relative_ttl\": 100,\n        \"deposit_parameters\": {\n            \"poolDeposit\": \"500000000\",\n            \"keyDeposit\": \"2000000\"\n        }\n    },\n    \"operations\": [\n        {\n            \"operation_identifier\": {\n                \"index\": 0,\n                \"network_index\": 0\n            },\n            \"type\": \"input\",\n            \"status\": \"success\",\n            \"account\": {\n                \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n            },\n            \"amount\": {\n                \"value\": \"-90000000000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            },\n            \"coin_change\": {\n                \"coin_identifier\": {\n                    \"identifier\": \"2f23fd8cca835af21f3ac375bac601f97ead75f2e79143bdf71fe2c4be043e8f:1\"\n                },\n                \"coin_action\": \"coin_spent\"\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 1\n            },\n            \"related_operations\": [\n                {\n                    \"index\": 0\n                }\n            ],\n            \"type\": \"output\",\n            \"status\": \"success\",\n            \"account\": {\n                \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n            },\n            \"amount\": {\n                \"value\": \"10000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 2\n            },\n            \"related_operations\": [\n                {\n                    \"index\": 0\n                }\n            ],\n            \"type\": \"output\",\n            \"status\": \"success\",\n            \"account\": {\n                \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n            },\n            \"amount\": {\n                \"value\": \"40000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 3\n            },\n            \"type\": \"poolGovernanceVote\",\n            \"status\": \"success\",\n            \"account\": {\n                \"address\": \"6c518b4861bb88b1395ceb116342cecbcfb8736282655f9a61c4c368\"\n            },\n            \"metadata\": {\n                \"poolGovernanceVoteParams\": {\n                    \"governance_action_hash\": \"40c2a42fe324759a640dcfddbc69ef2e3b7fe5a998af8d6660359772bf44c9dc00\",\n                    \"pool_credential\": {\n                        \"hex_bytes\": \"60afbe982faaee34b02ad0e75cd50d5d7a734f5daaf7b67bc8c492eb5299af2b\",\n                        \"curve_type\": \"edwards25519\"\n                    },\n                    \"vote\": \"yes\"\n                }\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 4\n            },\n            \"type\": \"poolGovernanceVote\",\n            \"status\": \"success\",\n            \"account\": {\n                \"address\": \"pool1d3gckjrphwytzw2uavgkxskwe08msumzsfj4lxnpcnpks3zjml3\"\n            },\n            \"metadata\": {\n                \"poolGovernanceVoteParams\": {\n                    \"governance_action_hash\": \"40c2a42fe324759a640dcfddbc69ef2e3b7fe5a998af8d6660359772bf44c9dc00\",\n                    \"pool_credential\": {\n                        \"hex_bytes\": \"582060afbe982faaee34b02ad0e75cd50d5d7a734f5daaf7b67bc8c492eb5299af2b\",\n                        \"curve_type\": \"edwards25519\"\n                    },\n                    \"vote\": \"abstain\"\n                }\n            }\n        }\n    ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/construction/preprocess",
											"host": [
												"{{URL}}"
											],
											"path": [
												"construction",
												"preprocess"
											]
										}
									},
									"response": []
								},
								{
									"name": "gov pool voting - account bech32 - vote yes, vote rationale present",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Status code is 200', function () {",
													"    pm.response.to.have.status(200);",
													"})",
													"console.log(pm.response.json())",
													"",
													"pm.test('Contains Json Body', function () {",
													"    pm.response.to.have.jsonBody('options');",
													"})",
													"",
													"pm.test(\"Correct Values\", function () {",
													"    var responseData = pm.response.json();",
													"    pm.expect(responseData).to.be.an('object');",
													"    pm.expect(responseData.options.relative_ttl).to.eql(100.0);",
													"    pm.expect(responseData.options.transaction_size).to.be.oneOf([513, 510.0]);",
													"});",
													"",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"network_identifier\": {\n    \"blockchain\": \"cardano\",\n    \"network\": \"{{networkId}}\"\n  },\n  \"metadata\": {\n    \"relative_ttl\": 100,\n    \"deposit_parameters\": {\n      \"poolDeposit\": \"500000000\",\n      \"keyDeposit\": \"2000000\"\n    }\n  },\n  \"operations\": [\n    {\n      \"operation_identifier\": {\n        \"index\": 0,\n        \"network_index\": 0\n      },\n      \"type\": \"input\",\n      \"status\": \"success\",\n      \"account\": {\n        \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n      },\n      \"amount\": {\n        \"value\": \"-90000000000\",\n        \"currency\": {\n          \"symbol\": \"ADA\",\n          \"decimals\": 6\n        }\n      },\n      \"coin_change\": {\n        \"coin_identifier\": {\n          \"identifier\": \"2f23fd8cca835af21f3ac375bac601f97ead75f2e79143bdf71fe2c4be043e8f:1\"\n        },\n        \"coin_action\": \"coin_spent\"\n      }\n    },\n    {\n      \"operation_identifier\": {\n        \"index\": 1\n      },\n      \"related_operations\": [\n        {\n          \"index\": 0\n        }\n      ],\n      \"type\": \"output\",\n      \"status\": \"success\",\n      \"account\": {\n        \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n      },\n      \"amount\": {\n        \"value\": \"10000\",\n        \"currency\": {\n          \"symbol\": \"ADA\",\n          \"decimals\": 6\n        }\n      }\n    },\n    {\n      \"operation_identifier\": {\n        \"index\": 2\n      },\n      \"related_operations\": [\n        {\n          \"index\": 0\n        }\n      ],\n      \"type\": \"output\",\n      \"status\": \"success\",\n      \"account\": {\n        \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n      },\n      \"amount\": {\n        \"value\": \"40000\",\n        \"currency\": {\n          \"symbol\": \"ADA\",\n          \"decimals\": 6\n        }\n      }\n    },\n    {\n      \"operation_identifier\": {\n        \"index\": 3\n      },\n      \"type\": \"poolGovernanceVote\",\n      \"status\": \"success\",\n      \"account\": {\n        \"address\": \"6c518b4861bb88b1395ceb116342cecbcfb8736282655f9a61c4c368\"\n      },\n      \"metadata\": {\n        \"poolGovernanceVoteParams\": {\n          \"governance_action_hash\": \"40c2a42fe324759a640dcfddbc69ef2e3b7fe5a998af8d6660359772bf44c9dc00\",\n          \"pool_credential\": {\n            \"hex_bytes\": \"60afbe982faaee34b02ad0e75cd50d5d7a734f5daaf7b67bc8c492eb5299af2b\",\n            \"curve_type\": \"edwards25519\"\n          },\n          \"vote\": \"yes\"\n        }\n      }\n    },\n    {\n      \"operation_identifier\": {\n        \"index\": 4\n      },\n      \"type\": \"poolGovernanceVote\",\n      \"status\": \"success\",\n      \"account\": {\n        \"address\": \"pool1d3gckjrphwytzw2uavgkxskwe08msumzsfj4lxnpcnpks3zjml3\"\n      },\n      \"metadata\": {\n        \"poolGovernanceVoteParams\": {\n          \"governance_action_hash\": \"40c2a42fe324759a640dcfddbc69ef2e3b7fe5a998af8d6660359772bf44c9dc00\",\n          \"pool_credential\": {\n            \"hex_bytes\": \"582060afbe982faaee34b02ad0e75cd50d5d7a734f5daaf7b67bc8c492eb5299af2b\",\n            \"curve_type\": \"edwards25519\"\n          },\n          \"vote\": \"yes\",\n          \"vote_rationale\": {\n            \"data_hash\": \"c77f8427e2808cbd4c7093aa704fb0fcb48b2ab3bdd84fa7f4dec2eb7de344c9\",\n            \"url\": \"ipfs://bafybeig7hluox6xefqdgmwcntvsguxcziw2oeogg2fbvygex2aj6qcfo64\"\n          }\n        }\n      }\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/construction/preprocess",
											"host": [
												"{{URL}}"
											],
											"path": [
												"construction",
												"preprocess"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "drep vote delegation",
							"item": [
								{
									"name": "drep as key_hash",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Status code is 200', function () {",
													"    pm.response.to.have.status(200);",
													"})",
													"console.log(pm.response.json())",
													"",
													"pm.test('Contains Json Body', function () {",
													"    pm.response.to.have.jsonBody('options');",
													"})",
													"",
													"pm.test(\"Correct Values\", function () {",
													"    var responseData = pm.response.json();",
													"    pm.expect(responseData).to.be.an('object');",
													"    pm.expect(responseData.options.relative_ttl).to.eql(100.0);",
													"    pm.expect(responseData.options.transaction_size).to.be.oneOf([932.0, 935.0]);",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"network_identifier\": {\n    \"blockchain\": \"cardano\",\n    \"network\": \"{{networkId}}\"\n  },\n  \"metadata\": {\n    \"relative_ttl\": 100,\n    \"deposit_parameters\": {\n      \"poolDeposit\": \"500000000\",\n      \"keyDeposit\": \"2000000\"\n    }\n  },\n  \"operations\" : [\n    {\n      \"operation_identifier\": {\n        \"index\": 0,\n        \"network_index\": 0\n      },\n      \"type\": \"input\",\n      \"status\": \"success\",\n      \"account\": {\n        \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n      },\n      \"amount\": {\n        \"value\": \"-90000000000\",\n        \"currency\": {\n          \"symbol\": \"ADA\",\n          \"decimals\": 6\n        }\n      },\n      \"coin_change\": {\n        \"coin_identifier\": {\n          \"identifier\": \"2f23fd8cca835af21f3ac375bac601f97ead75f2e79143bdf71fe2c4be043e8f:1\"\n        },\n        \"coin_action\": \"coin_spent\"\n      }\n    },\n    {\n      \"operation_identifier\": {\n        \"index\": 1\n      },\n      \"related_operations\": [\n        {\n          \"index\": 0\n        }\n      ],\n      \"type\": \"output\",\n      \"status\": \"success\",\n      \"account\": {\n        \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n      },\n      \"amount\": {\n        \"value\": \"10000\",\n        \"currency\": {\n          \"symbol\": \"ADA\",\n          \"decimals\": 6\n        }\n      }\n    },\n    {\n      \"operation_identifier\": {\n        \"index\": 2\n      },\n      \"related_operations\": [\n        {\n          \"index\": 0\n        }\n      ],\n      \"type\": \"output\",\n      \"status\": \"success\",\n      \"account\": {\n        \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n      },\n      \"amount\": {\n        \"value\": \"40000\",\n        \"currency\": {\n          \"symbol\": \"ADA\",\n          \"decimals\": 6\n        }\n      }\n    },\n    {\n      \"operation_identifier\": {\n        \"index\": 3\n      },\n      \"type\": \"poolRegistration\",\n      \"status\": \"success\",\n      \"account\": {\n        \"address\": \"1b268f4cba3faa7e36d8a0cc4adca2096fb856119412ee7330f692b5\"\n      },\n      \"metadata\": {\n        \"poolRegistrationParams\": {\n          \"vrfKeyHash\": \"8dd154228946bd12967c12bedb1cb6038b78f8b84a1760b1a788fa72a4af3db0\",\n          \"rewardAddress\": \"stake1uxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7caek7a5\",\n          \"pledge\": \"5000000\",\n          \"cost\": \"3000000\",\n          \"poolOwners\": [\"stake1uxly0q2cnpxrjrqm9vpnr9dwkr0j945gulhhgs3dx33l47sweg9er\"],\n          \"relays\": [\n            {\n              \"type\": \"single_host_addr\",\n              \"ipv4\": \"127.0.0.1\",\n              \"ipv6\": \"2345:0425:2ca1:0000:0000:0567:5673:23b5\",\n              \"port\": \"32\"\n            }\n          ],\n          \"margin\": {\n            \"numerator\": \"1\",\n            \"denominator\": \"1\"\n          },\n          \"poolMetadata\": {\n            \"url\": \"poolMetadataUrl\",\n            \"hash\": \"9ac2217288d1ae0b4e15c41b58d3e05a13206fd9ab81cb15943e4174bf30c90b\"\n          }\n        }\n      }\n    },\n    {\n      \"operation_identifier\": {\n        \"index\": 3\n      },\n      \"type\": \"dRepVoteDelegation\",\n      \"status\": \"success\",\n      \"account\": {\n        \"address\": \"stake1uxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7caek7a5\"\n      },\n      \"metadata\": {\n        \"staking_credential\": {\n          \"hex_bytes\": \"1B400D60AAF34EAF6DCBAB9BBA46001A23497886CF11066F7846933D30E5AD3F\",\n          \"curve_type\": \"edwards25519\"\n        },\n        \"drep\": {\n          \"id\": \"74984fae4ca1715fa1f8759f9d871015ac87f449a85dea6cf9956da1\",\n          \"type\": \"key_hash\"\n        }\n      }\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/construction/preprocess",
											"host": [
												"{{URL}}"
											],
											"path": [
												"construction",
												"preprocess"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "simple",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"console.log(pm.response.json())",
											"",
											"pm.test('Contains Json Body', function () {",
											"    pm.response.to.have.jsonBody('options');",
											"})",
											"",
											"pm.test(\"Correct Values\", function () {",
											"    ",
											"    var responseData = pm.response.json();",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData.options.relative_ttl).to.eql(1000.0);",
											"    pm.expect(responseData.options.transaction_size).to.eql(234.0);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"metadata\": {\n    \"deposit_parameters\": {\n      \"poolDeposit\": \"500000000\",\n      \"keyDeposit\": \"2000000\"\n    }\n  },\n  \"network_identifier\": {\n    \"blockchain\": \"cardano\",\n    \"network\": \"{{networkId}}\"\n  },\n  \"operations\": [\n    {\n      \"operation_identifier\": {\n        \"index\": 0,\n        \"network_index\": 0\n      },\n      \"type\": \"input\",\n      \"status\": \"success\",\n      \"account\": {\n        \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n      },\n      \"amount\": {\n        \"value\": \"-90000\",\n        \"currency\": {\n          \"symbol\": \"ADA\",\n          \"decimals\": 6\n        }\n      },\n      \"coin_change\": {\n        \"coin_identifier\": {\n          \"identifier\": \"2f23fd8cca835af21f3ac375bac601f97ead75f2e79143bdf71fe2c4be043e8f:1\"\n        },\n        \"coin_action\": \"coin_spent\"\n      }\n    },\n    {\n      \"operation_identifier\": {\n        \"index\": 1\n      },\n      \"related_operations\": [\n        {\n          \"index\": 0\n        }\n      ],\n      \"type\": \"output\",\n      \"status\": \"success\",\n      \"account\": {\n        \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n      },\n      \"amount\": {\n        \"value\": \"10000\",\n        \"currency\": {\n          \"symbol\": \"ADA\",\n          \"decimals\": 6\n        }\n      }\n    },\n    {\n      \"operation_identifier\": {\n        \"index\": 2\n      },\n      \"related_operations\": [\n        {\n          \"index\": 0\n        }\n      ],\n      \"type\": \"output\",\n      \"status\": \"success\",\n      \"account\": {\n        \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n      },\n      \"amount\": {\n        \"value\": \"40000\",\n        \"currency\": {\n          \"symbol\": \"ADA\",\n          \"decimals\": 6\n        }\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/construction/preprocess",
									"host": [
										"{{URL}}"
									],
									"path": [
										"construction",
										"preprocess"
									]
								}
							},
							"response": []
						},
						{
							"name": "two withdrawals and key registration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"console.log(pm.response.json())",
											"",
											"pm.test('Contains Json Body', function () {",
											"    pm.response.to.have.jsonBody('options');",
											"})",
											"",
											"pm.test(\"Correct Values\", function () {",
											"    ",
											"    var responseData = pm.response.json();",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData.options.relative_ttl).to.eql(100.0);",
											"    pm.expect(responseData.options.transaction_size).to.eql(409.0);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"network_identifier\": {\n    \"blockchain\": \"cardano\",\n    \"network\": \"{{networkId}}\"\n  },\n  \"metadata\": {\n    \"relative_ttl\": 100,\n    \"deposit_parameters\": {\n      \"poolDeposit\": \"500000000\",\n      \"keyDeposit\": \"2000000\"\n    }\n  },\n  \"operations\" : [\n    {\n      \"operation_identifier\": {\n        \"index\": 0,\n        \"network_index\": 0\n      },\n      \"type\": \"input\",\n      \"status\": \"success\",\n      \"account\": {\n        \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n      },\n      \"amount\": {\n        \"value\": \"-9000000\",\n        \"currency\": {\n          \"symbol\": \"ADA\",\n          \"decimals\": 6\n        }\n      },\n      \"coin_change\": {\n        \"coin_identifier\": {\n          \"identifier\": \"2f23fd8cca835af21f3ac375bac601f97ead75f2e79143bdf71fe2c4be043e8f:1\"\n        },\n        \"coin_action\": \"coin_spent\"\n      }\n    },\n    {\n      \"operation_identifier\": {\n        \"index\": 1\n      },\n      \"related_operations\": [\n        {\n          \"index\": 0\n        }\n      ],\n      \"type\": \"output\",\n      \"status\": \"success\",\n      \"account\": {\n        \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n      },\n      \"amount\": {\n        \"value\": \"10000\",\n        \"currency\": {\n          \"symbol\": \"ADA\",\n          \"decimals\": 6\n        }\n      }\n    },\n    {\n      \"operation_identifier\": {\n        \"index\": 2\n      },\n      \"related_operations\": [\n        {\n          \"index\": 0\n        }\n      ],\n      \"type\": \"output\",\n      \"status\": \"success\",\n      \"account\": {\n        \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n      },\n      \"amount\": {\n        \"value\": \"40000\",\n        \"currency\": {\n          \"symbol\": \"ADA\",\n          \"decimals\": 6\n        }\n      }\n    },\n    {\n      \"operation_identifier\": {\n        \"index\": 3\n      },\n      \"type\": \"stakeKeyRegistration\",\n      \"status\": \"success\",\n      \"account\": {\n        \"address\": \"stake1uxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7caek7a5\"\n      },\n      \"metadata\": {\n        \"staking_credential\": {\n          \"hex_bytes\": \"1B400D60AAF34EAF6DCBAB9BBA46001A23497886CF11066F7846933D30E5AD3F\",\n          \"curve_type\": \"edwards25519\"\n        }\n      }\n    },\n    {\n      \"operation_identifier\": {\n        \"index\": 4\n      },\n      \"type\": \"withdrawal\",\n      \"status\": \"success\",\n      \"account\": {\n        \"address\": \"stake1uxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7caek7a5\"\n      },\n      \"amount\": {\n        \"value\": \"10000\",\n        \"currency\": {\n          \"symbol\": \"ADA\",\n          \"decimals\": 6\n        }\n      },\n      \"metadata\": {\n        \"staking_credential\": {\n          \"hex_bytes\": \"1B400D60AAF34EAF6DCBAB9BBA46001A23497886CF11066F7846933D30E5AD3F\",\n          \"curve_type\": \"edwards25519\"\n        }\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/construction/preprocess",
									"host": [
										"{{URL}}"
									],
									"path": [
										"construction",
										"preprocess"
									]
								}
							},
							"response": []
						},
						{
							"name": "pool registration",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"console.log(pm.response.json())",
											"",
											"pm.test('Contains Json Body', function () {",
											"    pm.response.to.have.jsonBody('options');",
											"})",
											"",
											"pm.test(\"Correct Values\", function () {",
											"    var responseData = pm.response.json();",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData.options.relative_ttl).to.eql(100.0);",
											"    pm.expect(responseData.options.transaction_size).to.be.oneOf([933.0, 930.0]);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"network_identifier\": {\n    \"blockchain\": \"cardano\",\n    \"network\": \"{{networkId}}\"\n  },\n  \"metadata\": {\n    \"relative_ttl\": 100,\n    \"deposit_parameters\": {\n      \"poolDeposit\": \"500000000\",\n      \"keyDeposit\": \"2000000\"\n    }\n  },\n  \"operations\" : [\n    {\n      \"operation_identifier\": {\n        \"index\": 0,\n        \"network_index\": 0\n      },\n      \"type\": \"input\",\n      \"status\": \"success\",\n      \"account\": {\n        \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n      },\n      \"amount\": {\n        \"value\": \"-90000000000\",\n        \"currency\": {\n          \"symbol\": \"ADA\",\n          \"decimals\": 6\n        }\n      },\n      \"coin_change\": {\n        \"coin_identifier\": {\n          \"identifier\": \"2f23fd8cca835af21f3ac375bac601f97ead75f2e79143bdf71fe2c4be043e8f:1\"\n        },\n        \"coin_action\": \"coin_spent\"\n      }\n    },\n    {\n      \"operation_identifier\": {\n        \"index\": 1\n      },\n      \"related_operations\": [\n        {\n          \"index\": 0\n        }\n      ],\n      \"type\": \"output\",\n      \"status\": \"success\",\n      \"account\": {\n        \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n      },\n      \"amount\": {\n        \"value\": \"10000\",\n        \"currency\": {\n          \"symbol\": \"ADA\",\n          \"decimals\": 6\n        }\n      }\n    },\n    {\n      \"operation_identifier\": {\n        \"index\": 2\n      },\n      \"related_operations\": [\n        {\n          \"index\": 0\n        }\n      ],\n      \"type\": \"output\",\n      \"status\": \"success\",\n      \"account\": {\n        \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n      },\n      \"amount\": {\n        \"value\": \"40000\",\n        \"currency\": {\n          \"symbol\": \"ADA\",\n          \"decimals\": 6\n        }\n      }\n    },\n    {\n      \"operation_identifier\": {\n        \"index\": 3\n      },\n      \"type\": \"poolRegistration\",\n      \"status\": \"success\",\n      \"account\": {\n        \"address\": \"1b268f4cba3faa7e36d8a0cc4adca2096fb856119412ee7330f692b5\"\n      },\n      \"metadata\": {\n        \"poolRegistrationParams\": {\n          \"vrfKeyHash\": \"8dd154228946bd12967c12bedb1cb6038b78f8b84a1760b1a788fa72a4af3db0\",\n          \"rewardAddress\": \"stake1uxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7caek7a5\",\n          \"pledge\": \"5000000\",\n          \"cost\": \"3000000\",\n          \"poolOwners\": [\"stake1uxly0q2cnpxrjrqm9vpnr9dwkr0j945gulhhgs3dx33l47sweg9er\"],\n          \"relays\": [\n            {\n              \"type\": \"single_host_addr\",\n              \"ipv4\": \"127.0.0.1\",\n              \"ipv6\": \"2345:0425:2ca1:0000:0000:0567:5673:23b5\",\n              \"port\": \"32\"\n            }\n          ],\n          \"margin\": {\n            \"numerator\": \"1\",\n            \"denominator\": \"1\"\n          },\n          \"poolMetadata\": {\n            \"url\": \"poolMetadataUrl\",\n            \"hash\": \"9ac2217288d1ae0b4e15c41b58d3e05a13206fd9ab81cb15943e4174bf30c90b\"\n          }\n        }\n      }\n    },\n    {\n      \"operation_identifier\": {\n        \"index\": 3\n      },\n      \"type\": \"stakeDelegation\",\n      \"status\": \"success\",\n      \"account\": {\n        \"address\": \"stake1uxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7caek7a5\"\n      },\n      \"metadata\": {\n        \"staking_credential\": {\n          \"hex_bytes\": \"1B400D60AAF34EAF6DCBAB9BBA46001A23497886CF11066F7846933D30E5AD3F\",\n          \"curve_type\": \"edwards25519\"\n        },\n        \"pool_key_hash\": \"1b268f4cba3faa7e36d8a0cc4adca2096fb856119412ee7330f692b5\"\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/construction/preprocess",
									"host": [
										"{{URL}}"
									],
									"path": [
										"construction",
										"preprocess"
									]
								}
							},
							"response": []
						},
						{
							"name": "stake delegation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"console.log(pm.response.json())",
											"",
											"pm.test('Contains Json Body', function () {",
											"    pm.response.to.have.jsonBody('options');",
											"})",
											"",
											"pm.test(\"Correct Values\", function () {",
											"    var responseData = pm.response.json();",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData.options.relative_ttl).to.eql(100.0);",
											"    pm.expect(responseData.options.transaction_size).to.be.oneOf([403.0, 406.0]);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"network_identifier\": {\n    \"blockchain\": \"cardano\",\n    \"network\": \"{{networkId}}\"\n  },\n  \"metadata\": {\n    \"relative_ttl\": 100,\n    \"deposit_parameters\": {\n      \"poolDeposit\": \"500000000\",\n      \"keyDeposit\": \"2000000\"\n    }\n  },\n  \"operations\" : [\n    {\n      \"operation_identifier\": {\n        \"index\": 0,\n        \"network_index\": 0\n      },\n      \"type\": \"input\",\n      \"status\": \"success\",\n      \"account\": {\n        \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n      },\n      \"amount\": {\n        \"value\": \"-90000000000\",\n        \"currency\": {\n          \"symbol\": \"ADA\",\n          \"decimals\": 6\n        }\n      },\n      \"coin_change\": {\n        \"coin_identifier\": {\n          \"identifier\": \"2f23fd8cca835af21f3ac375bac601f97ead75f2e79143bdf71fe2c4be043e8f:1\"\n        },\n        \"coin_action\": \"coin_spent\"\n      }\n    },\n    {\n      \"operation_identifier\": {\n        \"index\": 1\n      },\n      \"related_operations\": [\n        {\n          \"index\": 0\n        }\n      ],\n      \"type\": \"output\",\n      \"status\": \"success\",\n      \"account\": {\n        \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n      },\n      \"amount\": {\n        \"value\": \"10000\",\n        \"currency\": {\n          \"symbol\": \"ADA\",\n          \"decimals\": 6\n        }\n      }\n    },\n    {\n      \"operation_identifier\": {\n        \"index\": 2\n      },\n      \"related_operations\": [\n        {\n          \"index\": 0\n        }\n      ],\n      \"type\": \"output\",\n      \"status\": \"success\",\n      \"account\": {\n        \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n      },\n      \"amount\": {\n        \"value\": \"40000\",\n        \"currency\": {\n          \"symbol\": \"ADA\",\n          \"decimals\": 6\n        }\n      }\n    },\n    {\n      \"operation_identifier\": {\n        \"index\": 3\n      },\n      \"type\": \"stakeDelegation\",\n      \"status\": \"success\",\n      \"account\": {\n        \"address\": \"stake1uxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7caek7a5\"\n      },\n      \"metadata\": {\n        \"staking_credential\": {\n          \"hex_bytes\": \"1B400D60AAF34EAF6DCBAB9BBA46001A23497886CF11066F7846933D30E5AD3F\",\n          \"curve_type\": \"edwards25519\"\n        },\n        \"pool_key_hash\": \"1b268f4cba3faa7e36d8a0cc4adca2096fb856119412ee7330f692b5\"\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/construction/preprocess",
									"host": [
										"{{URL}}"
									],
									"path": [
										"construction",
										"preprocess"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"packages": {},
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "derive",
					"item": [
						{
							"name": "simple",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"console.log(pm.response.json())",
											"",
											"pm.test('Contains Json Body', function () {",
											"    pm.response.to.have.jsonBody('account_identifier.address');",
											"})",
											"",
											"pm.test(\"Correct Address\", function () {",
											"    const testAccountBaseAddress = pm.environment.get('TestAccountBaseAddress');",
											"    var responseData = pm.response.json();",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData.account_identifier.address).to.eql(testAccountBaseAddress);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"network_identifier\": {\n        \"blockchain\": \"cardano\",\n        \"network\": \"{{networkId}}\"\n    },\n    \"public_key\": {\n        \"hex_bytes\": \"{{TestAccountPubKeyHexBytes}}\",\n        \"curve_type\": \"{{curveType}}\"\n    },\n    \"metadata\": {\n        \"address_type\": \"{{address_type}}\",\n        \"staking_credential\": {\n          \"hex_bytes\": \"{{TestAccountStakePubKeyHex}}\",\n          \"curve_type\": \"{{curveType}}\"\n        }\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/construction/derive",
									"host": [
										"{{URL}}"
									],
									"path": [
										"construction",
										"derive"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "hash",
					"item": [
						{
							"name": "simple",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"console.log(pm.response.json())",
											"",
											"pm.test('Contains Json Body', function () {",
											"    pm.response.to.have.jsonBody('transaction_identifier');",
											"})",
											"",
											"pm.test(\"Correct Address\", function () {",
											"     const hashedSignedTransaction = pm.environment.get('hashedSignedTransaction');",
											"     var responseData = pm.response.json();",
											"     pm.expect(responseData).to.be.an('object');",
											"     pm.expect(responseData.transaction_identifier).to.be.an('object');",
											"     pm.expect(responseData.transaction_identifier.hash).to.eql(hashedSignedTransaction);",
											" });"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"network_identifier\": {\n    \"blockchain\": \"cardano\",\n    \"network\": \"{{networkId}}\"\n  },\n  \"signed_transaction\": \"{{signedTransaction}}\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/construction/hash",
									"host": [
										"{{URL}}"
									],
									"path": [
										"construction",
										"hash"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "metadata",
					"item": [
						{
							"name": "simple",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"console.log(pm.response.json())",
											"",
											"pm.test('Contains Json Body', function () {",
											"    pm.response.to.have.jsonBody('suggested_fee');",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"network_identifier\": {\n        \"blockchain\": \"cardano\",\n        \"network\": \"{{networkId}}\"\n    },\n    \"options\": {\n        \"transaction_size\": 40.0,\n        \"relative_ttl\": 10.0\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/construction/metadata",
									"host": [
										"{{URL}}"
									],
									"path": [
										"construction",
										"metadata"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "payloads",
					"item": [
						{
							"name": "withdrawals",
							"item": [
								{
									"name": "(-) fee is negative",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Should fail because of unbalanced transaction\", function () {",
													"    var responseData = pm.response.json();",
													"    ",
													"    pm.expect(pm.response.status).to.not.equal('OK', 'request has succeed!'); ",
													"    ",
													"    pm.expect(responseData.code).to.equal(4010, 'incorrect error message');",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"network_identifier\": {\n    \"blockchain\": \"cardano\",\n    \"network\": \"{{networkId}}\"\n  },\n  \"operations\": [\n        {\n            \"operation_identifier\": {\n                \"index\": 0\n            },\n            \"type\": \"input\",\n            \"account\": {\n                \"address\": \"addr_test1qrtdh7587yz5m2w504sjhqnrfml5fpcuxu24fj8xwvk48artcrahhulmvvsnmwqk2k3nmrz20sw8uj7htlpnlutk0p9sjfnd3n\"\n            },\n            \"amount\": {\n                \"value\": \"-10000000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            },\n            \"coin_change\": {\n                \"coin_identifier\": {\n                    \"identifier\": \"727b898a39fe9039e82d4962d7282090ea5dde37a26d423b8f2e77a79955428e:8\"\n                },\n                \"coin_action\": \"coin_spent\"\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 1\n            },\n            \"type\": \"output\",\n            \"account\": {\n                \"address\": \"addr_test1qrtdh7587yz5m2w504sjhqnrfml5fpcuxu24fj8xwvk48artcrahhulmvvsnmwqk2k3nmrz20sw8uj7htlpnlutk0p9sjfnd3n\"\n            },\n            \"amount\": {\n                \"value\": \"16000000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 2\n            },\n            \"type\": \"withdrawal\",\n            \"account\": {\n                \"address\": \"stake_test1up4up7mm70akxgfahqt9tgea3398c8r7f0t4lsel79m8sjcs4vmjm\"\n            },\n            \"amount\": {\n                \"value\": \"5000000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            },\n            \"metadata\": {\n                \"staking_credential\": {\n                    \"hex_bytes\": \"8df7aadf70ae8a81dc6c9cead4994b36fabe7c0a13c164a1b15c0443fe60dfe2\",\n                    \"curve_type\": \"edwards25519\"\n                }\n            }\n        }\n    ],\n  \"metadata\": {\n    \"ttl\": 93835306,\n    \"protocol_parameters\": {\n      \"coinsPerUtxoSize\": \"4310\",\n      \"maxTxSize\": 16384,\n      \"maxValSize\": 5000,\n      \"keyDeposit\": \"2000000\",\n      \"maxCollateralInputs\": 3,\n      \"minFeeCoefficient\": 44,\n      \"minFeeConstant\": 155381,\n      \"minPoolCost\": \"170000000\",\n      \"poolDeposit\": \"500000000\",\n      \"protocol\": 10\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/construction/payloads",
											"host": [
												"{{URL}}"
											],
											"path": [
												"construction",
												"payloads"
											]
										}
									},
									"response": []
								},
								{
									"name": "(-) fee 0",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Should fail because of unbalanced transaction\", function () {",
													"    pm.expect(pm.response.status).equal('OK', 'request has succeed!'); ",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"network_identifier\": {\n    \"blockchain\": \"cardano\",\n    \"network\": \"{{networkId}}\"\n  },\n  \"operations\": [\n        {\n            \"operation_identifier\": {\n                \"index\": 0\n            },\n            \"type\": \"input\",\n            \"account\": {\n                \"address\": \"addr_test1qrtdh7587yz5m2w504sjhqnrfml5fpcuxu24fj8xwvk48artcrahhulmvvsnmwqk2k3nmrz20sw8uj7htlpnlutk0p9sjfnd3n\"\n            },\n            \"amount\": {\n                \"value\": \"-10000000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            },\n            \"coin_change\": {\n                \"coin_identifier\": {\n                    \"identifier\": \"727b898a39fe9039e82d4962d7282090ea5dde37a26d423b8f2e77a79955428e:8\"\n                },\n                \"coin_action\": \"coin_spent\"\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 1\n            },\n            \"type\": \"output\",\n            \"account\": {\n                \"address\": \"addr_test1qrtdh7587yz5m2w504sjhqnrfml5fpcuxu24fj8xwvk48artcrahhulmvvsnmwqk2k3nmrz20sw8uj7htlpnlutk0p9sjfnd3n\"\n            },\n            \"amount\": {\n                \"value\": \"15000000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 2\n            },\n            \"type\": \"withdrawal\",\n            \"account\": {\n                \"address\": \"stake_test1up4up7mm70akxgfahqt9tgea3398c8r7f0t4lsel79m8sjcs4vmjm\"\n            },\n            \"amount\": {\n                \"value\": \"5000000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            },\n            \"metadata\": {\n                \"staking_credential\": {\n                    \"hex_bytes\": \"8df7aadf70ae8a81dc6c9cead4994b36fabe7c0a13c164a1b15c0443fe60dfe2\",\n                    \"curve_type\": \"edwards25519\"\n                }\n            }\n        }\n    ],\n  \"metadata\": {\n    \"ttl\": 93835306,\n    \"protocol_parameters\": {\n      \"coinsPerUtxoSize\": \"4310\",\n      \"maxTxSize\": 16384,\n      \"maxValSize\": 5000,\n      \"keyDeposit\": \"2000000\",\n      \"maxCollateralInputs\": 3,\n      \"minFeeCoefficient\": 44,\n      \"minFeeConstant\": 155381,\n      \"minPoolCost\": \"170000000\",\n      \"poolDeposit\": \"500000000\",\n      \"protocol\": 10\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/construction/payloads",
											"host": [
												"{{URL}}"
											],
											"path": [
												"construction",
												"payloads"
											]
										}
									},
									"response": []
								},
								{
									"name": "(+) fee 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// const cbor = pm.require('npm:cbor@10.0.3');",
													"",
													"// pm.test(\"Correct Values\", function () {",
													"    ",
													"//     var responseData = pm.response.json();",
													"//     pm.expect(pm.response.status).to.equal('OK', 'request has failed!');",
													"//     //pm.expect(responseData.unsigned_transaction).to.exist();",
													"//     pm.expect(responseData.payloads).to.be.an('array').that.is.not.empty;",
													"    ",
													"//     const innerTransactionBody = cbor.decode(responseData.unsigned_transaction)[0];",
													"//     const decodedBody = cbor.decode(innerTransactionBody);",
													"//     const decodedOutputValue = decodedBody.get(1)[0][1];",
													"//     const decodedFeeValue = decodedBody.get(2);",
													"    ",
													"//     pm.expect(responseData.payloads).to.be.an('array').that.is.not.empty;",
													"//     //pm.expect(responseData.payloads[0].hex_bytes).to.equal('8df7aadf70ae8a81dc6c9cead4994b36fabe7c0a13c164a1b15c0443fe60dfe2', 'Stake credential does not match');",
													"//     pm.expect(decodedOutputValue).to.exist.and.to.equal(14000000, 'Output value in cbor should match the operation');",
													"//     pm.expect(decodedFeeValue).to.exist.and.to.equal(1000000, 'Fee in cbor should match the operation');",
													"// });",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"const expectedUnsignedTx = \"8279013e613530306439303130323831383235383230373237623839386133396665393033396538326434393632643732383230393065613564646533376132366434323362386632653737613739393535343238653038303138313832353833393030643664626661383766313035346461396434376436313262383236333465666634343837316333373135353463386536373332643533663436626330666237626633666236333231336462383136353561333364386334613763316337653462643735666333336666313736373834623161303064353966383030323161303030663432343030333161303539376430326130356131353831646530366263306662376266336662363332313364623831363535613333643863346137633163376534626437356663333366663137363738346231613030346334623430a16a6f7065726174696f6e7383a5746f7065726174696f6e5f6964656e746966696572a165696e64657800676163636f756e74a16761646472657373786c616464725f7465737431717274646837353837797a356d3277353034736a68716e72666d6c356670637578753234666a387877766b34386172746372616868756c6d7676736e6d77716b326b336e6d727a3230737738756a3768746c706e6c75746b307039736a666e64336e66616d6f756e74a26863757272656e6379a26673796d626f6c6341444168646563696d616c73066576616c7565692d31303030303030306b636f696e5f6368616e6765a26f636f696e5f6964656e746966696572a16a6964656e7469666965727842373237623839386133396665393033396538326434393632643732383230393065613564646533376132366434323362386632653737613739393535343238653a386b636f696e5f616374696f6e6a636f696e5f7370656e74647479706565696e707574a4746f7065726174696f6e5f6964656e746966696572a165696e64657801676163636f756e74a16761646472657373786c616464725f7465737431717274646837353837797a356d3277353034736a68716e72666d6c356670637578753234666a387877766b34386172746372616868756c6d7676736e6d77716b326b336e6d727a3230737738756a3768746c706e6c75746b307039736a666e64336e66616d6f756e74a26863757272656e6379a26673796d626f6c6341444168646563696d616c73066576616c75656831343030303030306474797065666f7574707574a5746f7065726174696f6e5f6964656e746966696572a165696e64657802676163636f756e74a1676164647265737378407374616b655f74657374317570347570376d6d3730616b7867666168717439746765613333393863387237663074346c73656c37396d38736a637334766d6a6d66616d6f756e74a26863757272656e6379a26673796d626f6c6341444168646563696d616c73066576616c75656735303030303030686d65746164617461a1727374616b696e675f63726564656e7469616ca2696865785f62797465737840386466376161646637306165386138316463366339636561643439393462333666616265376330613133633136346131623135633034343366653630646665326a63757276655f747970656c65647761726473323535313964747970656a7769746864726177616c\";",
													"",
													"const responseData = pm.response.json();",
													"",
													"pm.test(\"unsigned_transaction matches expected\", function () {",
													"    pm.expect(responseData.unsigned_transaction).to.eql(expectedUnsignedTx);",
													"});",
													"",
													"pm.test(\"Payloads array has exactly 2 elements\", function () {",
													"    pm.expect(responseData.payloads).to.have.lengthOf(2);",
													"});",
													"",
													"// First payload",
													"pm.test(\"First payload matches expected values\", function () {",
													"    const p1 = responseData.payloads[0];",
													"    pm.expect(p1.account_identifier.address).to.eql(\"stake_test1up4up7mm70akxgfahqt9tgea3398c8r7f0t4lsel79m8sjcs4vmjm\");",
													"    pm.expect(p1.hex_bytes).to.eql(\"8e3d13c516c15eccf7456df7a56327bca5718da3d47f9c90dddbecc17b6d6985\");",
													"    pm.expect(p1.signature_type).to.eql(\"ed25519\");",
													"});",
													"",
													"// Second payload",
													"pm.test(\"Second payload matches expected values\", function () {",
													"    const p2 = responseData.payloads[1];",
													"    pm.expect(p2.account_identifier.address).to.eql(\"addr_test1qrtdh7587yz5m2w504sjhqnrfml5fpcuxu24fj8xwvk48artcrahhulmvvsnmwqk2k3nmrz20sw8uj7htlpnlutk0p9sjfnd3n\");",
													"    pm.expect(p2.hex_bytes).to.eql(\"8e3d13c516c15eccf7456df7a56327bca5718da3d47f9c90dddbecc17b6d6985\");",
													"    pm.expect(p2.signature_type).to.eql(\"ed25519\");",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"network_identifier\": {\n    \"blockchain\": \"cardano\",\n    \"network\": \"{{networkId}}\"\n  },\n  \"operations\": [\n        {\n            \"operation_identifier\": {\n                \"index\": 0\n            },\n            \"type\": \"input\",\n            \"account\": {\n                \"address\": \"addr_test1qrtdh7587yz5m2w504sjhqnrfml5fpcuxu24fj8xwvk48artcrahhulmvvsnmwqk2k3nmrz20sw8uj7htlpnlutk0p9sjfnd3n\"\n            },\n            \"amount\": {\n                \"value\": \"-10000000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            },\n            \"coin_change\": {\n                \"coin_identifier\": {\n                    \"identifier\": \"727b898a39fe9039e82d4962d7282090ea5dde37a26d423b8f2e77a79955428e:8\"\n                },\n                \"coin_action\": \"coin_spent\"\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 1\n            },\n            \"type\": \"output\",\n            \"account\": {\n                \"address\": \"addr_test1qrtdh7587yz5m2w504sjhqnrfml5fpcuxu24fj8xwvk48artcrahhulmvvsnmwqk2k3nmrz20sw8uj7htlpnlutk0p9sjfnd3n\"\n            },\n            \"amount\": {\n                \"value\": \"14000000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 2\n            },\n            \"type\": \"withdrawal\",\n            \"account\": {\n                \"address\": \"stake_test1up4up7mm70akxgfahqt9tgea3398c8r7f0t4lsel79m8sjcs4vmjm\"\n            },\n            \"amount\": {\n                \"value\": \"5000000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            },\n            \"metadata\": {\n                \"staking_credential\": {\n                    \"hex_bytes\": \"8df7aadf70ae8a81dc6c9cead4994b36fabe7c0a13c164a1b15c0443fe60dfe2\",\n                    \"curve_type\": \"edwards25519\"\n                }\n            }\n        }\n    ],\n  \"metadata\": {\n    \"ttl\": 93835306,\n    \"protocol_parameters\": {\n      \"coinsPerUtxoSize\": \"4310\",\n      \"maxTxSize\": 16384,\n      \"maxValSize\": 5000,\n      \"keyDeposit\": \"2000000\",\n      \"maxCollateralInputs\": 3,\n      \"minFeeCoefficient\": 44,\n      \"minFeeConstant\": 155381,\n      \"minPoolCost\": \"170000000\",\n      \"poolDeposit\": \"500000000\",\n      \"protocol\": 10\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/construction/payloads",
											"host": [
												"{{URL}}"
											],
											"path": [
												"construction",
												"payloads"
											]
										}
									},
									"response": []
								},
								{
									"name": "(+) fee 14",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"// const cbor = pm.require('npm:cbor@10.0.3');",
													"",
													"// pm.test(\"Correct Values\", function () {",
													"",
													"//     var responseData = pm.response.json();",
													"//     pm.expect(pm.response.status).to.equal('OK', 'request has failed!');",
													"//     pm.expect(responseData.unsigned_transaction).to.exist;",
													"//     pm.expect(responseData.payloads).to.be.an('array').that.is.not.empty;",
													"    ",
													"//     const innerTransactionBody = cbor.decode(responseData.unsigned_transaction)[0];",
													"//     const decodedBody = cbor.decode(innerTransactionBody);",
													"//     const decodedOutputValue = decodedBody.get(1)[0][1];",
													"//     const decodedFeeValue = decodedBody.get(2);",
													"",
													"//     //pm.expect(responseData.payloads[0].hex_bytes).to.equal('8df7aadf70ae8a81dc6c9cead4994b36fabe7c0a13c164a1b15c0443fe60dfe2', 'Staking credential should match');",
													"//     pm.expect(decodedOutputValue).to.exist.and.to.equal(1000000, 'Output value in cbor should match the operation');",
													"//     pm.expect(decodedFeeValue).to.exist.and.to.equal(14000000, 'Fee in cbor should match the operation');",
													"",
													"// });",
													"",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"const expected = {",
													"    \"unsigned_transaction\": \"8279013e613530306439303130323831383235383230373237623839386133396665393033396538326434393632643732383230393065613564646533376132366434323362386632653737613739393535343238653038303138313832353833393030643664626661383766313035346461396434376436313262383236333465666634343837316333373135353463386536373332643533663436626330666237626633666236333231336462383136353561333364386334613763316337653462643735666333336666313736373834623161303030663432343030323161303064353966383030333161303539376430326130356131353831646530366263306662376266336662363332313364623831363535613333643863346137633163376534626437356663333366663137363738346231613030346334623430a16a6f7065726174696f6e7383a5746f7065726174696f6e5f6964656e746966696572a165696e64657800676163636f756e74a16761646472657373786c616464725f7465737431717274646837353837797a356d3277353034736a68716e72666d6c356670637578753234666a387877766b34386172746372616868756c6d7676736e6d77716b326b336e6d727a3230737738756a3768746c706e6c75746b307039736a666e64336e66616d6f756e74a26863757272656e6379a26673796d626f6c6341444168646563696d616c73066576616c7565692d31303030303030306b636f696e5f6368616e6765a26f636f696e5f6964656e746966696572a16a6964656e7469666965727842373237623839386133396665393033396538326434393632643732383230393065613564646533376132366434323362386632653737613739393535343238653a386b636f696e5f616374696f6e6a636f696e5f7370656e74647479706565696e707574a4746f7065726174696f6e5f6964656e746966696572a165696e64657801676163636f756e74a16761646472657373786c616464725f7465737431717274646837353837797a356d3277353034736a68716e72666d6c356670637578753234666a387877766b34386172746372616868756c6d7676736e6d77716b326b336e6d727a3230737738756a3768746c706e6c75746b307039736a666e64336e66616d6f756e74a26863757272656e6379a26673796d626f6c6341444168646563696d616c73066576616c756567313030303030306474797065666f7574707574a5746f7065726174696f6e5f6964656e746966696572a165696e64657802676163636f756e74a1676164647265737378407374616b655f74657374317570347570376d6d3730616b7867666168717439746765613333393863387237663074346c73656c37396d38736a637334766d6a6d66616d6f756e74a26863757272656e6379a26673796d626f6c6341444168646563696d616c73066576616c75656735303030303030686d65746164617461a1727374616b696e675f63726564656e7469616ca2696865785f62797465737840386466376161646637306165386138316463366339636561643439393462333666616265376330613133633136346131623135633034343366653630646665326a63757276655f747970656c65647761726473323535313964747970656a7769746864726177616c\",",
													"    \"payloads\": [",
													"        {",
													"            \"account_identifier\": {",
													"                \"address\": \"stake_test1up4up7mm70akxgfahqt9tgea3398c8r7f0t4lsel79m8sjcs4vmjm\"",
													"            },",
													"            \"hex_bytes\": \"ce04bc7985901b28e6ce113f3dd41d0177b5780effdf567a72ec5ebec8fc72ac\",",
													"            \"signature_type\": \"ed25519\"",
													"        },",
													"        {",
													"            \"account_identifier\": {",
													"                \"address\": \"addr_test1qrtdh7587yz5m2w504sjhqnrfml5fpcuxu24fj8xwvk48artcrahhulmvvsnmwqk2k3nmrz20sw8uj7htlpnlutk0p9sjfnd3n\"",
													"            },",
													"            \"hex_bytes\": \"ce04bc7985901b28e6ce113f3dd41d0177b5780effdf567a72ec5ebec8fc72ac\",",
													"            \"signature_type\": \"ed25519\"",
													"        }",
													"    ]",
													"};",
													"",
													"pm.test(\"Response body matches expected structure and values exactly\", function () {",
													"    const json = pm.response.json();",
													"    pm.expect(json).to.eql(expected);",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"network_identifier\": {\n    \"blockchain\": \"cardano\",\n    \"network\": \"{{networkId}}\"\n  },\n  \"operations\": [\n        {\n            \"operation_identifier\": {\n                \"index\": 0\n            },\n            \"type\": \"input\",\n            \"account\": {\n                \"address\": \"addr_test1qrtdh7587yz5m2w504sjhqnrfml5fpcuxu24fj8xwvk48artcrahhulmvvsnmwqk2k3nmrz20sw8uj7htlpnlutk0p9sjfnd3n\"\n            },\n            \"amount\": {\n                \"value\": \"-10000000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            },\n            \"coin_change\": {\n                \"coin_identifier\": {\n                    \"identifier\": \"727b898a39fe9039e82d4962d7282090ea5dde37a26d423b8f2e77a79955428e:8\"\n                },\n                \"coin_action\": \"coin_spent\"\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 1\n            },\n            \"type\": \"output\",\n            \"account\": {\n                \"address\": \"addr_test1qrtdh7587yz5m2w504sjhqnrfml5fpcuxu24fj8xwvk48artcrahhulmvvsnmwqk2k3nmrz20sw8uj7htlpnlutk0p9sjfnd3n\"\n            },\n            \"amount\": {\n                \"value\": \"1000000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 2\n            },\n            \"type\": \"withdrawal\",\n            \"account\": {\n                \"address\": \"stake_test1up4up7mm70akxgfahqt9tgea3398c8r7f0t4lsel79m8sjcs4vmjm\"\n            },\n            \"amount\": {\n                \"value\": \"5000000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            },\n            \"metadata\": {\n                \"staking_credential\": {\n                    \"hex_bytes\": \"8df7aadf70ae8a81dc6c9cead4994b36fabe7c0a13c164a1b15c0443fe60dfe2\",\n                    \"curve_type\": \"edwards25519\"\n                }\n            }\n        }\n    ],\n  \"metadata\": {\n    \"ttl\": 93835306,\n    \"protocol_parameters\": {\n      \"coinsPerUtxoSize\": \"4310\",\n      \"maxTxSize\": 16384,\n      \"maxValSize\": 5000,\n      \"keyDeposit\": \"2000000\",\n      \"maxCollateralInputs\": 3,\n      \"minFeeCoefficient\": 44,\n      \"minFeeConstant\": 155381,\n      \"minPoolCost\": \"170000000\",\n      \"poolDeposit\": \"500000000\",\n      \"protocol\": 10\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/construction/payloads",
											"host": [
												"{{URL}}"
											],
											"path": [
												"construction",
												"payloads"
											]
										}
									},
									"response": []
								}
							],
							"description": "input: -10\n\nrewards: 5\n\n---\n\noutput: \\[16, 15, 14, 1\\]\n\nfee (auto): \\[-1, 0, 1, 14\\]",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"packages": {},
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"packages": {},
										"exec": [
											"pm.test(\"General properties of payloads\", function () {",
											"        ",
											"    var responseData = pm.response.json();",
											"",
											"    //console.log(responseData);",
											"    pm.expect(responseData).to.be.an('object');",
											"    if (pm.response.code == 200 ) {",
											"        pm.expect(responseData.payloads.length).to.equal(2);",
											"        console.log('response was successful')",
											"    }",
											"",
											"    else {",
											"        pm.expect(responseData).to.haveOwnProperty(\"code\");",
											"        console.log('response has failed')",
											"    }",
											"});",
											""
										]
									}
								}
							]
						},
						{
							"name": "spo_voting",
							"item": [
								{
									"name": "gov pool voting - account - vote yes, no vote rationale",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"const jsonData = pm.response.json();",
													"",
													"// 🔹 Exact match: unsigned_transaction",
													"pm.test(\"Exact match for unsigned_transaction\", function () {",
													"    const expectedUnsignedTransaction = \"827901946135303064393031303238313832353832303266323366643863636138333561663231663361633337356261633630316639376561643735663265373931343362646637316665326334626530343365386630313031383238323538316436316262343066316136343762633838633162643662373338646238656236363335376439323634373465613566666436626161373663396662313932373130383235383164363162623430663161363437626338386331626436623733386462386562363633353764393236343734656135666664366261613736633966623139396334303032316230303030303031346634366134306230303331393033653831336131383230343538316336633531386234383631626238386231333935636562313136333432636563626366623837333632383236353566396136316334633336386131383235383230343063326134326665333234373539613634306463666464626336396566326533623766653561393938616638643636363033353937373262663434633964633030383230316636a16a6f7065726174696f6e7384a6746f7065726174696f6e5f6964656e746966696572a265696e646578006d6e6574776f726b5f696e64657800676163636f756e74a16761646472657373783a616464723176786135707564786737376733736461646465636d773874766336686d796e79776e34396c6c747434666d766e3763706e6b63707866616d6f756e74a26863757272656e6379a26673796d626f6c6341444168646563696d616c73066576616c75656c2d39303030303030303030306b636f696e5f6368616e6765a26f636f696e5f6964656e746966696572a16a6964656e7469666965727842326632336664386363613833356166323166336163333735626163363031663937656164373566326537393134336264663731666532633462653034336538663a316b636f696e5f616374696f6e6a636f696e5f7370656e74667374617475736773756363657373647479706565696e707574a6746f7065726174696f6e5f6964656e746966696572a165696e646578017272656c617465645f6f7065726174696f6e7381a165696e64657800676163636f756e74a16761646472657373783a616464723176786135707564786737376733736461646465636d773874766336686d796e79776e34396c6c747434666d766e3763706e6b63707866616d6f756e74a26863757272656e6379a26673796d626f6c6341444168646563696d616c73066576616c75656531303030306673746174757367737563636573736474797065666f7574707574a6746f7065726174696f6e5f6964656e746966696572a165696e646578027272656c617465645f6f7065726174696f6e7381a165696e64657800676163636f756e74a16761646472657373783a616464723176786135707564786737376733736461646465636d773874766336686d796e79776e34396c6c747434666d766e3763706e6b63707866616d6f756e74a26863757272656e6379a26673796d626f6c6341444168646563696d616c73066576616c75656534303030306673746174757367737563636573736474797065666f7574707574a5746f7065726174696f6e5f6964656e746966696572a165696e64657803676163636f756e74a1676164647265737378383663353138623438363162623838623133393563656231313633343263656362636662383733363238323635356639613631633463333638686d65746164617461a17818706f6f6c476f7665726e616e6365566f7465506172616d73a36f706f6f6c5f63726564656e7469616ca2696865785f62797465737840363061666265393832666161656533346230326164306537356364353064356437613733346635646161663762363762633863343932656235323939616632626a63757276655f747970656c65647761726473323535313964766f74656379657371676f7665726e616e63655f616374696f6ea26574785f696478403430633261343266653332343735396136343064636664646263363965663265336237666535613939386166386436363630333539373732626634346339646365696e64657800667374617475736773756363657373647479706572706f6f6c476f7665726e616e6365566f7465\";",
													"    pm.expect(jsonData.unsigned_transaction).to.eql(expectedUnsignedTransaction);",
													"});",
													"",
													"// 🔹 Exact match: payloads array size",
													"pm.test(\"payloads array has exactly 2 elements\", function () {",
													"    pm.expect(jsonData.payloads).to.be.an(\"array\").with.lengthOf(2);",
													"});",
													"",
													"// 🔸 Payload 1",
													"pm.test(\"Payload 1 - full match\", function () {",
													"    pm.expect(jsonData.payloads[0]).to.eql({",
													"        account_identifier: {",
													"            address: \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"",
													"        },",
													"        hex_bytes: \"963d3b2538bf571ab3f08fd047e6cdd13ec13cb6ec0c79d9ca35d7eac9d5bb94\",",
													"        signature_type: \"ed25519\"",
													"    });",
													"});",
													"",
													"// 🔸 Payload 2",
													"pm.test(\"Payload 2 - full match\", function () {",
													"    pm.expect(jsonData.payloads[1]).to.eql({",
													"        account_identifier: {",
													"            address: \"6c518b4861bb88b1395ceb116342cecbcfb8736282655f9a61c4c368\"",
													"        },",
													"        hex_bytes: \"963d3b2538bf571ab3f08fd047e6cdd13ec13cb6ec0c79d9ca35d7eac9d5bb94\",",
													"        signature_type: \"ed25519\"",
													"    });",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"network_identifier\": {\n        \"blockchain\": \"cardano\",\n        \"network\": \"{{networkId}}\"\n    },\n    \"operations\": [\n        {\n            \"operation_identifier\": {\n                \"index\": 0,\n                \"network_index\": 0\n            },\n            \"type\": \"input\",\n            \"status\": \"success\",\n            \"account\": {\n                \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n            },\n            \"amount\": {\n                \"value\": \"-90000000000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            },\n            \"coin_change\": {\n                \"coin_identifier\": {\n                    \"identifier\": \"2f23fd8cca835af21f3ac375bac601f97ead75f2e79143bdf71fe2c4be043e8f:1\"\n                },\n                \"coin_action\": \"coin_spent\"\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 1\n            },\n            \"related_operations\": [\n                {\n                    \"index\": 0\n                }\n            ],\n            \"type\": \"output\",\n            \"status\": \"success\",\n            \"account\": {\n                \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n            },\n            \"amount\": {\n                \"value\": \"10000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 2\n            },\n            \"related_operations\": [\n                {\n                    \"index\": 0\n                }\n            ],\n            \"type\": \"output\",\n            \"status\": \"success\",\n            \"account\": {\n                \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n            },\n            \"amount\": {\n                \"value\": \"40000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 3\n            },\n            \"type\": \"poolGovernanceVote\",\n            \"status\": \"success\",\n            \"account\": {\n                \"address\": \"6c518b4861bb88b1395ceb116342cecbcfb8736282655f9a61c4c368\"\n            },\n            \"metadata\": {\n                \"poolGovernanceVoteParams\": {\n                    \"governance_action_hash\": \"40c2a42fe324759a640dcfddbc69ef2e3b7fe5a998af8d6660359772bf44c9dc00\",\n                    \"pool_credential\": {\n                        \"hex_bytes\": \"582060afbe982faaee34b02ad0e75cd50d5d7a734f5daaf7b67bc8c492eb5299af2b\",\n                        \"curve_type\": \"edwards25519\"\n                    },\n                    \"vote\": \"yes\"\n                }\n            }\n        }\n    ],\n    \"metadata\": {\n        \"ttl\": \"1000\",\n        \"protocol_parameters\": {\n            \"coinsPerUtxoSize\": \"0\",\n            \"maxTxSize\": 16384,\n            \"maxValSize\": 0,\n            \"keyDeposit\": \"2000000\",\n            \"maxCollateralInputs\": 0,\n            \"minFeeCoefficient\": 44,\n            \"minFeeConstant\": 155381,\n            \"minPoolCost\": \"340000000\",\n            \"poolDeposit\": \"500000000\",\n            \"protocol\": 4\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/construction/payloads",
											"host": [
												"{{URL}}"
											],
											"path": [
												"construction",
												"payloads"
											]
										}
									},
									"response": []
								},
								{
									"name": "gov pool voting - account - vote yes, no vote rationale, key mismatch",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 500\", function () {",
													"    pm.response.to.have.status(500);",
													"});",
													"",
													"pm.test(\"Error code is 5047\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.code).to.eql(5047);",
													"});",
													"",
													"pm.test(\"Error message is 'Governance vote is invalid'\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.message).to.eql(\"Invalid governance vote, reason: Pool key hash passed as account.address does not match with pool credential key hash!\");",
													"});",
													"",
													"pm.test(\"Retriable is false\", function () {",
													"    var jsonData = pm.response.json();",
													"    pm.expect(jsonData.retriable).to.eql(false);",
													"});",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"network_identifier\": {\n        \"blockchain\": \"cardano\",\n        \"network\": \"{{networkId}}\"\n    },\n    \"operations\": [\n        {\n            \"operation_identifier\": {\n                \"index\": 0,\n                \"network_index\": 0\n            },\n            \"type\": \"input\",\n            \"status\": \"success\",\n            \"account\": {\n                \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n            },\n            \"amount\": {\n                \"value\": \"-90000000000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            },\n            \"coin_change\": {\n                \"coin_identifier\": {\n                    \"identifier\": \"2f23fd8cca835af21f3ac375bac601f97ead75f2e79143bdf71fe2c4be043e8f:1\"\n                },\n                \"coin_action\": \"coin_spent\"\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 1\n            },\n            \"related_operations\": [\n                {\n                    \"index\": 0\n                }\n            ],\n            \"type\": \"output\",\n            \"status\": \"success\",\n            \"account\": {\n                \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n            },\n            \"amount\": {\n                \"value\": \"10000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 2\n            },\n            \"related_operations\": [\n                {\n                    \"index\": 0\n                }\n            ],\n            \"type\": \"output\",\n            \"status\": \"success\",\n            \"account\": {\n                \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n            },\n            \"amount\": {\n                \"value\": \"40000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 3\n            },\n            \"type\": \"poolGovernanceVote\",\n            \"status\": \"success\",\n            \"account\": {\n                \"address\": \"6c518b4861bb88b1395ceb116342cecbcfb8736282655f9a61c4c368\"\n            },\n            \"metadata\": {\n                \"poolGovernanceVoteParams\": {\n                    \"governance_action_hash\": \"40c2a42fe324759a640dcfddbc69ef2e3b7fe5a998af8d6660359772bf44c9dc00\",\n                    \"pool_credential\": {\n                        \"hex_bytes\": \"582060afbe982faaee34b02ad0e75cd50d5d7a734f5daaf7b67bc8c492eb5299af2a\",\n                        \"curve_type\": \"edwards25519\"\n                    },\n                    \"vote\": \"yes\"\n                }\n            }\n        }\n    ],\n    \"metadata\": {\n        \"ttl\": \"1000\",\n        \"protocol_parameters\": {\n            \"coinsPerUtxoSize\": \"0\",\n            \"maxTxSize\": 16384,\n            \"maxValSize\": 0,\n            \"keyDeposit\": \"2000000\",\n            \"maxCollateralInputs\": 0,\n            \"minFeeCoefficient\": 44,\n            \"minFeeConstant\": 155381,\n            \"minPoolCost\": \"340000000\",\n            \"poolDeposit\": \"500000000\",\n            \"protocol\": 4\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/construction/payloads",
											"host": [
												"{{URL}}"
											],
											"path": [
												"construction",
												"payloads"
											]
										}
									},
									"response": []
								},
								{
									"name": "gov pool voting - account bech32 - vote no, no vote rationale",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"const jsonData = pm.response.json();",
													"",
													"// 🔹 Exact match: unsigned_transaction",
													"pm.test(\"Exact match for unsigned_transaction\", function () {",
													"    const expectedUnsignedTransaction = \"827901946135303064393031303238313832353832303266323366643863636138333561663231663361633337356261633630316639376561643735663265373931343362646637316665326334626530343365386630313031383238323538316436316262343066316136343762633838633162643662373338646238656236363335376439323634373465613566666436626161373663396662313932373130383235383164363162623430663161363437626338386331626436623733386462386562363633353764393236343734656135666664366261613736633966623139396334303032316230303030303031346634366134306230303331393033653831336131383230343538316336633531386234383631626238386231333935636562313136333432636563626366623837333632383236353566396136316334633336386131383235383230343063326134326665333234373539613634306463666464626336396566326533623766653561393938616638643636363033353937373262663434633964633030383230306636a16a6f7065726174696f6e7384a6746f7065726174696f6e5f6964656e746966696572a265696e646578006d6e6574776f726b5f696e64657800676163636f756e74a16761646472657373783a616464723176786135707564786737376733736461646465636d773874766336686d796e79776e34396c6c747434666d766e3763706e6b63707866616d6f756e74a26863757272656e6379a26673796d626f6c6341444168646563696d616c73066576616c75656c2d39303030303030303030306b636f696e5f6368616e6765a26f636f696e5f6964656e746966696572a16a6964656e7469666965727842326632336664386363613833356166323166336163333735626163363031663937656164373566326537393134336264663731666532633462653034336538663a316b636f696e5f616374696f6e6a636f696e5f7370656e74667374617475736773756363657373647479706565696e707574a6746f7065726174696f6e5f6964656e746966696572a165696e646578017272656c617465645f6f7065726174696f6e7381a165696e64657800676163636f756e74a16761646472657373783a616464723176786135707564786737376733736461646465636d773874766336686d796e79776e34396c6c747434666d766e3763706e6b63707866616d6f756e74a26863757272656e6379a26673796d626f6c6341444168646563696d616c73066576616c75656531303030306673746174757367737563636573736474797065666f7574707574a6746f7065726174696f6e5f6964656e746966696572a165696e646578027272656c617465645f6f7065726174696f6e7381a165696e64657800676163636f756e74a16761646472657373783a616464723176786135707564786737376733736461646465636d773874766336686d796e79776e34396c6c747434666d766e3763706e6b63707866616d6f756e74a26863757272656e6379a26673796d626f6c6341444168646563696d616c73066576616c75656534303030306673746174757367737563636573736474797065666f7574707574a5746f7065726174696f6e5f6964656e746966696572a165696e64657803676163636f756e74a1676164647265737378383663353138623438363162623838623133393563656231313633343263656362636662383733363238323635356639613631633463333638686d65746164617461a17818706f6f6c476f7665726e616e6365566f7465506172616d73a36f706f6f6c5f63726564656e7469616ca2696865785f62797465737840363061666265393832666161656533346230326164306537356364353064356437613733346635646161663762363762633863343932656235323939616632626a63757276655f747970656c65647761726473323535313964766f7465626e6f71676f7665726e616e63655f616374696f6ea26574785f696478403430633261343266653332343735396136343064636664646263363965663265336237666535613939386166386436363630333539373732626634346339646365696e64657800667374617475736773756363657373647479706572706f6f6c476f7665726e616e6365566f7465\";",
													"    pm.expect(jsonData.unsigned_transaction).to.eql(expectedUnsignedTransaction);",
													"});",
													"",
													"// 🔹 Exact match: payloads array size",
													"pm.test(\"payloads array has exactly 2 elements\", function () {",
													"    pm.expect(jsonData.payloads).to.be.an(\"array\").with.lengthOf(2);",
													"});",
													"",
													"// 🔸 Payload 1",
													"pm.test(\"Payload 1 - full match\", function () {",
													"    pm.expect(jsonData.payloads[0]).to.eql({",
													"        account_identifier: {",
													"            address: \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"",
													"        },",
													"        hex_bytes: \"bcb5207bd633c0d3408f8af99c1bb587647e5663943eda5d27a75abea32120a0\",",
													"        signature_type: \"ed25519\"",
													"    });",
													"});",
													"",
													"// 🔸 Payload 2",
													"pm.test(\"Payload 2 - full match\", function () {",
													"    pm.expect(jsonData.payloads[1]).to.eql({",
													"        account_identifier: {",
													"            address: \"6c518b4861bb88b1395ceb116342cecbcfb8736282655f9a61c4c368\"",
													"        },",
													"        hex_bytes: \"bcb5207bd633c0d3408f8af99c1bb587647e5663943eda5d27a75abea32120a0\",",
													"        signature_type: \"ed25519\"",
													"    });",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"network_identifier\": {\n        \"blockchain\": \"cardano\",\n        \"network\": \"{{networkId}}\"\n    },\n    \"operations\": [\n        {\n            \"operation_identifier\": {\n                \"index\": 0,\n                \"network_index\": 0\n            },\n            \"type\": \"input\",\n            \"status\": \"success\",\n            \"account\": {\n                \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n            },\n            \"amount\": {\n                \"value\": \"-90000000000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            },\n            \"coin_change\": {\n                \"coin_identifier\": {\n                    \"identifier\": \"2f23fd8cca835af21f3ac375bac601f97ead75f2e79143bdf71fe2c4be043e8f:1\"\n                },\n                \"coin_action\": \"coin_spent\"\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 1\n            },\n            \"related_operations\": [\n                {\n                    \"index\": 0\n                }\n            ],\n            \"type\": \"output\",\n            \"status\": \"success\",\n            \"account\": {\n                \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n            },\n            \"amount\": {\n                \"value\": \"10000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 2\n            },\n            \"related_operations\": [\n                {\n                    \"index\": 0\n                }\n            ],\n            \"type\": \"output\",\n            \"status\": \"success\",\n            \"account\": {\n                \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n            },\n            \"amount\": {\n                \"value\": \"40000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 3\n            },\n            \"type\": \"poolGovernanceVote\",\n            \"status\": \"success\",\n            \"account\": {\n                \"address\": \"pool1d3gckjrphwytzw2uavgkxskwe08msumzsfj4lxnpcnpks3zjml3\"\n            },\n            \"metadata\": {\n                \"poolGovernanceVoteParams\": {\n                    \"governance_action_hash\": \"40c2a42fe324759a640dcfddbc69ef2e3b7fe5a998af8d6660359772bf44c9dc00\",\n                    \"pool_credential\": {\n                        \"hex_bytes\": \"582060afbe982faaee34b02ad0e75cd50d5d7a734f5daaf7b67bc8c492eb5299af2b\",\n                        \"curve_type\": \"edwards25519\"\n                    },\n                    \"vote\": \"no\"\n                }\n            }\n        }\n    ],\n    \"metadata\": {\n        \"ttl\": \"1000\",\n        \"protocol_parameters\": {\n            \"coinsPerUtxoSize\": \"0\",\n            \"maxTxSize\": 16384,\n            \"maxValSize\": 0,\n            \"keyDeposit\": \"2000000\",\n            \"maxCollateralInputs\": 0,\n            \"minFeeCoefficient\": 44,\n            \"minFeeConstant\": 155381,\n            \"minPoolCost\": \"340000000\",\n            \"poolDeposit\": \"500000000\",\n            \"protocol\": 4\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/construction/payloads",
											"host": [
												"{{URL}}"
											],
											"path": [
												"construction",
												"payloads"
											]
										}
									},
									"response": []
								},
								{
									"name": "gov pool voting - account bech32 - vote abstain, no vote rationale",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"const jsonData = pm.response.json();",
													"",
													"// 🔹 Exact match: unsigned_transaction",
													"pm.test(\"Exact match for unsigned_transaction\", function () {",
													"    const expectedUnsignedTransaction = \"827901946135303064393031303238313832353832303266323366643863636138333561663231663361633337356261633630316639376561643735663265373931343362646637316665326334626530343365386630313031383238323538316436316262343066316136343762633838633162643662373338646238656236363335376439323634373465613566666436626161373663396662313932373130383235383164363162623430663161363437626338386331626436623733386462386562363633353764393236343734656135666664366261613736633966623139396334303032316230303030303031346634366134306230303331393033653831336131383230343538316336633531386234383631626238386231333935636562313136333432636563626366623837333632383236353566396136316334633336386131383235383230343063326134326665333234373539613634306463666464626336396566326533623766653561393938616638643636363033353937373262663434633964633030383230326636a16a6f7065726174696f6e7384a6746f7065726174696f6e5f6964656e746966696572a265696e646578006d6e6574776f726b5f696e64657800676163636f756e74a16761646472657373783a616464723176786135707564786737376733736461646465636d773874766336686d796e79776e34396c6c747434666d766e3763706e6b63707866616d6f756e74a26863757272656e6379a26673796d626f6c6341444168646563696d616c73066576616c75656c2d39303030303030303030306b636f696e5f6368616e6765a26f636f696e5f6964656e746966696572a16a6964656e7469666965727842326632336664386363613833356166323166336163333735626163363031663937656164373566326537393134336264663731666532633462653034336538663a316b636f696e5f616374696f6e6a636f696e5f7370656e74667374617475736773756363657373647479706565696e707574a6746f7065726174696f6e5f6964656e746966696572a165696e646578017272656c617465645f6f7065726174696f6e7381a165696e64657800676163636f756e74a16761646472657373783a616464723176786135707564786737376733736461646465636d773874766336686d796e79776e34396c6c747434666d766e3763706e6b63707866616d6f756e74a26863757272656e6379a26673796d626f6c6341444168646563696d616c73066576616c75656531303030306673746174757367737563636573736474797065666f7574707574a6746f7065726174696f6e5f6964656e746966696572a165696e646578027272656c617465645f6f7065726174696f6e7381a165696e64657800676163636f756e74a16761646472657373783a616464723176786135707564786737376733736461646465636d773874766336686d796e79776e34396c6c747434666d766e3763706e6b63707866616d6f756e74a26863757272656e6379a26673796d626f6c6341444168646563696d616c73066576616c75656534303030306673746174757367737563636573736474797065666f7574707574a5746f7065726174696f6e5f6964656e746966696572a165696e64657803676163636f756e74a1676164647265737378383663353138623438363162623838623133393563656231313633343263656362636662383733363238323635356639613631633463333638686d65746164617461a17818706f6f6c476f7665726e616e6365566f7465506172616d73a36f706f6f6c5f63726564656e7469616ca2696865785f62797465737840363061666265393832666161656533346230326164306537356364353064356437613733346635646161663762363762633863343932656235323939616632626a63757276655f747970656c65647761726473323535313964766f7465676162737461696e71676f7665726e616e63655f616374696f6ea26574785f696478403430633261343266653332343735396136343064636664646263363965663265336237666535613939386166386436363630333539373732626634346339646365696e64657800667374617475736773756363657373647479706572706f6f6c476f7665726e616e6365566f7465\";",
													"    pm.expect(jsonData.unsigned_transaction).to.eql(expectedUnsignedTransaction);",
													"});",
													"",
													"// 🔹 Exact match: payloads array size",
													"pm.test(\"payloads array has exactly 2 elements\", function () {",
													"    pm.expect(jsonData.payloads).to.be.an(\"array\").with.lengthOf(2);",
													"});",
													"",
													"// 🔸 Payload 1",
													"pm.test(\"Payload 1 - full match\", function () {",
													"    pm.expect(jsonData.payloads[0]).to.eql({",
													"        account_identifier: {",
													"            address: \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"",
													"        },",
													"        hex_bytes: \"0f1f79b59daa387c4e781e1b3ac5525ac571c6d77457c74c0a77b3ccc598d6a3\",",
													"        signature_type: \"ed25519\"",
													"    });",
													"});",
													"",
													"// 🔸 Payload 2",
													"pm.test(\"Payload 2 - full match\", function () {",
													"    pm.expect(jsonData.payloads[1]).to.eql({",
													"        account_identifier: {",
													"            address: \"6c518b4861bb88b1395ceb116342cecbcfb8736282655f9a61c4c368\"",
													"        },",
													"        hex_bytes: \"0f1f79b59daa387c4e781e1b3ac5525ac571c6d77457c74c0a77b3ccc598d6a3\",",
													"        signature_type: \"ed25519\"",
													"    });",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"network_identifier\": {\n        \"blockchain\": \"cardano\",\n        \"network\": \"{{networkId}}\"\n    },\n    \"operations\": [\n        {\n            \"operation_identifier\": {\n                \"index\": 0,\n                \"network_index\": 0\n            },\n            \"type\": \"input\",\n            \"status\": \"success\",\n            \"account\": {\n                \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n            },\n            \"amount\": {\n                \"value\": \"-90000000000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            },\n            \"coin_change\": {\n                \"coin_identifier\": {\n                    \"identifier\": \"2f23fd8cca835af21f3ac375bac601f97ead75f2e79143bdf71fe2c4be043e8f:1\"\n                },\n                \"coin_action\": \"coin_spent\"\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 1\n            },\n            \"related_operations\": [\n                {\n                    \"index\": 0\n                }\n            ],\n            \"type\": \"output\",\n            \"status\": \"success\",\n            \"account\": {\n                \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n            },\n            \"amount\": {\n                \"value\": \"10000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 2\n            },\n            \"related_operations\": [\n                {\n                    \"index\": 0\n                }\n            ],\n            \"type\": \"output\",\n            \"status\": \"success\",\n            \"account\": {\n                \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n            },\n            \"amount\": {\n                \"value\": \"40000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 3\n            },\n            \"type\": \"poolGovernanceVote\",\n            \"status\": \"success\",\n            \"account\": {\n                \"address\": \"pool1d3gckjrphwytzw2uavgkxskwe08msumzsfj4lxnpcnpks3zjml3\"\n            },\n            \"metadata\": {\n                \"poolGovernanceVoteParams\": {\n                    \"governance_action_hash\": \"40c2a42fe324759a640dcfddbc69ef2e3b7fe5a998af8d6660359772bf44c9dc00\",\n                    \"pool_credential\": {\n                        \"hex_bytes\": \"582060afbe982faaee34b02ad0e75cd50d5d7a734f5daaf7b67bc8c492eb5299af2b\",\n                        \"curve_type\": \"edwards25519\"\n                    },\n                    \"vote\": \"abstain\"\n                }\n            }\n        }\n    ],\n    \"metadata\": {\n        \"ttl\": \"1000\",\n        \"protocol_parameters\": {\n            \"coinsPerUtxoSize\": \"0\",\n            \"maxTxSize\": 16384,\n            \"maxValSize\": 0,\n            \"keyDeposit\": \"2000000\",\n            \"maxCollateralInputs\": 0,\n            \"minFeeCoefficient\": 44,\n            \"minFeeConstant\": 155381,\n            \"minPoolCost\": \"340000000\",\n            \"poolDeposit\": \"500000000\",\n            \"protocol\": 4\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/construction/payloads",
											"host": [
												"{{URL}}"
											],
											"path": [
												"construction",
												"payloads"
											]
										}
									},
									"response": []
								},
								{
									"name": "gov pool voting - account bech32 - vote yes, vote rationale present",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"const jsonData = pm.response.json();",
													"",
													"// 🔹 Exact match: unsigned_transaction",
													"pm.test(\"Exact match for unsigned_transaction\", function () {",
													"    const expectedUnsignedTransaction = \"827902606135303064393031303238313832353832303266323366643863636138333561663231663361633337356261633630316639376561643735663265373931343362646637316665326334626530343365386630313031383238323538316436316262343066316136343762633838633162643662373338646238656236363335376439323634373465613566666436626161373663396662313932373130383235383164363162623430663161363437626338386331626436623733386462386562363633353764393236343734656135666664366261613736633966623139396334303032316230303030303031346634366134306230303331393033653831336131383230343538316336633531386234383631626238386231333935636562313136333432636563626366623837333632383236353566396136316334633336386131383235383230343063326134326665333234373539613634306463666464626336396566326533623766653561393938616638643636363033353937373262663434633964633030383230313832373834323639373036363733336132663266363236313636373936323635363936373337363836633735366637383336373836353636373136343637366437373633366537343736373336373735373836333761363937373332366636353666363736373332363636323736373936373635373833323631366133363731363336363666333633343538323063373766383432376532383038636264346337303933616137303466623066636234386232616233626464383466613766346465633265623764653334346339a16a6f7065726174696f6e7384a6746f7065726174696f6e5f6964656e746966696572a265696e646578006d6e6574776f726b5f696e64657800676163636f756e74a16761646472657373783a616464723176786135707564786737376733736461646465636d773874766336686d796e79776e34396c6c747434666d766e3763706e6b63707866616d6f756e74a26863757272656e6379a26673796d626f6c6341444168646563696d616c73066576616c75656c2d39303030303030303030306b636f696e5f6368616e6765a26f636f696e5f6964656e746966696572a16a6964656e7469666965727842326632336664386363613833356166323166336163333735626163363031663937656164373566326537393134336264663731666532633462653034336538663a316b636f696e5f616374696f6e6a636f696e5f7370656e74667374617475736773756363657373647479706565696e707574a6746f7065726174696f6e5f6964656e746966696572a165696e646578017272656c617465645f6f7065726174696f6e7381a165696e64657800676163636f756e74a16761646472657373783a616464723176786135707564786737376733736461646465636d773874766336686d796e79776e34396c6c747434666d766e3763706e6b63707866616d6f756e74a26863757272656e6379a26673796d626f6c6341444168646563696d616c73066576616c75656531303030306673746174757367737563636573736474797065666f7574707574a6746f7065726174696f6e5f6964656e746966696572a165696e646578027272656c617465645f6f7065726174696f6e7381a165696e64657800676163636f756e74a16761646472657373783a616464723176786135707564786737376733736461646465636d773874766336686d796e79776e34396c6c747434666d766e3763706e6b63707866616d6f756e74a26863757272656e6379a26673796d626f6c6341444168646563696d616c73066576616c75656534303030306673746174757367737563636573736474797065666f7574707574a5746f7065726174696f6e5f6964656e746966696572a165696e64657803676163636f756e74a1676164647265737378383663353138623438363162623838623133393563656231313633343263656362636662383733363238323635356639613631633463333638686d65746164617461a17818706f6f6c476f7665726e616e6365566f7465506172616d73a46f706f6f6c5f63726564656e7469616ca2696865785f62797465737840363061666265393832666161656533346230326164306537356364353064356437613733346635646161663762363762633863343932656235323939616632626a63757276655f747970656c65647761726473323535313964766f7465637965736e766f74655f726174696f6e616c65a26375726c7842697066733a2f2f626166796265696737686c756f78367865667164676d77636e747673677578637a6977326f656f6767326662767967657832616a367163666f363469646174615f6861736878406337376638343237653238303863626434633730393361613730346662306663623438623261623362646438346661376634646563326562376465333434633971676f7665726e616e63655f616374696f6ea26574785f696478403430633261343266653332343735396136343064636664646263363965663265336237666535613939386166386436363630333539373732626634346339646365696e64657800667374617475736773756363657373647479706572706f6f6c476f7665726e616e6365566f7465\";",
													"    pm.expect(jsonData.unsigned_transaction).to.eql(expectedUnsignedTransaction);",
													"});",
													"",
													"// 🔹 Exact match: payloads array size",
													"pm.test(\"payloads array has exactly 2 elements\", function () {",
													"    pm.expect(jsonData.payloads).to.be.an(\"array\").with.lengthOf(2);",
													"});",
													"",
													"// 🔸 Payload 1",
													"pm.test(\"Payload 1 - full match\", function () {",
													"    pm.expect(jsonData.payloads[0]).to.eql({",
													"        account_identifier: {",
													"            address: \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"",
													"        },",
													"        hex_bytes: \"e771128cc16fa017ec95f0d6b07ed8bdf8449a2c94d0468d89bdc1e54cdeeecc\",",
													"        signature_type: \"ed25519\"",
													"    });",
													"});",
													"",
													"// 🔸 Payload 2",
													"pm.test(\"Payload 2 - full match\", function () {",
													"    pm.expect(jsonData.payloads[1]).to.eql({",
													"        account_identifier: {",
													"            address: \"6c518b4861bb88b1395ceb116342cecbcfb8736282655f9a61c4c368\"",
													"        },",
													"        hex_bytes: \"e771128cc16fa017ec95f0d6b07ed8bdf8449a2c94d0468d89bdc1e54cdeeecc\",",
													"        signature_type: \"ed25519\"",
													"    });",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"network_identifier\": {\n        \"blockchain\": \"cardano\",\n        \"network\": \"{{networkId}}\"\n    },\n    \"operations\": [\n        {\n            \"operation_identifier\": {\n                \"index\": 0,\n                \"network_index\": 0\n            },\n            \"type\": \"input\",\n            \"status\": \"success\",\n            \"account\": {\n                \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n            },\n            \"amount\": {\n                \"value\": \"-90000000000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            },\n            \"coin_change\": {\n                \"coin_identifier\": {\n                    \"identifier\": \"2f23fd8cca835af21f3ac375bac601f97ead75f2e79143bdf71fe2c4be043e8f:1\"\n                },\n                \"coin_action\": \"coin_spent\"\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 1\n            },\n            \"related_operations\": [\n                {\n                    \"index\": 0\n                }\n            ],\n            \"type\": \"output\",\n            \"status\": \"success\",\n            \"account\": {\n                \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n            },\n            \"amount\": {\n                \"value\": \"10000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 2\n            },\n            \"related_operations\": [\n                {\n                    \"index\": 0\n                }\n            ],\n            \"type\": \"output\",\n            \"status\": \"success\",\n            \"account\": {\n                \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n            },\n            \"amount\": {\n                \"value\": \"40000\",\n                \"currency\": {\n                    \"symbol\": \"ADA\",\n                    \"decimals\": 6\n                }\n            }\n        },\n        {\n            \"operation_identifier\": {\n                \"index\": 3\n            },\n            \"type\": \"poolGovernanceVote\",\n            \"status\": \"success\",\n            \"account\": {\n                \"address\": \"pool1d3gckjrphwytzw2uavgkxskwe08msumzsfj4lxnpcnpks3zjml3\"\n            },\n            \"metadata\": {\n                \"poolGovernanceVoteParams\": {\n                    \"governance_action_hash\": \"40c2a42fe324759a640dcfddbc69ef2e3b7fe5a998af8d6660359772bf44c9dc00\",\n                    \"pool_credential\": {\n                        \"hex_bytes\": \"582060afbe982faaee34b02ad0e75cd50d5d7a734f5daaf7b67bc8c492eb5299af2b\",\n                        \"curve_type\": \"edwards25519\"\n                    },\n                    \"vote\": \"yes\",\n                    \"vote_rationale\": {\n                        \"data_hash\": \"c77f8427e2808cbd4c7093aa704fb0fcb48b2ab3bdd84fa7f4dec2eb7de344c9\",\n                        \"url\": \"ipfs://bafybeig7hluox6xefqdgmwcntvsguxcziw2oeogg2fbvygex2aj6qcfo64\"\n                    }\n                }\n            }\n        }\n    ],\n    \"metadata\": {\n        \"ttl\": \"1000\",\n        \"protocol_parameters\": {\n            \"coinsPerUtxoSize\": \"0\",\n            \"maxTxSize\": 16384,\n            \"maxValSize\": 0,\n            \"keyDeposit\": \"2000000\",\n            \"maxCollateralInputs\": 0,\n            \"minFeeCoefficient\": 44,\n            \"minFeeConstant\": 155381,\n            \"minPoolCost\": \"340000000\",\n            \"poolDeposit\": \"500000000\",\n            \"protocol\": 4\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/construction/payloads",
											"host": [
												"{{URL}}"
											],
											"path": [
												"construction",
												"payloads"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "drep vote delegation",
							"item": [
								{
									"name": "drep as a key_hash",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Status code is 200', function () {",
													"    pm.response.to.have.status(200);",
													"})",
													"console.log(pm.response.json())",
													"",
													"pm.test('Contains Json Body', function () {",
													"    pm.response.to.have.jsonBody('payloads');",
													"    pm.response.to.have.jsonBody('unsigned_transaction');",
													"})",
													"",
													"pm.test(\"Correct Values\", function () {",
													"    ",
													"    var responseData = pm.response.json();",
													"    pm.expect(responseData).to.be.an('object');",
													"    pm.expect(responseData.payloads.length).to.equal(2)",
													"    pm.expect(responseData.payloads[0].hex_bytes).to.match(/^c9c80d1a2b5ed5e8be3569a04dfcc98887f54/);",
													"});",
													"",
													"let jsonData = pm.response.json();",
													"",
													"// Expected addresses for exact match",
													"const expectedAddresses = [",
													"    \"stake_test1uza5pudxg77g3sdaddecmw8tvc\",",
													"    \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"",
													"];",
													"",
													"// Check top-level keys",
													"pm.test(\"Has 'unsigned_transaction' and 'payloads'\", function () {",
													"    pm.expect(jsonData).to.have.property(\"unsigned_transaction\");",
													"    pm.expect(jsonData).to.have.property(\"payloads\");",
													"    pm.expect(jsonData.unsigned_transaction).to.be.a(\"string\").and.not.empty;",
													"    pm.expect(jsonData.payloads).to.be.an(\"array\").with.lengthOf(2);",
													"});",
													"",
													"// Validate unsigned_transaction is a valid hex string",
													"pm.test(\"'unsigned_transaction' is valid hex\", function () {",
													"    let isHex = /^[0-9a-fA-F]+$/.test(jsonData.unsigned_transaction);",
													"    pm.expect(isHex).to.be.true;",
													"});",
													"",
													"// Validate each payload with exact match",
													"jsonData.payloads.forEach((payload, index) => {",
													"    const expectedAddress = expectedAddresses[index];",
													"",
													"    pm.test(`Payload #${index} - exact address match`, function () {",
													"        pm.expect(payload).to.have.property(\"account_identifier\");",
													"        pm.expect(payload.account_identifier).to.be.an(\"object\");",
													"        pm.expect(payload.account_identifier.address.startsWith(expectedAddress)).to.be.true;",
													"",
													"    });",
													"",
													"    pm.test(`Payload #${index} - hex_bytes is valid`, function () {",
													"        pm.expect(payload).to.have.property(\"hex_bytes\");",
													"        pm.expect(payload.hex_bytes).to.be.a(\"string\").and.match(/^[0-9a-fA-F]{64}$/);",
													"    });",
													"",
													"    pm.test(`Payload #${index} - signature_type is ed25519`, function () {",
													"        pm.expect(payload).to.have.property(\"signature_type\", \"ed25519\");",
													"    });",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"network_identifier\": {\n    \"blockchain\": \"cardano\",\n    \"network\": \"{{networkId}}\"\n  },\n  \"operations\": [\n    {\n      \"operation_identifier\": {\n        \"index\": 0,\n        \"network_index\": 0\n      },\n      \"type\": \"input\",\n      \"status\": \"success\",\n      \"account\": {\n        \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n      },\n      \"amount\": {\n        \"value\": \"-90000000000\",\n        \"currency\": {\n          \"symbol\": \"ADA\",\n          \"decimals\": 6\n        }\n      },\n      \"coin_change\": {\n        \"coin_identifier\": {\n          \"identifier\": \"2f23fd8cca835af21f3ac375bac601f97ead75f2e79143bdf71fe2c4be043e8f:1\"\n        },\n        \"coin_action\": \"coin_spent\"\n      }\n    },\n    {\n      \"operation_identifier\": {\n        \"index\": 1\n      },\n      \"related_operations\": [\n        {\n          \"index\": 0\n        }\n      ],\n      \"type\": \"output\",\n      \"status\": \"success\",\n      \"account\": {\n        \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n      },\n      \"amount\": {\n        \"value\": \"10000\",\n        \"currency\": {\n          \"symbol\": \"ADA\",\n          \"decimals\": 6\n        }\n      }\n    },\n    {\n      \"operation_identifier\": {\n        \"index\": 2\n      },\n      \"related_operations\": [\n        {\n          \"index\": 0\n        }\n      ],\n      \"type\": \"output\",\n      \"status\": \"success\",\n      \"account\": {\n        \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n      },\n      \"amount\": {\n        \"value\": \"40000\",\n        \"currency\": {\n          \"symbol\": \"ADA\",\n          \"decimals\": 6\n        }\n      }\n    },\n    {\n      \"operation_identifier\": {\n        \"index\": 3\n      },\n      \"type\": \"dRepVoteDelegation\",\n      \"status\": \"success\",\n      \"account\": {\n        \"address\": \"stake1uxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7caek7a5\"\n      },\n      \"metadata\": {\n        \"staking_credential\": {\n          \"hex_bytes\": \"1B400D60AAF34EAF6DCBAB9BBA46001A23497886CF11066F7846933D30E5AD3F\",\n          \"curve_type\": \"edwards25519\"\n        },\n        \"drep\": {\n          \"id\": \"74984fae4ca1715fa1f8759f9d871015ac87f449a85dea6cf9956da1\",\n          \"type\": \"key_hash\"\n        }\n      }\n    }\n  ],\n  \"metadata\": {\n    \"ttl\": \"1000\",\n    \"protocol_parameters\": {\n      \"coinsPerUtxoSize\": \"0\",\n      \"maxTxSize\": 16384,\n      \"maxValSize\": 0,\n      \"keyDeposit\": \"2000000\",\n      \"maxCollateralInputs\": 0,\n      \"minFeeCoefficient\": 44,\n      \"minFeeConstant\": 155381,\n      \"minPoolCost\": \"340000000\",\n      \"poolDeposit\": \"500000000\",\n      \"protocol\": 4\n    }\n  }\n}\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/construction/payloads",
											"host": [
												"{{URL}}"
											],
											"path": [
												"construction",
												"payloads"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "simple",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"console.log(pm.response.json())",
											"",
											"pm.test('Contains Json Body', function () {",
											"    pm.response.to.have.jsonBody('payloads');",
											"    pm.response.to.have.jsonBody('unsigned_transaction');",
											"})",
											"",
											"pm.test(\"Correct Values\", function () {",
											"    ",
											"    var responseData = pm.response.json();",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData.payloads.length).to.equal(2)",
											"    pm.expect(responseData.payloads[0].hex_bytes).to.match(/^92e6307474cee073502d96eab21436a188732/);",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"network_identifier\": {\n    \"blockchain\": \"cardano\",\n    \"network\": \"{{networkId}}\"\n  },\n  \"operations\": [\n    {\n      \"operation_identifier\": {\n        \"index\": 0,\n        \"network_index\": 0\n      },\n      \"type\": \"input\",\n      \"status\": \"success\",\n      \"account\": {\n        \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n      },\n      \"amount\": {\n        \"value\": \"-90000\",\n        \"currency\": {\n          \"symbol\": \"ADA\",\n          \"decimals\": 6\n        }\n      },\n      \"coin_change\": {\n        \"coin_identifier\": {\n          \"identifier\": \"2f23fd8cca835af21f3ac375bac601f97ead75f2e79143bdf71fe2c4be043e8f:1\"\n        },\n        \"coin_action\": \"coin_spent\"\n      }\n    },\n    {\n      \"operation_identifier\": {\n        \"index\": 1\n      },\n      \"related_operations\": [\n        {\n          \"index\": 0\n        }\n      ],\n      \"type\": \"output\",\n      \"status\": \"success\",\n      \"account\": {\n        \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n      },\n      \"amount\": {\n        \"value\": \"10000\",\n        \"currency\": {\n          \"symbol\": \"ADA\",\n          \"decimals\": 6\n        }\n      }\n    },\n    {\n      \"operation_identifier\": {\n        \"index\": 2\n      },\n      \"related_operations\": [\n        {\n          \"index\": 0\n        }\n      ],\n      \"type\": \"output\",\n      \"status\": \"success\",\n      \"account\": {\n        \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n      },\n      \"amount\": {\n        \"value\": \"40000\",\n        \"currency\": {\n          \"symbol\": \"ADA\",\n          \"decimals\": 6\n        }\n      }\n    },\n    {\n      \"operation_identifier\": {\n        \"index\": 3\n      },\n      \"type\": \"stakeKeyDeregistration\",\n      \"status\": \"success\",\n      \"account\": {\n        \"address\": \"stake1uxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7caek7a5\"\n      },\n      \"metadata\": {\n        \"staking_credential\": {\n          \"hex_bytes\": \"1B400D60AAF34EAF6DCBAB9BBA46001A23497886CF11066F7846933D30E5AD3F\",\n          \"curve_type\": \"edwards25519\"\n        }\n      }\n    }\n  ],\n  \"metadata\": {\n    \"ttl\": \"0\",\n    \"protocol_parameters\": {\n      \"coinsPerUtxoSize\": \"0\",\n      \"maxTxSize\": 16384,\n      \"maxValSize\": 0,\n      \"keyDeposit\": \"2000000\",\n      \"maxCollateralInputs\": 0,\n      \"minFeeCoefficient\": 44,\n      \"minFeeConstant\": 155381,\n      \"minPoolCost\": \"340000000\",\n      \"poolDeposit\": \"500000000\",\n      \"protocol\": 4\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/construction/payloads",
									"host": [
										"{{URL}}"
									],
									"path": [
										"construction",
										"payloads"
									]
								}
							},
							"response": []
						},
						{
							"name": "multiple assets",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"console.log(pm.response.json())",
											"",
											"pm.test('Contains Json Body', function () {",
											"    pm.response.to.have.jsonBody('payloads');",
											"    pm.response.to.have.jsonBody('unsigned_transaction');",
											"})",
											"",
											"pm.test(\"Correct Values\", function () {",
											"    ",
											"    var responseData = pm.response.json();",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData.payloads.length).to.equal(1)",
											"    pm.expect(responseData.payloads[0].account_identifier.address).to.equal('addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx')",
											"});",
											"",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"network_identifier\": {\n    \"blockchain\": \"cardano\",\n    \"network\": \"{{networkId}}\"\n  },\n  \"operations\": [\n    {\n      \"operation_identifier\": {\n        \"index\": 0,\n        \"network_index\": 0\n      },\n      \"type\": \"input\",\n      \"status\": \"success\",\n      \"account\": {\n        \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n      },\n      \"amount\": {\n        \"value\": \"-9000000\",\n        \"currency\": {\n          \"symbol\": \"ADA\",\n          \"decimals\": 6\n        }\n      },\n      \"coin_change\": {\n        \"coin_identifier\": {\n          \"identifier\": \"2f23fd8cca835af21f3ac375bac601f97ead75f2e79143bdf71fe2c4be043e8f:1\"\n        },\n        \"coin_action\": \"coin_spent\"\n      }\n    },\n    {\n      \"operation_identifier\": {\n        \"index\": 1\n      },\n      \"related_operations\": [\n        {\n          \"index\": 0\n        }\n      ],\n      \"type\": \"output\",\n      \"status\": \"success\",\n      \"account\": {\n        \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n      },\n      \"amount\": {\n        \"value\": \"10000\",\n        \"currency\": {\n          \"symbol\": \"ADA\",\n          \"decimals\": 6\n        }\n      }\n    },\n    {\n      \"operation_identifier\": {\n        \"index\": 2\n      },\n      \"related_operations\": [\n        {\n          \"index\": 0\n        }\n      ],\n      \"type\": \"output\",\n      \"status\": \"success\",\n      \"account\": {\n        \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n      },\n      \"amount\": {\n        \"value\": \"40000\",\n        \"currency\": {\n          \"symbol\": \"ADA\",\n          \"decimals\": 6\n        }\n      }\n    },\n    {\n      \"operation_identifier\": {\n        \"index\": 3\n      },\n      \"type\": \"stakeKeyRegistration\",\n      \"status\": \"success\",\n      \"account\": {\n        \"address\": \"stake1uxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7caek7a5\"\n      },\n      \"metadata\": {\n        \"staking_credential\": {\n          \"hex_bytes\": \"1B400D60AAF34EAF6DCBAB9BBA46001A23497886CF11066F7846933D30E5AD3F\",\n          \"curve_type\": \"edwards25519\"\n        },\n        \"depositAmount\": {\n          \"currency\": {\n            \"decimals\": 6,\n            \"symbol\": \"ADA\"\n          },\n          \"value\": \"2000000\"\n        }\n      }\n    }\n  ],\n  \"metadata\": {\n    \"ttl\": \"1000\",\n    \"protocol_parameters\": {\n      \"coinsPerUtxoSize\": \"0\",\n      \"maxTxSize\": 16384,\n      \"maxValSize\": 0,\n      \"keyDeposit\": \"2000000\",\n      \"maxCollateralInputs\": 0,\n      \"minFeeCoefficient\": 44,\n      \"minFeeConstant\": 155381,\n      \"minPoolCost\": \"340000000\",\n      \"poolDeposit\": \"500000000\",\n      \"protocol\": 4\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/construction/payloads",
									"host": [
										"{{URL}}"
									],
									"path": [
										"construction",
										"payloads"
									]
								}
							},
							"response": []
						},
						{
							"name": "stake delegation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"console.log(pm.response.json())",
											"",
											"pm.test('Contains Json Body', function () {",
											"    pm.response.to.have.jsonBody('payloads');",
											"    pm.response.to.have.jsonBody('unsigned_transaction');",
											"})",
											"",
											"pm.test(\"Correct Values\", function () {",
											"    var responseData = pm.response.json();",
											"    pm.expect(responseData).to.be.an('object');",
											"    pm.expect(responseData.payloads.length).to.equal(2)",
											"    pm.expect(responseData.payloads[0].hex_bytes).to.match(/^41138e201e605f647e2e1852649368a0217ee/);",
											"});",
											"",
											"const jsonData = pm.response.json();",
											"",
											"// ---------- ASSERTIONS FOR unsigned_transaction ----------",
											"pm.test('unsigned_transaction is present and non-empty', function () {",
											"    pm.expect(jsonData).to.have.property(\"unsigned_transaction\");",
											"    pm.expect(jsonData.unsigned_transaction).to.be.a(\"string\").and.not.empty;",
											"    // Optional: basic length check (should be a long CBOR hex string)",
											"    pm.expect(jsonData.unsigned_transaction.length).to.be.greaterThan(100);",
											"});",
											"",
											"// ---------- ASSERTIONS FOR payloads ----------",
											"pm.test('payloads array exists and has length 2', function () {",
											"    pm.expect(jsonData).to.have.property(\"payloads\");",
											"    pm.expect(jsonData.payloads).to.be.an(\"array\").with.lengthOf(2);",
											"});",
											"",
											"jsonData.payloads.forEach((payload, index) => {",
											"    pm.test(`payload[${index}] has account_identifier with address`, function () {",
											"        pm.expect(payload).to.have.nested.property(\"account_identifier.address\").that.is.a(\"string\").and.not.empty;",
											"    });",
											"",
											"    pm.test(`payload[${index}] has hex_bytes`, function () {",
											"        pm.expect(payload).to.have.property(\"hex_bytes\").that.is.a(\"string\").and.not.empty;",
											"        pm.expect(payload.hex_bytes).to.match(/^[0-9a-f]+$/i);",
											"    });",
											"",
											"    pm.test(`payload[${index}] has signature_type \"ed25519\"`, function () {",
											"        pm.expect(payload).to.have.property(\"signature_type\", \"ed25519\");",
											"    });",
											"});",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"network_identifier\": {\n    \"blockchain\": \"cardano\",\n    \"network\": \"{{networkId}}\"\n  },\n  \"operations\": [\n    {\n      \"operation_identifier\": {\n        \"index\": 0,\n        \"network_index\": 0\n      },\n      \"type\": \"input\",\n      \"status\": \"success\",\n      \"account\": {\n        \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n      },\n      \"amount\": {\n        \"value\": \"-90000000000\",\n        \"currency\": {\n          \"symbol\": \"ADA\",\n          \"decimals\": 6\n        }\n      },\n      \"coin_change\": {\n        \"coin_identifier\": {\n          \"identifier\": \"2f23fd8cca835af21f3ac375bac601f97ead75f2e79143bdf71fe2c4be043e8f:1\"\n        },\n        \"coin_action\": \"coin_spent\"\n      }\n    },\n    {\n      \"operation_identifier\": {\n        \"index\": 1\n      },\n      \"related_operations\": [\n        {\n          \"index\": 0\n        }\n      ],\n      \"type\": \"output\",\n      \"status\": \"success\",\n      \"account\": {\n        \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n      },\n      \"amount\": {\n        \"value\": \"10000\",\n        \"currency\": {\n          \"symbol\": \"ADA\",\n          \"decimals\": 6\n        }\n      }\n    },\n    {\n      \"operation_identifier\": {\n        \"index\": 2\n      },\n      \"related_operations\": [\n        {\n          \"index\": 0\n        }\n      ],\n      \"type\": \"output\",\n      \"status\": \"success\",\n      \"account\": {\n        \"address\": \"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\"\n      },\n      \"amount\": {\n        \"value\": \"40000\",\n        \"currency\": {\n          \"symbol\": \"ADA\",\n          \"decimals\": 6\n        }\n      }\n    },\n    {\n      \"operation_identifier\": {\n        \"index\": 3\n      },\n      \"type\": \"stakeDelegation\",\n      \"status\": \"success\",\n      \"account\": {\n        \"address\": \"stake1uxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7caek7a5\"\n      },\n      \"metadata\": {\n        \"staking_credential\": {\n          \"hex_bytes\": \"1B400D60AAF34EAF6DCBAB9BBA46001A23497886CF11066F7846933D30E5AD3F\",\n          \"curve_type\": \"edwards25519\"\n        },\n        \"pool_key_hash\": \"1b268f4cba3faa7e36d8a0cc4adca2096fb856119412ee7330f692b5\"\n      }\n    }\n  ],\n  \"metadata\": {\n    \"ttl\": \"1000\",\n    \"protocol_parameters\": {\n      \"coinsPerUtxoSize\": \"0\",\n      \"maxTxSize\": 16384,\n      \"maxValSize\": 0,\n      \"keyDeposit\": \"2000000\",\n      \"maxCollateralInputs\": 0,\n      \"minFeeCoefficient\": 44,\n      \"minFeeConstant\": 155381,\n      \"minPoolCost\": \"340000000\",\n      \"poolDeposit\": \"500000000\",\n      \"protocol\": 4\n    }\n  }\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/construction/payloads",
									"host": [
										"{{URL}}"
									],
									"path": [
										"construction",
										"payloads"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "combine",
					"item": [
						{
							"name": "simple",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"console.log(pm.response.json())",
											"",
											"pm.test('Contains Json Body', function () {",
											"    pm.response.to.have.jsonBody('signed_transaction');",
											"})"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"network_identifier\": {\n    \"blockchain\": \"cardano\",\n    \"network\": \"{{networkId}}\"\n  },\n  \"unsigned_transaction\": \"8278ee61343030383138323538323032663233666438636361383335616632316633616333373562616336303166393765616437356632653739313433626466373166653263346265303433653866303130313832383235383164363162623430663161363437626338386331626436623733386462386562363633353764393236343734656135666664366261613736633966623139323731303832353831643631626234306631613634376263383863316264366237333864623865623636333537643932363437346561356666643662616137366339666231393963343030323139396334303033313930336538a16a6f7065726174696f6e7381a6746f7065726174696f6e5f6964656e746966696572a265696e646578006d6e6574776f726b5f696e64657800647479706565696e707574667374617475736773756363657373676163636f756e74a16761646472657373783b416532746450775550455a4336574a66565178544e4e3274577734736b47724e367a5256756b76784a6d544679316e596b5647514275555255334c66616d6f756e74a26576616c7565662d39303030306863757272656e6379a26673796d626f6c6341444168646563696d616c73066b636f696e5f6368616e6765a26f636f696e5f6964656e746966696572a16a6964656e7469666965727842326632336664386363613833356166323166336163333735626163363031663937656164373566326537393134336264663731666532633462653034336538663a316b636f696e5f616374696f6e6a636f696e5f7370656e74\",\n  \"signatures\": [\n    {\n      \"signing_payload\": {\n        \"account_identifier\": {\n          \"address\": \"Ae2tdPwUPEZC6WJfVQxTNN2tWw4skGrN6zRVukvxJmTFy1nYkVGQBuURU3L\",\n          \"metadata\": {\n            \"chain_code\": \"dd75e154da417becec55cdd249327454138f082110297d5e87ab25e15fad150f\"\n          }\n        },\n        \"hex_bytes\": \"4691ebf945f37962153f74e198ba2553177e6dc8e464303e37589077f634397c\",\n        \"signature_type\": \"ed25519\"\n      },\n      \"public_key\": {\n        \"hex_bytes\": \"73fea80d424276ad0978d4fe5310e8bc2d485f5f6bb3bf87612989f112ad5a7d\",\n        \"curve_type\": \"edwards25519\"\n      },\n      \"signature_type\": \"ed25519\",\n      \"hex_bytes\": \"dc2a1948bfa9411b37e8d280b04c48a85af5588bcf509c0fca798f7b462ebca92d6733dacc1f1c6c1463623c085401be07ea422ad4f1c543375e7d3d2393aa0b\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/construction/combine",
									"host": [
										"{{URL}}"
									],
									"path": [
										"construction",
										"combine"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "parse",
					"item": [
						{
							"name": "drep vote delegation",
							"item": [
								{
									"name": "drep as a key hash",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Status code is 200', function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"// Parse the response",
													"const jsonData = pm.response.json();",
													"",
													"// Find the operation with operation_identifier.index === 3",
													"const op = jsonData.operations.find(o => o.operation_identifier.index === 3);",
													"",
													"// Check if the operation exists",
													"pm.test(\"Operation index 3 exists\", function () {",
													"    pm.expect(op).to.not.be.undefined;",
													"});",
													"",
													"// Check if the type is correct",
													"pm.test(\"Type is dRepVoteDelegation\", function () {",
													"    pm.expect(op.type).to.eql(\"dRepVoteDelegation\");",
													"});",
													"",
													"// Check if the status is success",
													"pm.test(\"Status is success\", function () {",
													"    pm.expect(op.status).to.eql(\"\");",
													"});",
													"",
													"// Check account address",
													"pm.test(\"Account address is correct\", function () {",
													"    pm.expect(op.account.address).contains(\"stake1uxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7caek7a5\");",
													"});",
													"",
													"// Check staking credential",
													"pm.test(\"Staking credential hex_bytes is correct\", function () {",
													"    pm.expect(op.metadata.staking_credential.hex_bytes)",
													"        .to.eql(\"1B400D60AAF34EAF6DCBAB9BBA46001A23497886CF11066F7846933D30E5AD3F\");",
													"});",
													"",
													"pm.test(\"Staking credential curve_type is edwards25519\", function () {",
													"    pm.expect(op.metadata.staking_credential.curve_type).to.eql(\"edwards25519\");",
													"});",
													"",
													"// Check dRep id and type",
													"pm.test(\"dRep id is correct\", function () {",
													"    pm.expect(op.metadata.drep.id)",
													"        .to.eql(\"74984fae4ca1715fa1f8759f9d871015ac87f449a85dea6cf9956da1\");",
													"});",
													"",
													"pm.test(\"dRep type is key_hash\", function () {",
													"    pm.expect(op.metadata.drep.type).to.eql(\"key_hash\");",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"network_identifier\": {\n    \"blockchain\": \"cardano\",\n    \"network\": \"{{networkId}}\"\n  },\n  \"signed\": false,\n  \"transaction\": \"8279018ea16a6f7065726174696f6e7384a6746f7065726174696f6e5f6964656e746966696572a265696e646578006d6e6574776f726b5f696e64657800676163636f756e74a16761646472657373783a616464723176786135707564786737376733736461646465636d773874766336686d796e79776e34396c6c747434666d766e3763706e6b63707866616d6f756e74a26863757272656e6379a26673796d626f6c6341444168646563696d616c73066576616c75656c2d39303030303030303030306b636f696e5f6368616e6765a26f636f696e5f6964656e746966696572a16a6964656e7469666965727842326632336664386363613833356166323166336163333735626163363031663937656164373566326537393134336264663731666532633462653034336538663a316b636f696e5f616374696f6e6a636f696e5f7370656e74667374617475736773756363657373647479706565696e707574a6746f7065726174696f6e5f6964656e746966696572a165696e646578017272656c617465645f6f7065726174696f6e7381a165696e64657800676163636f756e74a16761646472657373783a616464723176786135707564786737376733736461646465636d773874766336686d796e79776e34396c6c747434666d766e3763706e6b63707866616d6f756e74a26863757272656e6379a26673796d626f6c6341444168646563696d616c73066576616c75656531303030306673746174757367737563636573736474797065666f7574707574a6746f7065726174696f6e5f6964656e746966696572a165696e646578027272656c617465645f6f7065726174696f6e7381a165696e64657800676163636f756e74a16761646472657373783a616464723176786135707564786737376733736461646465636d773874766336686d796e79776e34396c6c747434666d766e3763706e6b63707866616d6f756e74a26863757272656e6379a26673796d626f6c6341444168646563696d616c73066576616c75656534303030306673746174757367737563636573736474797065666f7574707574a5746f7065726174696f6e5f6964656e746966696572a165696e64657803676163636f756e74a16761646472657373783b7374616b653175786135707564786737376733736461646465636d773874766336686d796e79776e34396c6c747434666d766e376361656b376135686d65746164617461a2727374616b696e675f63726564656e7469616ca2696865785f62797465737840314234303044363041414633344541463644434241423942424134363030314132333439373838364346313130363646373834363933334433304535414433466a63757276655f747970656c6564776172647332353531396464726570a2626964783837343938346661653463613137313566613166383735396639643837313031356163383766343439613835646561366366393935366461316474797065686b65795f6861736866737461747573677375636365737364747970657264526570566f746544656c65676174696f6e\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/construction/parse",
											"host": [
												"{{URL}}"
											],
											"path": [
												"construction",
												"parse"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "spo_voting",
							"item": [
								{
									"name": "gov pool voting - account - vote yes, no vote rationale",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Status code is 200', function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"const json = pm.response.json();",
													"",
													"// ---- Assertions for Operation 0 ----",
													"pm.test(\"Operation 0 is an input with correct address and amount\", () => {",
													"    const op0 = json.operations[0];",
													"    pm.expect(op0.type).to.eql(\"input\");",
													"    pm.expect(op0.status).to.eql(\"success\");",
													"    pm.expect(op0.account.address).to.eql(\"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\");",
													"    pm.expect(op0.amount.value).to.eql(\"-90000000000\");",
													"    pm.expect(op0.amount.currency.symbol).to.eql(\"ADA\");",
													"    pm.expect(op0.amount.currency.decimals).to.eql(6);",
													"    pm.expect(op0.coin_change.coin_action).to.eql(\"coin_spent\");",
													"    pm.expect(op0.coin_change.coin_identifier.identifier).to.eql(\"2f23fd8cca835af21f3ac375bac601f97ead75f2e79143bdf71fe2c4be043e8f:1\");",
													"});",
													"",
													"// ---- Assertions for Operation 1 ----",
													"pm.test(\"Operation 1 is an output with 10000 ADA\", () => {",
													"    const op1 = json.operations[1];",
													"    pm.expect(op1.type).to.eql(\"output\");",
													"    pm.expect(op1.related_operations[0].index).to.eql(0);",
													"    pm.expect(op1.account.address).to.eql(\"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\");",
													"    pm.expect(op1.amount.value).to.eql(\"10000\");",
													"    pm.expect(op1.amount.currency.symbol).to.eql(\"ADA\");",
													"    pm.expect(op1.amount.currency.decimals).to.eql(6);",
													"});",
													"",
													"// ---- Assertions for Operation 2 ----",
													"pm.test(\"Operation 2 is an output with 40000 ADA\", () => {",
													"    const op2 = json.operations[2];",
													"    pm.expect(op2.type).to.eql(\"output\");",
													"    pm.expect(op2.related_operations[0].index).to.eql(0);",
													"    pm.expect(op2.account.address).to.eql(\"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\");",
													"    pm.expect(op2.amount.value).to.eql(\"40000\");",
													"    pm.expect(op2.amount.currency.symbol).to.eql(\"ADA\");",
													"    pm.expect(op2.amount.currency.decimals).to.eql(6);",
													"});",
													"",
													"// ---- Assertions for Governance Vote (Operation 3) ----",
													"pm.test(\"Operation 3 is a poolGovernanceVote with 'yes' vote\", () => {",
													"    const op3 = json.operations[3];",
													"    pm.expect(op3.type).to.eql(\"poolGovernanceVote\");",
													"    //pm.expect(op3.status).to.eql(\"success\");",
													"    pm.expect(op3.account.address).to.eql(\"6c518b4861bb88b1395ceb116342cecbcfb8736282655f9a61c4c368\");",
													"    pm.expect(op3.metadata.poolGovernanceVoteParams.vote).to.eql(\"yes\");",
													"    pm.expect(op3.metadata.poolGovernanceVoteParams.governance_action_hash).to.eql(\"40c2a42fe324759a640dcfddbc69ef2e3b7fe5a998af8d6660359772bf44c9dc00\");",
													"    pm.expect(op3.metadata.poolGovernanceVoteParams.pool_credential.curve_type).to.eql(\"edwards25519\");",
													"    pm.expect(op3.metadata.poolGovernanceVoteParams.pool_credential.hex_bytes).to.eql(\"60afbe982faaee34b02ad0e75cd50d5d7a734f5daaf7b67bc8c492eb5299af2b\");",
													"});",
													"",
													"// ---- Sanity check: all 4 operations exist ----",
													"pm.test(\"Response contains 4 operations\", () => {",
													"    pm.expect(json.operations.length).to.eql(4);",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"network_identifier\": {\n    \"blockchain\": \"cardano\",\n    \"network\": \"{{networkId}}\"\n  },\n  \"signed\": false,\n  \"transaction\": \"8279019ca16a6f7065726174696f6e7384a6746f7065726174696f6e5f6964656e746966696572a265696e646578006d6e6574776f726b5f696e64657800676163636f756e74a16761646472657373783a616464723176786135707564786737376733736461646465636d773874766336686d796e79776e34396c6c747434666d766e3763706e6b63707866616d6f756e74a26863757272656e6379a26673796d626f6c6341444168646563696d616c73066576616c75656c2d39303030303030303030306b636f696e5f6368616e6765a26f636f696e5f6964656e746966696572a16a6964656e7469666965727842326632336664386363613833356166323166336163333735626163363031663937656164373566326537393134336264663731666532633462653034336538663a316b636f696e5f616374696f6e6a636f696e5f7370656e74667374617475736773756363657373647479706565696e707574a6746f7065726174696f6e5f6964656e746966696572a165696e646578017272656c617465645f6f7065726174696f6e7381a165696e64657800676163636f756e74a16761646472657373783a616464723176786135707564786737376733736461646465636d773874766336686d796e79776e34396c6c747434666d766e3763706e6b63707866616d6f756e74a26863757272656e6379a26673796d626f6c6341444168646563696d616c73066576616c75656531303030306673746174757367737563636573736474797065666f7574707574a6746f7065726174696f6e5f6964656e746966696572a165696e646578027272656c617465645f6f7065726174696f6e7381a165696e64657800676163636f756e74a16761646472657373783a616464723176786135707564786737376733736461646465636d773874766336686d796e79776e34396c6c747434666d766e3763706e6b63707866616d6f756e74a26863757272656e6379a26673796d626f6c6341444168646563696d616c73066576616c75656534303030306673746174757367737563636573736474797065666f7574707574a5746f7065726174696f6e5f6964656e746966696572a165696e64657803676163636f756e74a1676164647265737378383663353138623438363162623838623133393563656231313633343263656362636662383733363238323635356639613631633463333638686d65746164617461a17818706f6f6c476f7665726e616e6365566f7465506172616d73a36f706f6f6c5f63726564656e7469616ca2696865785f62797465737840363061666265393832666161656533346230326164306537356364353064356437613733346635646161663762363762633863343932656235323939616632626a63757276655f747970656c65647761726473323535313964766f74656379657371676f7665726e616e63655f616374696f6ea26574785f696478403430633261343266653332343735396136343064636664646263363965663265336237666535613939386166386436363630333539373732626634346339646365696e64657800667374617475736773756363657373647479706572706f6f6c476f7665726e616e6365566f7465\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/construction/parse",
											"host": [
												"{{URL}}"
											],
											"path": [
												"construction",
												"parse"
											]
										}
									},
									"response": []
								},
								{
									"name": "gov pool voting - account bech32 - vote no, no vote rationale",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Status code is 200', function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"const json = pm.response.json();",
													"",
													"// ---- Assertions for Operation 0 ----",
													"pm.test(\"Operation 0 is an input with correct address and amount\", () => {",
													"    const op0 = json.operations[0];",
													"    pm.expect(op0.type).to.eql(\"input\");",
													"    pm.expect(op0.status).to.eql(\"success\");",
													"    pm.expect(op0.account.address).to.eql(\"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\");",
													"    pm.expect(op0.amount.value).to.eql(\"-90000000000\");",
													"    pm.expect(op0.amount.currency.symbol).to.eql(\"ADA\");",
													"    pm.expect(op0.amount.currency.decimals).to.eql(6);",
													"    pm.expect(op0.coin_change.coin_action).to.eql(\"coin_spent\");",
													"    pm.expect(op0.coin_change.coin_identifier.identifier).to.eql(\"2f23fd8cca835af21f3ac375bac601f97ead75f2e79143bdf71fe2c4be043e8f:1\");",
													"});",
													"",
													"// ---- Assertions for Operation 1 ----",
													"pm.test(\"Operation 1 is an output with 10000 ADA\", () => {",
													"    const op1 = json.operations[1];",
													"    pm.expect(op1.type).to.eql(\"output\");",
													"    pm.expect(op1.related_operations[0].index).to.eql(0);",
													"    pm.expect(op1.account.address).to.eql(\"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\");",
													"    pm.expect(op1.amount.value).to.eql(\"10000\");",
													"    pm.expect(op1.amount.currency.symbol).to.eql(\"ADA\");",
													"    pm.expect(op1.amount.currency.decimals).to.eql(6);",
													"});",
													"",
													"// ---- Assertions for Operation 2 ----",
													"pm.test(\"Operation 2 is an output with 40000 ADA\", () => {",
													"    const op2 = json.operations[2];",
													"    pm.expect(op2.type).to.eql(\"output\");",
													"    pm.expect(op2.related_operations[0].index).to.eql(0);",
													"    pm.expect(op2.account.address).to.eql(\"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\");",
													"    pm.expect(op2.amount.value).to.eql(\"40000\");",
													"    pm.expect(op2.amount.currency.symbol).to.eql(\"ADA\");",
													"    pm.expect(op2.amount.currency.decimals).to.eql(6);",
													"});",
													"",
													"// ---- Assertions for Governance Vote (Operation 3) ----",
													"pm.test(\"Operation 3 is a poolGovernanceVote with 'no' vote\", () => {",
													"    const op3 = json.operations[3];",
													"    pm.expect(op3.type).to.eql(\"poolGovernanceVote\");",
													"    //pm.expect(op3.status).to.eql(\"success\");",
													"    pm.expect(op3.account.address).to.eql(\"6c518b4861bb88b1395ceb116342cecbcfb8736282655f9a61c4c368\");",
													"    pm.expect(op3.metadata.poolGovernanceVoteParams.vote).to.eql(\"no\");",
													"    pm.expect(op3.metadata.poolGovernanceVoteParams.governance_action_hash).to.eql(\"40c2a42fe324759a640dcfddbc69ef2e3b7fe5a998af8d6660359772bf44c9dc00\");",
													"    pm.expect(op3.metadata.poolGovernanceVoteParams.pool_credential.curve_type).to.eql(\"edwards25519\");",
													"    pm.expect(op3.metadata.poolGovernanceVoteParams.pool_credential.hex_bytes).to.eql(\"60afbe982faaee34b02ad0e75cd50d5d7a734f5daaf7b67bc8c492eb5299af2b\");",
													"});",
													"",
													"// ---- Sanity check: all 4 operations exist ----",
													"pm.test(\"Response contains 4 operations\", () => {",
													"    pm.expect(json.operations.length).to.eql(4);",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"network_identifier\": {\n    \"blockchain\": \"cardano\",\n    \"network\": \"{{networkId}}\"\n  },\n  \"signed\": false,\n  \"transaction\": \"8279019ca16a6f7065726174696f6e7384a6746f7065726174696f6e5f6964656e746966696572a265696e646578006d6e6574776f726b5f696e64657800676163636f756e74a16761646472657373783a616464723176786135707564786737376733736461646465636d773874766336686d796e79776e34396c6c747434666d766e3763706e6b63707866616d6f756e74a26863757272656e6379a26673796d626f6c6341444168646563696d616c73066576616c75656c2d39303030303030303030306b636f696e5f6368616e6765a26f636f696e5f6964656e746966696572a16a6964656e7469666965727842326632336664386363613833356166323166336163333735626163363031663937656164373566326537393134336264663731666532633462653034336538663a316b636f696e5f616374696f6e6a636f696e5f7370656e74667374617475736773756363657373647479706565696e707574a6746f7065726174696f6e5f6964656e746966696572a165696e646578017272656c617465645f6f7065726174696f6e7381a165696e64657800676163636f756e74a16761646472657373783a616464723176786135707564786737376733736461646465636d773874766336686d796e79776e34396c6c747434666d766e3763706e6b63707866616d6f756e74a26863757272656e6379a26673796d626f6c6341444168646563696d616c73066576616c75656531303030306673746174757367737563636573736474797065666f7574707574a6746f7065726174696f6e5f6964656e746966696572a165696e646578027272656c617465645f6f7065726174696f6e7381a165696e64657800676163636f756e74a16761646472657373783a616464723176786135707564786737376733736461646465636d773874766336686d796e79776e34396c6c747434666d766e3763706e6b63707866616d6f756e74a26863757272656e6379a26673796d626f6c6341444168646563696d616c73066576616c75656534303030306673746174757367737563636573736474797065666f7574707574a5746f7065726174696f6e5f6964656e746966696572a165696e64657803676163636f756e74a1676164647265737378383663353138623438363162623838623133393563656231313633343263656362636662383733363238323635356639613631633463333638686d65746164617461a17818706f6f6c476f7665726e616e6365566f7465506172616d73a36f706f6f6c5f63726564656e7469616ca2696865785f62797465737840363061666265393832666161656533346230326164306537356364353064356437613733346635646161663762363762633863343932656235323939616632626a63757276655f747970656c65647761726473323535313964766f7465626e6f71676f7665726e616e63655f616374696f6ea26574785f696478403430633261343266653332343735396136343064636664646263363965663265336237666535613939386166386436363630333539373732626634346339646365696e64657800667374617475736773756363657373647479706572706f6f6c476f7665726e616e6365566f7465\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/construction/parse",
											"host": [
												"{{URL}}"
											],
											"path": [
												"construction",
												"parse"
											]
										}
									},
									"response": []
								},
								{
									"name": "gov pool voting - account bech32 - vote abstain, no vote rationale",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Status code is 200', function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"const json = pm.response.json();",
													"",
													"// ---- Assertions for Operation 0 ----",
													"pm.test(\"Operation 0 is an input with correct address and amount\", () => {",
													"    const op0 = json.operations[0];",
													"    pm.expect(op0.type).to.eql(\"input\");",
													"    pm.expect(op0.status).to.eql(\"success\");",
													"    pm.expect(op0.account.address).to.eql(\"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\");",
													"    pm.expect(op0.amount.value).to.eql(\"-90000000000\");",
													"    pm.expect(op0.amount.currency.symbol).to.eql(\"ADA\");",
													"    pm.expect(op0.amount.currency.decimals).to.eql(6);",
													"    pm.expect(op0.coin_change.coin_action).to.eql(\"coin_spent\");",
													"    pm.expect(op0.coin_change.coin_identifier.identifier).to.eql(\"2f23fd8cca835af21f3ac375bac601f97ead75f2e79143bdf71fe2c4be043e8f:1\");",
													"});",
													"",
													"// ---- Assertions for Operation 1 ----",
													"pm.test(\"Operation 1 is an output with 10000 ADA\", () => {",
													"    const op1 = json.operations[1];",
													"    pm.expect(op1.type).to.eql(\"output\");",
													"    pm.expect(op1.related_operations[0].index).to.eql(0);",
													"    pm.expect(op1.account.address).to.eql(\"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\");",
													"    pm.expect(op1.amount.value).to.eql(\"10000\");",
													"    pm.expect(op1.amount.currency.symbol).to.eql(\"ADA\");",
													"    pm.expect(op1.amount.currency.decimals).to.eql(6);",
													"});",
													"",
													"// ---- Assertions for Operation 2 ----",
													"pm.test(\"Operation 2 is an output with 40000 ADA\", () => {",
													"    const op2 = json.operations[2];",
													"    pm.expect(op2.type).to.eql(\"output\");",
													"    pm.expect(op2.related_operations[0].index).to.eql(0);",
													"    pm.expect(op2.account.address).to.eql(\"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\");",
													"    pm.expect(op2.amount.value).to.eql(\"40000\");",
													"    pm.expect(op2.amount.currency.symbol).to.eql(\"ADA\");",
													"    pm.expect(op2.amount.currency.decimals).to.eql(6);",
													"});",
													"",
													"// ---- Assertions for Governance Vote (Operation 3) ----",
													"pm.test(\"Operation 3 is a poolGovernanceVote with 'abstain' vote\", () => {",
													"    const op3 = json.operations[3];",
													"    pm.expect(op3.type).to.eql(\"poolGovernanceVote\");",
													"    //pm.expect(op3.status).to.eql(\"success\");",
													"    pm.expect(op3.account.address).to.eql(\"6c518b4861bb88b1395ceb116342cecbcfb8736282655f9a61c4c368\");",
													"    pm.expect(op3.metadata.poolGovernanceVoteParams.vote).to.eql(\"abstain\");",
													"    pm.expect(op3.metadata.poolGovernanceVoteParams.governance_action_hash).to.eql(\"40c2a42fe324759a640dcfddbc69ef2e3b7fe5a998af8d6660359772bf44c9dc00\");",
													"    pm.expect(op3.metadata.poolGovernanceVoteParams.pool_credential.curve_type).to.eql(\"edwards25519\");",
													"    pm.expect(op3.metadata.poolGovernanceVoteParams.pool_credential.hex_bytes).to.eql(\"60afbe982faaee34b02ad0e75cd50d5d7a734f5daaf7b67bc8c492eb5299af2b\");",
													"});",
													"",
													"// ---- Sanity check: all 4 operations exist ----",
													"pm.test(\"Response contains 4 operations\", () => {",
													"    pm.expect(json.operations.length).to.eql(4);",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"network_identifier\": {\n    \"blockchain\": \"cardano\",\n    \"network\": \"{{networkId}}\"\n  },\n  \"signed\": false,\n  \"transaction\": \"8279019ca16a6f7065726174696f6e7384a6746f7065726174696f6e5f6964656e746966696572a265696e646578006d6e6574776f726b5f696e64657800676163636f756e74a16761646472657373783a616464723176786135707564786737376733736461646465636d773874766336686d796e79776e34396c6c747434666d766e3763706e6b63707866616d6f756e74a26863757272656e6379a26673796d626f6c6341444168646563696d616c73066576616c75656c2d39303030303030303030306b636f696e5f6368616e6765a26f636f696e5f6964656e746966696572a16a6964656e7469666965727842326632336664386363613833356166323166336163333735626163363031663937656164373566326537393134336264663731666532633462653034336538663a316b636f696e5f616374696f6e6a636f696e5f7370656e74667374617475736773756363657373647479706565696e707574a6746f7065726174696f6e5f6964656e746966696572a165696e646578017272656c617465645f6f7065726174696f6e7381a165696e64657800676163636f756e74a16761646472657373783a616464723176786135707564786737376733736461646465636d773874766336686d796e79776e34396c6c747434666d766e3763706e6b63707866616d6f756e74a26863757272656e6379a26673796d626f6c6341444168646563696d616c73066576616c75656531303030306673746174757367737563636573736474797065666f7574707574a6746f7065726174696f6e5f6964656e746966696572a165696e646578027272656c617465645f6f7065726174696f6e7381a165696e64657800676163636f756e74a16761646472657373783a616464723176786135707564786737376733736461646465636d773874766336686d796e79776e34396c6c747434666d766e3763706e6b63707866616d6f756e74a26863757272656e6379a26673796d626f6c6341444168646563696d616c73066576616c75656534303030306673746174757367737563636573736474797065666f7574707574a5746f7065726174696f6e5f6964656e746966696572a165696e64657803676163636f756e74a1676164647265737378383663353138623438363162623838623133393563656231313633343263656362636662383733363238323635356639613631633463333638686d65746164617461a17818706f6f6c476f7665726e616e6365566f7465506172616d73a36f706f6f6c5f63726564656e7469616ca2696865785f62797465737840363061666265393832666161656533346230326164306537356364353064356437613733346635646161663762363762633863343932656235323939616632626a63757276655f747970656c65647761726473323535313964766f7465676162737461696e71676f7665726e616e63655f616374696f6ea26574785f696478403430633261343266653332343735396136343064636664646263363965663265336237666535613939386166386436363630333539373732626634346339646365696e64657800667374617475736773756363657373647479706572706f6f6c476f7665726e616e6365566f7465\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/construction/parse",
											"host": [
												"{{URL}}"
											],
											"path": [
												"construction",
												"parse"
											]
										}
									},
									"response": []
								},
								{
									"name": "gov pool voting - account bech32 - vote yes, vote rationale present",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Status code is 200', function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"const json = pm.response.json();",
													"",
													"// ---- Assertions for Operation 0 ----",
													"pm.test(\"Operation 0 is an input with correct address and amount\", () => {",
													"    const op0 = json.operations[0];",
													"    pm.expect(op0.type).to.eql(\"input\");",
													"    pm.expect(op0.status).to.eql(\"success\");",
													"    pm.expect(op0.account.address).to.eql(\"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\");",
													"    pm.expect(op0.amount.value).to.eql(\"-90000000000\");",
													"    pm.expect(op0.amount.currency.symbol).to.eql(\"ADA\");",
													"    pm.expect(op0.amount.currency.decimals).to.eql(6);",
													"    pm.expect(op0.coin_change.coin_action).to.eql(\"coin_spent\");",
													"    pm.expect(op0.coin_change.coin_identifier.identifier).to.eql(\"2f23fd8cca835af21f3ac375bac601f97ead75f2e79143bdf71fe2c4be043e8f:1\");",
													"});",
													"",
													"// ---- Assertions for Operation 1 ----",
													"pm.test(\"Operation 1 is an output with 10000 ADA\", () => {",
													"    const op1 = json.operations[1];",
													"    pm.expect(op1.type).to.eql(\"output\");",
													"    pm.expect(op1.related_operations[0].index).to.eql(0);",
													"    pm.expect(op1.account.address).to.eql(\"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\");",
													"    pm.expect(op1.amount.value).to.eql(\"10000\");",
													"    pm.expect(op1.amount.currency.symbol).to.eql(\"ADA\");",
													"    pm.expect(op1.amount.currency.decimals).to.eql(6);",
													"});",
													"",
													"// ---- Assertions for Operation 2 ----",
													"pm.test(\"Operation 2 is an output with 40000 ADA\", () => {",
													"    const op2 = json.operations[2];",
													"    pm.expect(op2.type).to.eql(\"output\");",
													"    pm.expect(op2.related_operations[0].index).to.eql(0);",
													"    pm.expect(op2.account.address).to.eql(\"addr1vxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7cpnkcpx\");",
													"    pm.expect(op2.amount.value).to.eql(\"40000\");",
													"    pm.expect(op2.amount.currency.symbol).to.eql(\"ADA\");",
													"    pm.expect(op2.amount.currency.decimals).to.eql(6);",
													"});",
													"",
													"// ---- Assertions for Governance Vote (Operation 3) ----",
													"pm.test(\"Operation 3 is a poolGovernanceVote with 'yes' vote\", () => {",
													"    const op3 = json.operations[3];",
													"    pm.expect(op3.type).to.eql(\"poolGovernanceVote\");",
													"    //pm.expect(op3.status).to.eql(\"success\");",
													"    pm.expect(op3.account.address).to.eql(\"6c518b4861bb88b1395ceb116342cecbcfb8736282655f9a61c4c368\");",
													"    pm.expect(op3.metadata.poolGovernanceVoteParams.vote).to.eql(\"yes\");",
													"    pm.expect(op3.metadata.poolGovernanceVoteParams.governance_action_hash).to.eql(\"40c2a42fe324759a640dcfddbc69ef2e3b7fe5a998af8d6660359772bf44c9dc00\");",
													"    pm.expect(op3.metadata.poolGovernanceVoteParams.pool_credential.curve_type).to.eql(\"edwards25519\");",
													"    pm.expect(op3.metadata.poolGovernanceVoteParams.pool_credential.hex_bytes).to.eql(\"60afbe982faaee34b02ad0e75cd50d5d7a734f5daaf7b67bc8c492eb5299af2b\");",
													"",
													"    pm.expect(op3.metadata.poolGovernanceVoteParams.vote_rationale.data_hash).to.eql(\"c77f8427e2808cbd4c7093aa704fb0fcb48b2ab3bdd84fa7f4dec2eb7de344c9\");",
													"    pm.expect(op3.metadata.poolGovernanceVoteParams.vote_rationale.url).to.eql(\"ipfs://bafybeig7hluox6xefqdgmwcntvsguxcziw2oeogg2fbvygex2aj6qcfo64\");",
													"});",
													"",
													"// ---- Sanity check: all 4 operations exist ----",
													"pm.test(\"Response contains 4 operations\", () => {",
													"    pm.expect(json.operations.length).to.eql(4);",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"network_identifier\": {\n    \"blockchain\": \"cardano\",\n    \"network\": \"{{networkId}}\"\n  },\n  \"signed\": false,\n  \"transaction\": \"8279026861353030643930313032383138323538323032663233666438636361383335616632316633616333373562616336303166393765616437356632653739313433626466373166653263346265303433653866303130313832383235383164363162623430663161363437626338386331626436623733386462386562363633353764393236343734656135666664366261613736633966623139323731303832353831643631626234306631613634376263383863316264366237333864623865623636333537643932363437346561356666643662616137366339666231393963343030323162303030303030313466343661343062303033313930336538313361313832303435383230363061666265393832666161656533346230326164306537356364353064356437613733346635646161663762363762633863343932656235323939616632626131383235383230343063326134326665333234373539613634306463666464626336396566326533623766653561393938616638643636363033353937373262663434633964633030383230313832373834323639373036363733336132663266363236313636373936323635363936373337363836633735366637383336373836353636373136343637366437373633366537343736373336373735373836333761363937373332366636353666363736373332363636323736373936373635373833323631366133363731363336363666333633343538323063373766383432376532383038636264346337303933616137303466623066636234386232616233626464383466613766346465633265623764653334346339a16a6f7065726174696f6e7384a6746f7065726174696f6e5f6964656e746966696572a265696e646578006d6e6574776f726b5f696e64657800676163636f756e74a16761646472657373783a616464723176786135707564786737376733736461646465636d773874766336686d796e79776e34396c6c747434666d766e3763706e6b63707866616d6f756e74a26863757272656e6379a26673796d626f6c6341444168646563696d616c73066576616c75656c2d39303030303030303030306b636f696e5f6368616e6765a26f636f696e5f6964656e746966696572a16a6964656e7469666965727842326632336664386363613833356166323166336163333735626163363031663937656164373566326537393134336264663731666532633462653034336538663a316b636f696e5f616374696f6e6a636f696e5f7370656e74667374617475736773756363657373647479706565696e707574a6746f7065726174696f6e5f6964656e746966696572a165696e646578017272656c617465645f6f7065726174696f6e7381a165696e64657800676163636f756e74a16761646472657373783a616464723176786135707564786737376733736461646465636d773874766336686d796e79776e34396c6c747434666d766e3763706e6b63707866616d6f756e74a26863757272656e6379a26673796d626f6c6341444168646563696d616c73066576616c75656531303030306673746174757367737563636573736474797065666f7574707574a6746f7065726174696f6e5f6964656e746966696572a165696e646578027272656c617465645f6f7065726174696f6e7381a165696e64657800676163636f756e74a16761646472657373783a616464723176786135707564786737376733736461646465636d773874766336686d796e79776e34396c6c747434666d766e3763706e6b63707866616d6f756e74a26863757272656e6379a26673796d626f6c6341444168646563696d616c73066576616c75656534303030306673746174757367737563636573736474797065666f7574707574a5746f7065726174696f6e5f6964656e746966696572a165696e64657803676163636f756e74a1676164647265737378383663353138623438363162623838623133393563656231313633343263656362636662383733363238323635356639613631633463333638686d65746164617461a17818706f6f6c476f7665726e616e6365566f7465506172616d73a46f706f6f6c5f63726564656e7469616ca2696865785f62797465737840363061666265393832666161656533346230326164306537356364353064356437613733346635646161663762363762633863343932656235323939616632626a63757276655f747970656c65647761726473323535313964766f7465637965736e766f74655f726174696f6e616c65a26375726c7842697066733a2f2f626166796265696737686c756f78367865667164676d77636e747673677578637a6977326f656f6767326662767967657832616a367163666f363469646174615f6861736878406337376638343237653238303863626434633730393361613730346662306663623438623261623362646438346661376634646563326562376465333434633971676f7665726e616e63655f616374696f6ea26574785f696478403430633261343266653332343735396136343064636664646263363965663265336237666535613939386166386436363630333539373732626634346339646365696e64657800667374617475736773756363657373647479706572706f6f6c476f7665726e616e6365566f7465\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/construction/parse",
											"host": [
												"{{URL}}"
											],
											"path": [
												"construction",
												"parse"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Deposit",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"network_identifier\": {\n    \"blockchain\": \"cardano\",\n    \"network\": \"{{networkId}}\"\n  },\n  \"signed\": false,\n  \"transaction\": \"8279013aa16a6f7065726174696f6e7382a6746f7065726174696f6e5f6964656e746966696572a265696e646578006d6e6574776f726b5f696e64657800647479706565696e707574667374617475736773756363657373676163636f756e74a16761646472657373783a616464723176786135707564786737376733736461646465636d773874766336686d796e79776e34396c6c747434666d766e3763706e6b63707866616d6f756e74a26576616c7565682d393030303030306863757272656e6379a26673796d626f6c6341444168646563696d616c73066b636f696e5f6368616e6765a26f636f696e5f6964656e746966696572a16a6964656e7469666965727842326632336664386363613833356166323166336163333735626163363031663937656164373566326537393134336264663731666532633462653034336538663a316b636f696e5f616374696f6e6a636f696e5f7370656e74a5746f7065726174696f6e5f6964656e746966696572a165696e646578036474797065747374616b654b6579526567697374726174696f6e667374617475736773756363657373676163636f756e74a16761646472657373783b7374616b653175786135707564786737376733736461646465636d773874766336686d796e79776e34396c6c747434666d766e376361656b376135686d65746164617461a2727374616b696e675f63726564656e7469616ca2696865785f62797465737840314234303044363041414633344541463644434241423942424134363030314132333439373838364346313130363646373834363933334433304535414433466a63757276655f747970656c6564776172647332353531396d6465706f736974416d6f756e74a26863757272656e6379a26673796d626f6c6341444168646563696d616c73066576616c75656732303030303030\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/construction/parse",
									"host": [
										"{{URL}}"
									],
									"path": [
										"construction",
										"parse"
									]
								}
							},
							"response": []
						},
						{
							"name": "stake delegation",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {",
											"    pm.response.to.have.status(200);",
											"})",
											"console.log(pm.response.json())",
											"",
											"let jsonData = pm.response.json();",
											"",
											"// Define expected values",
											"const expectedOperation = {",
											"    operation_identifier: {",
											"        index: 3",
											"    },",
											"    type: \"dRepVoteDelegation\",",
											"    status: \"\",",
											"    account: {",
											"        address: \"stake1uxa5pudxg77g3sdaddecmw8tvc6hmynywn49lltt4fmvn7caek7a5\"",
											"    },",
											"    metadata: {",
											"        staking_credential: {",
											"            hex_bytes: \"1B400D60AAF34EAF6DCBAB9BBA46001A23497886CF11066F7846933D30E5AD3F\",",
											"            curve_type: \"edwards25519\"",
											"        },",
											"        drep: {",
											"            id: \"74984fae4ca1715fa1f8759f9d871015ac87f449a85dea6cf9956da1\",",
											"            type: \"key_hash\"",
											"        }",
											"    }",
											"};",
											"",
											"// Assume the operation is in an array, e.g., jsonData.operations[3]",
											"let operation = jsonData.operations?.find(op => op.operation_identifier?.index === expectedOperation.operation_identifier.index);",
											"",
											"pm.test(\"Operation exists at index 3\", function () {",
											"    pm.expect(operation).to.not.be.undefined;",
											"});",
											"",
											"// Top-level exact matches",
											"pm.test(\"Top-level fields match exactly\", function () {",
											"    pm.expect(operation.type).to.eql(expectedOperation.type);",
											"    pm.expect(operation.status).to.eql(expectedOperation.status);",
											"    pm.expect(operation.account.address).to.eql(expectedOperation.account.address);",
											"});",
											"",
											"// Metadata.staking_credential exact matches",
											"pm.test(\"Staking credential matches exactly\", function () {",
											"    let staking = operation.metadata.staking_credential;",
											"    pm.expect(staking.hex_bytes).to.eql(expectedOperation.metadata.staking_credential.hex_bytes);",
											"    pm.expect(staking.curve_type).to.eql(expectedOperation.metadata.staking_credential.curve_type);",
											"});",
											"",
											"// Metadata.drep exact matches",
											"pm.test(\"DRep metadata matches exactly\", function () {",
											"    let drep = operation.metadata.drep;",
											"    pm.expect(drep.id).to.eql(expectedOperation.metadata.drep.id);",
											"    pm.expect(drep.type).to.eql(expectedOperation.metadata.drep.type);",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"network_identifier\": {\n    \"blockchain\": \"cardano\",\n    \"network\": \"{{networkId}}\"\n  },\n  \"signed\": false,\n  \"transaction\": \"8279018ea16a6f7065726174696f6e7384a6746f7065726174696f6e5f6964656e746966696572a265696e646578006d6e6574776f726b5f696e64657800676163636f756e74a16761646472657373783a616464723176786135707564786737376733736461646465636d773874766336686d796e79776e34396c6c747434666d766e3763706e6b63707866616d6f756e74a26863757272656e6379a26673796d626f6c6341444168646563696d616c73066576616c75656c2d39303030303030303030306b636f696e5f6368616e6765a26f636f696e5f6964656e746966696572a16a6964656e7469666965727842326632336664386363613833356166323166336163333735626163363031663937656164373566326537393134336264663731666532633462653034336538663a316b636f696e5f616374696f6e6a636f696e5f7370656e74667374617475736773756363657373647479706565696e707574a6746f7065726174696f6e5f6964656e746966696572a165696e646578017272656c617465645f6f7065726174696f6e7381a165696e64657800676163636f756e74a16761646472657373783a616464723176786135707564786737376733736461646465636d773874766336686d796e79776e34396c6c747434666d766e3763706e6b63707866616d6f756e74a26863757272656e6379a26673796d626f6c6341444168646563696d616c73066576616c75656531303030306673746174757367737563636573736474797065666f7574707574a6746f7065726174696f6e5f6964656e746966696572a165696e646578027272656c617465645f6f7065726174696f6e7381a165696e64657800676163636f756e74a16761646472657373783a616464723176786135707564786737376733736461646465636d773874766336686d796e79776e34396c6c747434666d766e3763706e6b63707866616d6f756e74a26863757272656e6379a26673796d626f6c6341444168646563696d616c73066576616c75656534303030306673746174757367737563636573736474797065666f7574707574a5746f7065726174696f6e5f6964656e746966696572a165696e64657803676163636f756e74a16761646472657373783b7374616b653175786135707564786737376733736461646465636d773874766336686d796e79776e34396c6c747434666d766e376361656b376135686d65746164617461a2727374616b696e675f63726564656e7469616ca2696865785f62797465737840314234303044363041414633344541463644434241423942424134363030314132333439373838364346313130363646373834363933334433304535414433466a63757276655f747970656c6564776172647332353531396464726570a2626964783837343938346661653463613137313566613166383735396639643837313031356163383766343439613835646561366366393935366461316474797065686b65795f6861736866737461747573677375636365737364747970657264526570566f746544656c65676174696f6e\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/construction/parse",
									"host": [
										"{{URL}}"
									],
									"path": [
										"construction",
										"parse"
									]
								}
							},
							"response": []
						},
						{
							"name": "refund",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"network_identifier\": {\n    \"blockchain\": \"cardano\",\n    \"network\": \"{{networkId}}\"\n  },\n  \"signed\": false,\n  \"transaction\": \"82790132613530303831383235383230326632336664386363613833356166323166336163333735626163363031663937656164373566326537393134336264663731666532633462653034336538663031303138323832353831643631626234306631613634376263383863316264366237333864623865623636333537643932363437346561356666643662616137366339666230313832353831643631626234306631613634376263383863316264366237333864623865623636333537643932363437346561356666643662616137366339666230343032316130353762636566623033313930336538303438313832303138323030353831636262343066316136343762633838633162643662373338646238656236363335376439323634373465613566666436626161373663396662a16a6f7065726174696f6e7382a6746f7065726174696f6e5f6964656e746966696572a265696e646578006d6e6574776f726b5f696e64657800647479706565696e707574667374617475736773756363657373676163636f756e74a16761646472657373783a616464723176786135707564786737376733736461646465636d773874766336686d796e79776e34396c6c747434666d766e3763706e6b63707866616d6f756e74a26576616c7565692d39303030303030306863757272656e6379a26673796d626f6c6341444168646563696d616c73066b636f696e5f6368616e6765a26f636f696e5f6964656e746966696572a16a6964656e7469666965727842326632336664386363613833356166323166336163333735626163363031663937656164373566326537393134336264663731666532633462653034336538663a316b636f696e5f616374696f6e6a636f696e5f7370656e74a5746f7065726174696f6e5f6964656e746966696572a165696e646578036474797065767374616b654b65794465726567697374726174696f6e667374617475736773756363657373676163636f756e74a16761646472657373783b7374616b653175387a666e6b687034673676686e6565746d763271656e3766356e64726b6c716a7138653973326e636b3968333063667a36716d70686d65746164617461a2727374616b696e675f63726564656e7469616ca2696865785f62797465737840314234303044363041414633344541463644434241423942424134363030314132333439373838364346313130363646373834363933334433304535414433466a63757276655f747970656c6564776172647332353531396c726566756e64416d6f756e74a26576616c7565682d323030303030306863757272656e6379a26673796d626f6c6341444168646563696d616c7306\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/construction/parse",
									"host": [
										"{{URL}}"
									],
									"path": [
										"construction",
										"parse"
									]
								}
							},
							"response": []
						},
						{
							"name": "Signed Multiasset",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"network_identifier\": {\n    \"blockchain\": \"cardano\",\n    \"network\": \"{{networkId}}\"\n  },\n  \"signed\": true,\n  \"transaction\": \"8279025aa16a6f7065726174696f6e7381a7746f7065726174696f6e5f6964656e746966696572a265696e646578006d6e6574776f726b5f696e64657800647479706565696e707574667374617475736773756363657373676163636f756e74a16761646472657373783a616464723176786135707564786737376733736461646465636d773874766336686d796e79776e34396c6c747434666d766e3763706e6b63707866616d6f756e74a26576616c7565662d39303030306863757272656e6379a26673796d626f6c6341444168646563696d616c73066b636f696e5f6368616e6765a26f636f696e5f6964656e746966696572a16a6964656e7469666965727842326632336664386363613833356166323166336163333735626163363031663937656164373566326537393134336264663731666532633462653034336538663a316b636f696e5f616374696f6e6a636f696e5f7370656e74686d65746164617461a16b746f6b656e42756e646c6581a268706f6c69637949647838623064303764343566653935313466383032313366343032306535613631323431343538626536323638343163646537313763623338613766746f6b656e7383a26576616c756564323331306863757272656e6379a26673796d626f6c7234373735363936343666343336663639366568646563696d616c7300a26576616c756564363636366863757272656e6379a26673796d626f6c7820346137353631366534333732373537613534366636623635366536313761366668646563696d616c7300a26576616c75656531303030306863757272656e6379a26673796d626f6c6e366537353734363336663639366568646563696d616c7300\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/construction/parse",
									"host": [
										"{{URL}}"
									],
									"path": [
										"construction",
										"parse"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "submit",
					"item": [
						{
							"name": "simple",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"network_identifier\": {\n    \"blockchain\": \"cardano\",\n    \"network\": \"{{networkId}}\"\n  },\n  \"signed_transaction\": \"84a3008182582047f2a85b713bcf587bd46896da628fd80c268665d9b86050a6a8cf9030c5b8d3010182825839006971735734b6c29b6ab065142aaf89eb524d1ea6a293bb43b672a1bae8f8fdcc485472d5a3a6c2416bfc4bc0fa81dbcc9bc4317a4a68e1631a004c4b4082583900a8b3b814a65e5e43777f89b30c87eac4e3396a9b9c24cd08d66094998e5053d0eb80dda519e85bf8e08144bedb5485f8808502aa538447731a040c7d64021a0002a121a10081825820d498c3d54941e01cbcfb565371a844f1342edee82795ef5297de45be3acb19d85840dced88adf01fa809af2db1c76c5273394f1bca48c0c6709800b469231608713916d2292a644a503c275492ef68aa29ec8c5543034897ded231c461eb34d9180cf5f6\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/construction/submit",
									"host": [
										"{{URL}}"
									],
									"path": [
										"construction",
										"submit"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "data",
			"item": [
				{
					"name": "/network/list",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Test: Ok\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"console.log(pm.response.json())",
									"pm.test(\"Contains Json Body\", function() {",
									"    pm.response.to.have.jsonBody('network_identifiers')",
									"        .and.to.have.jsonBody('network_identifiers[0].blockchain')",
									"});",
									"",
									"pm.test(\"Body has single network identifier\", function () {",
									"    const networkId = pm.environment.get(\"networkId\");",
									"    pm.expect(pm.response.json().network_identifiers).to.have.lengthOf(1);",
									"});",
									"",
									"pm.test(\"Body includes correct blockchain\", function () {",
									"    const networkId = pm.environment.get(\"networkId\");",
									"    pm.expect(pm.response.json().network_identifiers[0].blockchain).to.eql(\"cardano\");",
									"});",
									"",
									"pm.test(\"Body includes correct network\", function () {",
									"    const networkId = pm.environment.get(\"networkId\");",
									"    pm.expect(pm.response.json().network_identifiers[0].network).to.eql(networkId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"metadata\": {}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/network/list",
							"host": [
								"{{URL}}"
							],
							"path": [
								"network",
								"list"
							]
						}
					},
					"response": []
				},
				{
					"name": "/network/status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"});",
									"console.log(pm.response.json())",
									"",
									"var jsonData = pm.response.json();",
									"postman.setEnvironmentVariable(\"blockIndex\", jsonData.current_block_identifier.index)",
									"postman.setEnvironmentVariable(\"blockHash\", jsonData.current_block_identifier.hash)",
									"",
									"pm.test(\"Body includes correct genesis block\", function () {",
									"    const genesisBlock = pm.environment.get(\"genesisBlockHash\");",
									"    pm.expect(pm.response.json().genesis_block_identifier.hash).to.eql(genesisBlock);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"network_identifier\": {\n        \"blockchain\": \"cardano\",\n        \"network\": \"{{networkId}}\"\n    },\n    \"metadata\": {\n        \n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/network/status",
							"host": [
								"{{URL}}"
							],
							"path": [
								"network",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "/network/options",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"    });",
									"console.log(pm.response.json())",
									"",
									"pm.test(\"Contains Json Body\", function() {",
									"    pm.response.to.have.jsonBody('version.rosetta_version')",
									"        .and.to.have.jsonBody('allow.operation_statuses[0].status')",
									"});",
									"const rosetta_version = pm.environment.get(\"rosetta_version\");",
									"pm.test(\"rosetta version is \" + rosetta_version, function () {",
									"    pm.expect(pm.response.json()).to.be.an('object');",
									"    pm.expect(pm.response.json().version.rosetta_version).to.equal(rosetta_version);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"network_identifier\": {\n        \"blockchain\": \"cardano\",\n        \"network\": \"{{networkId}}\"\n    },\n    \"metadata\": {}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/network/options",
							"host": [
								"{{URL}}"
							],
							"path": [
								"network",
								"options"
							]
						}
					},
					"response": []
				},
				{
					"name": "/block",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"});",
									"console.log(pm.response.json())",
									"",
									"pm.test(\"Contains Json Body\", function() {",
									"    pm.response.to.have.jsonBody('block.block_identifier.index')",
									"        .and.to.have.jsonBody('block.transactions')",
									"});",
									"",
									"pm.test(\"Parent block has previos index\", function () {",
									"     var responseBody = pm.response.json();",
									"     pm.expect(responseBody).to.be.an('object');",
									"     pm.expect(responseBody.block.parent_block_identifier.index).to.be.a('number').below(responseBody.block.block_identifier.index);",
									"});",
									"",
									"//var jsonData = pm.response.json();",
									"//postman.setEnvironmentVariable(\"transactionHash\", jsonData.block.transactions[0].transaction_identifier.hash)",
									"//postman.setEnvironmentVariable(\"address\", jsonData.block.transactions[0].operations[1].account.address)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"network_identifier\": {\n        \"blockchain\": \"cardano\",\n        \"network\": \"{{networkId}}\"\n    },\n    \"block_identifier\": {\n        \"index\": {{blockIndex}},\n        \"hash\": \"{{blockHash}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/block",
							"host": [
								"{{URL}}"
							],
							"path": [
								"block"
							]
						}
					},
					"response": []
				},
				{
					"name": "/account/balance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"});",
									"console.log(pm.response.json())",
									"pm.test(\"Test account balance\", function () {",
									"    const accountBalance = pm.environment.get('accountBalance');",
									"    var responseBody = pm.response.json();",
									"    pm.expect(responseBody).to.be.an('object');",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"network_identifier\": {\n        \"blockchain\": \"cardano\",\n        \"network\": \"{{networkId}}\"\n    },\n    \"account_identifier\": {\n        \"address\": \"{{TestAccountBaseAddress}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/account/balance",
							"host": [
								"{{URL}}"
							],
							"path": [
								"account",
								"balance"
							]
						}
					},
					"response": []
				},
				{
					"name": "/account/coins",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"        pm.response.to.have.status(200);",
									"});",
									"console.log(pm.response.json());",
									"pm.test(\"Body has not empty address\", function () {",
									"    const current_block_index = Number.parseInt(pm.environment.get('blockIndex'));",
									"    const current_block_hash = pm.environment.get('blockHash');",
									"    pm.expect(pm.response.json().block_identifier.index).to.not.eq(null)",
									"    pm.expect(pm.response.json().block_identifier.hash).to.not.eq(null)",
									"    pm.expect(pm.response.json().block_identifier.hash).to.not.eq(\"\")",
									"});",
									"",
									"pm.test(\"Body has one or more UTxOs\", function () {",
									"    pm.expect(pm.response.json().coins.length).to.be.greaterThan(0)",
									"});",
									"",
									"pm.test(\"UTxO has more than 1 ADA\", function () {",
									"    pm.expect(Number(pm.response.json().coins[0].amount.value)).to.be.greaterThan(1000000)",
									"});",
									"",
									"const coin_with_metadata_index = pm.response.json().coins.findIndex(el => el.metadata != null);",
									"var coin_identifier;",
									"",
									"if (coin_with_metadata_index !== -1) {",
									"    coin_identifier = pm.response.json().coins[coin_with_metadata_index].coin_identifier.identifier;",
									"} else {",
									"    console.warn(\"No UTxO with metadata was found\")",
									"};",
									"",
									"pm.test(\"UTxO has token policyId(s)\", function () {",
									"    if (coin_identifier) {",
									"        pm.expect(pm.response.json().coins[coin_with_metadata_index].metadata[coin_identifier]).length.to.be.greaterThan(0)",
									"    }",
									"});",
									"",
									"pm.test(\"Policy has 1 token\", function () {",
									"    if (coin_identifier) {",
									"        pm.expect(pm.response.json().coins[coin_with_metadata_index].metadata[coin_identifier][0].tokens).to.have.lengthOf(1)",
									"    }",
									"});",
									"",
									"pm.test(\"UTxO has Testcoin token(s)\", function () {",
									"    if (coin_identifier) {",
									"        const value = Number(pm.response.json().coins[coin_with_metadata_index].metadata[coin_identifier][0].tokens[0].value)",
									"        pm.expect(value).to.be.greaterThan(0)",
									"    }",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"network_identifier\": {\n        \"blockchain\": \"cardano\",\n        \"network\": \"{{networkId}}\"\n    },\n    \"account_identifier\": {\n        \"address\": \"{{TestAccountAddressWithUTXO}}\"\n    },\n    \"include_mempool\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/account/coins",
							"host": [
								"{{URL}}"
							],
							"path": [
								"account",
								"coins"
							]
						}
					},
					"response": []
				},
				{
					"name": "/mempool/transaction",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"network_identifier\": {\n        \"blockchain\": \"cardano\",\n        \"network\": \"{{networkId}}\"\n    },\n    \"transaction_identifier\": {\n        \"hash\": {{mempoolTransaction}}\n    },\n    \"metadata\": {}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/mempool/transaction",
							"host": [
								"{{URL}}"
							],
							"path": [
								"mempool",
								"transaction"
							]
						}
					},
					"response": []
				},
				{
					"name": "/mempool",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"network_identifier\": {\n        \"blockchain\": \"cardano\",\n        \"network\": \"{{networkId}}\"\n        },\n    \"metadata\": {    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/mempool",
							"host": [
								"{{URL}}"
							],
							"path": [
								"mempool"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "current_block_index",
			"value": ""
		},
		{
			"key": "current_block_hash",
			"value": ""
		}
	]
}