version: '3.8'
services:
  yaci-indexer:
    image: cardanofoundation/cardano-rosetta-java-indexer:${INDEXER_DOCKER_IMAGE_TAG}
    build:
      context: ./
      dockerfile: ./yaci-indexer/Dockerfile
    environment:
      NETWORK: ${NETWORK}
      YACI_SPRING_PROFILES: ${YACI_SPRING_PROFILES}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_SECRET: ${DB_SECRET}
      DB_SCHEMA: ${DB_SCHEMA}
      CARDANO_NODE_HOST: ${CARDANO_NODE_HOST}
      CARDANO_NODE_PORT: ${CARDANO_NODE_PORT}
      PROTOCOL_MAGIC: ${PROTOCOL_MAGIC}
      GENESIS_SHELLEY_PATH: ${GENESIS_SHELLEY_PATH}
      GENESIS_BYRON_PATH: ${GENESIS_BYRON_PATH}
      GENESIS_ALONZO_PATH: ${GENESIS_ALONZO_PATH}
      GENESIS_CONWAY_PATH: ${GENESIS_CONWAY_PATH}
      PRUNING_ENABLED: ${PRUNING_ENABLED}
      CARDANO_NODE_SOCKET_PATH: ${CARDANO_NODE_SOCKET_PATH}
      HOST_N2C_SOCAT_HOST: ${HOST_N2C_SOCAT_HOST}
      HOST_N2C_SOCAT_PORT: ${HOST_N2C_SOCAT_PORT}
      SEARCH_PAGE_SIZE: ${SEARCH_PAGE_SIZE}
      #The number of safe blocks to keep in the store. 2160 blocks *(20 seconds/block in average)=4320 seconds=12 hours.
      PRUNING_INTERVAL: ${PRUNING_INTERVAL}
      #Run transaction pruning every 600 seconds or 10 minutes.
      PRUNING_SAFE_BLOCKS: ${PRUNING_SAFE_BLOCKS}

    volumes:
      - ${CARDANO_CONFIG}:/config
      - ${CARDANO_NODE_DIR}:${CARDANO_NODE_DIR}
    ports:
      - ${YACI_INDEXER_PORT}:9095
    restart: always
    depends_on:
      db:
        condition: service_healthy

  db:
    image: ${DB_IMAGE_NAME}:${DB_IMAGE_TAG}
    shm_size: 4g
    ports:
      - ${DB_PORT}:${DB_PORT}
    command: [
      # "postgres",
      "-p", "${DB_PORT}",
      "-c", "max_connections=${DB_POSTGRES_MAX_CONNECTIONS}",
      "-c", "shared_buffers=${DB_POSTGRES_SHARED_BUFFERS}",
      "-c", "effective_cache_size=${DB_POSTGRES_EFFECTIVE_CACHE_SIZE}",
      "-c", "work_mem=${DB_POSTGRES_WORK_MEM}",
      "-c", "maintenance_work_mem=${DB_POSTGRES_MAINTENANCE_WORK_MEM}",
      "-c", "wal_buffers=${DB_POSTGRES_WAL_BUFFERS}",
      "-c", "checkpoint_completion_target=${DB_POSTGRES_CHECKPOINT_COMPLETION_TARGET}",
      "-c", "random_page_cost=${DB_POSTGRES_RANDOM_PAGE_COST}",

      # Additional settings for advanced PostgreSQL tuning
      "-c", "effective_io_concurrency=${DB_POSTGRES_EFFECTIVE_IO_CONCURRENCY}",
      "-c", "parallel_tuple_cost=${DB_POSTGRES_PARALLEL_TUPLE_COST}",
      "-c", "parallel_setup_cost=${DB_POSTGRES_PARALLEL_SETUP_COST}",
      "-c", "max_parallel_workers_per_gather=${DB_POSTGRES_MAX_PARALLEL_WORKERS_PER_GATHER}",
      "-c", "max_parallel_workers=${DB_POSTGRES_MAX_PARALLEL_WORKERS}",
      "-c", "seq_page_cost=${DB_POSTGRES_SEQ_PAGE_COST}",
      "-c", "jit=${DB_POSTGRES_JIT}",
      "-c", "bgwriter_lru_maxpages=${DB_POSTGRES_BGWRITER_LRU_MAXPAGES}",
      "-c", "bgwriter_delay=${DB_POSTGRES_BGWRITER_DELAY}"
    ]
    environment:
      POSTGRES_PASSWORD: ${DB_SECRET}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    restart: on-failure
    volumes:
      - ${DB_PATH}:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME} -p ${DB_PORT} -h localhost"]
      interval: 10s
      timeout: 3s
      retries: 10

volumes:
  data:

networks:
  default:
    name: cardano-rosetta-java-${NETWORK}
