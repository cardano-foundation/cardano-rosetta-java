version: '3.8'
services:
  yaci-indexer:
    image: cardanofoundation/cardano-rosetta-java-indexer:${INDEXER_DOCKER_IMAGE_TAG}
    build:
      context: ./
      dockerfile: ./yaci-indexer/Dockerfile
    environment:
      NETWORK: ${NETWORK}
      YACI_SPRING_PROFILES: ${YACI_SPRING_PROFILES}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_SECRET: ${DB_SECRET}
      DB_SCHEMA: ${DB_SCHEMA}
      CARDANO_NODE_HOST: ${CARDANO_NODE_HOST}
      CARDANO_NODE_PORT: ${CARDANO_NODE_PORT}
      PROTOCOL_MAGIC: ${PROTOCOL_MAGIC}
      GENESIS_SHELLEY_PATH: ${GENESIS_SHELLEY_PATH}
      GENESIS_BYRON_PATH: ${GENESIS_BYRON_PATH}
      GENESIS_ALONZO_PATH: ${GENESIS_ALONZO_PATH}
      GENESIS_CONWAY_PATH: ${GENESIS_CONWAY_PATH}
      REMOVE_SPENT_UTXOS: ${REMOVE_SPENT_UTXOS}
      REMOVE_SPENT_UTXOS_LAST_BLOCKS_GRACE_COUNT: ${REMOVE_SPENT_UTXOS_LAST_BLOCKS_GRACE_COUNT}
      BLOCK_FETCH_TIMEOUT_SECS: ${BLOCK_FETCH_TIMEOUT_SECS}
      CARDANO_NODE_SOCKET_PATH: ${CARDANO_NODE_SOCKET_PATH}
      HOST_N2C_SOCAT_HOST: ${HOST_N2C_SOCAT_HOST}
      HOST_N2C_SOCAT_PORT: ${HOST_N2C_SOCAT_PORT}
      SEARCH_PAGE_SIZE: ${SEARCH_PAGE_SIZE}
    volumes:
      - ${CARDANO_CONFIG}:/config
      - ${CARDANO_NODE_DIR}:${CARDANO_NODE_DIR}
    ports:
      - ${YACI_INDEXER_PORT}:9095
    restart: always
    depends_on:
      db:
        condition: service_healthy

  db:
    image: cardanofoundation/cardano-rosetta-java-postgres:${PG_VERSION_TAG}
    build:
      context: ./
      dockerfile: ./docker/dockerfiles/postgres/Dockerfile
    shm_size: 4g
    ports:
      - ${DB_PORT}:${DB_PORT}
    environment:
      DB_SECRET: ${DB_SECRET}
      DB_USER: ${DB_USER}
      DB_NAME: ${DB_NAME}
      DB_PORT: ${DB_PORT}
      NETWORK: ${NETWORK}
      PGPASSWORD: postgres

      DB_POSTGRES_MAX_CONNECTIONS: ${DB_POSTGRES_MAX_CONNECTIONS}
      DB_POSTGRES_SHARED_BUFFERS: ${DB_POSTGRES_SHARED_BUFFERS}
      DB_POSTGRES_EFFECTIVE_CACHE_SIZE: ${DB_POSTGRES_EFFECTIVE_CACHE_SIZE}
      DB_POSTGRES_WORK_MEM: ${DB_POSTGRES_WORK_MEM}
      DB_POSTGRES_MAINTENANCE_WORK_MEM: ${DB_POSTGRES_MAINTENANCE_WORK_MEM}
      DB_POSTGRES_WAL_BUFFERS: ${DB_POSTGRES_WAL_BUFFERS}
      DB_POSTGRES_CHECKPOINT_COMPLETION_TARGET: ${DB_POSTGRES_CHECKPOINT_COMPLETION_TARGET}
      DB_POSTGRES_RANDOM_PAGE_COST: ${DB_POSTGRES_RANDOM_PAGE_COST}

      # Additional settings for advanced PostgreSQL tuning
      DB_POSTGRES_EFFECTIVE_IO_CONCURRENCY: ${DB_POSTGRES_EFFECTIVE_IO_CONCURRENCY}
      DB_POSTGRES_PARALLEL_TUPLE_COST: ${DB_POSTGRES_PARALLEL_TUPLE_COST}
      DB_POSTGRES_PARALLEL_SETUP_COST: ${DB_POSTGRES_PARALLEL_SETUP_COST}
      DB_POSTGRES_MAX_PARALLEL_WORKERS_PER_GATHER: ${DB_POSTGRES_MAX_PARALLEL_WORKERS_PER_GATHER}
      DB_POSTGRES_MAX_PARALLEL_WORKERS: ${DB_POSTGRES_MAX_PARALLEL_WORKERS}
      DB_POSTGRES_SEQ_PAGE_COST: ${DB_POSTGRES_SEQ_PAGE_COST}
      DB_POSTGRES_JIT: ${DB_POSTGRES_JIT}
      DB_POSTGRES_BGWRITER_LRU_MAXPAGES: ${DB_POSTGRES_BGWRITER_LRU_MAXPAGES}
      DB_POSTGRES_BGWRITER_DELAY: ${DB_POSTGRES_BGWRITER_DELAY}
    restart: on-failure
    volumes:
      - ${DB_PATH}:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "PGPASSWORD=${DB_SECRET} pg_isready -U ${DB_USER} -d ${DB_NAME} -p ${DB_PORT} -h localhost"]
      interval: 10s
      timeout: 3s
      retries: 10

volumes:
  data:

networks:
  default:
    name: cardano-rosetta-java-${NETWORK}
