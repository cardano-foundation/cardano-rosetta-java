"use strict";(self.webpackChunkrosetta_docs=self.webpackChunkrosetta_docs||[]).push([[7860],{7084:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"development/monitoring_setup_guide","title":"Monitoring setup guide","description":"This guide explains :","source":"@site/docs/development/monitoring_setup_guide.md","sourceDirName":"development","slug":"/development/monitoring_setup_guide","permalink":"/cardano-rosetta-java/docs/development/monitoring_setup_guide","draft":false,"unlisted":false,"editUrl":"https://github.com/cardano-foundation/cardano-rosetta-java/tree/main/docs/docs/development/monitoring_setup_guide.md","tags":[],"version":"current","lastUpdatedBy":"Kartiiyer12","lastUpdatedAt":1754655688000,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Performance Measurements","permalink":"/cardano-rosetta-java/docs/development/performance-measurements"},"next":{"title":"rosetta-cli Verification Checks","permalink":"/cardano-rosetta-java/docs/development/qa-rosetta-cli"}}');var o=s(4848),i=s(8453);const t={},a="Monitoring setup guide",c={},d=[{value:"\ud83d\udce6 1. Prerequisites",id:"-1-prerequisites",level:2},{value:"\ud83d\ude80 2. Start the Monitoring containers",id:"-2-start-the-monitoring-containers",level:2},{value:"\ud83c\udf10 3. Access Grafana",id:"-3-access-grafana",level:2}];function l(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"monitoring-setup-guide",children:"Monitoring setup guide"})}),"\n",(0,o.jsx)(n.p,{children:"This guide explains :"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"How to run the monitoring stack using Docker Compose"}),"\n",(0,o.jsx)(n.li,{children:"Configure Prometheus as a data source in Grafa GUI."}),"\n",(0,o.jsx)(n.li,{children:"Import a Grafana dashboard from a JSON file."}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"-1-prerequisites",children:"\ud83d\udce6 1. Prerequisites"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["The monitoring containers are used as services in rossetta-java so they are declared in the file  ",(0,o.jsx)(n.code,{children:"docker-compose.yaml"}),". By default, monitoring is enabled. You can disable it by commenting out the following line in your:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-yaml",children:"include:\n  - docker-compose-indexer.yaml\n  - docker-compose-node.yaml\n  - docker-compose-api.yaml\n  - docker-compose-monitor.yaml  # uncomment this line if you want to disable monitoring\n"})}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:["\n",(0,o.jsxs)(n.p,{children:["The following variables in ",(0,o.jsx)(n.code,{children:".env.docker-compose"})," must be set to appropriate values \u200b\u200band avoid port conflicts with other running services:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-dotenv",children:"## Monitoring port variables\nPROMETHEUS_PORT=9090\nGRAFANA_PORT=3000\nPOSTGRESQL_EXPORTER_PORT=9187\n"})}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"-2-start-the-monitoring-containers",children:"\ud83d\ude80 2. Start the Monitoring containers"}),"\n",(0,o.jsxs)(n.p,{children:["Since ",(0,o.jsx)(n.code,{children:"docker-compose-monitor.yaml"})," is included in the main ",(0,o.jsx)(n.code,{children:"docker-compose.yaml"}),", the monitoring containers will automatically start when you bring up the Rosetta-java docker compose. These containers include:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"prometheus"}),": the backend metrics collector"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"grafana"}),": the dashboard visualizer"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"postgresql-exporter"}),": collects PostgreSQL metrics and exposes them to Prometheus"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"You can verify services are running with:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"docker compose ps\n"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"-3-access-grafana",children:"\ud83c\udf10 3. Access Grafana"}),"\n",(0,o.jsx)(n.p,{children:"Once services are running, open your browser and go to:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"http://localhost:<GRAFANA_PORT>\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Replace ",(0,o.jsx)(n.code,{children:"<GRAFANA_PORT>"})," with the actual port defined in your ",(0,o.jsx)(n.code,{children:".env"})," file (default: ",(0,o.jsx)(n.code,{children:"3000"}),")."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Default login credentials:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Username"}),": ",(0,o.jsx)(n.code,{children:"admin"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Password"}),": ",(0,o.jsx)(n.code,{children:"admin"})," (you'll be prompted to change this)"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"After logging in, go to the Grafana menu \u2192 Dashboards \u2192 Rossetta-java-dashboards folder \u2192 Rosetta Critical Operation Metrics."}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Note:"})," The dashboard is preloaded when the Grafana container is started, so no manual import is necessary."]}),"\n"]}),"\n",(0,o.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>a});var r=s(6540);const o={},i=r.createContext(o);function t(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),r.createElement(i.Provider,{value:n},e.children)}}}]);