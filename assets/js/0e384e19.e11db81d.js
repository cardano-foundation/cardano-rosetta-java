"use strict";(self.webpackChunkrosetta_docs=self.webpackChunkrosetta_docs||[]).push([[976],{7879:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"intro","title":"Home","description":"Introduction to Cardano Rosetta Java implementation","source":"@site/docs/intro.md","sourceDirName":".","slug":"/intro","permalink":"/cardano-rosetta-java/docs/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/cardano-foundation/cardano-rosetta-java/tree/main/docs/docs/intro.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Home","description":"Introduction to Cardano Rosetta Java implementation"},"sidebar":"tutorialSidebar","next":{"title":"Architecture","permalink":"/cardano-rosetta-java/docs/category/architecture"}}');var r=n(4848),o=n(8453);const s={sidebar_position:1,title:"Home",description:"Introduction to Cardano Rosetta Java implementation"},a="Introduction",c={},d=[{value:"Overview",id:"overview",level:2},{value:"Architecture",id:"architecture",level:2},{value:"System Requirements",id:"system-requirements",level:2},{value:"Getting Started",id:"getting-started",level:2}];function l(e){const t={a:"a",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"introduction",children:"Introduction"})}),"\n",(0,r.jsx)(t.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(t.p,{children:["Cardano Rosetta Java is a lightweight Java implementation of the ",(0,r.jsx)(t.a,{href:"https://github.com/coinbase/mesh-specifications",children:"Rosetta API"})," for the Cardano blockchain. This implementation follows the ",(0,r.jsx)(t.a,{href:"https://docs.cdp.coinbase.com/mesh/docs/api-reference/",children:"Rosetta API specification"})," and is compatible with the ",(0,r.jsx)(t.a,{href:"https://docs.cdp.coinbase.com/mesh/docs/mesh-cli/",children:"Rosetta CLI"}),", while including specific extensions to accommodate Cardano's unique features."]}),"\n",(0,r.jsx)(t.h2,{id:"architecture",children:"Architecture"}),"\n",(0,r.jsx)(t.p,{children:"The Cardano Rosetta Java implementation consists of four key components:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Cardano Node"}),": A full Cardano node processing and validating blockchain data"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Cardano Submit API"}),": An API for transaction submission to the Cardano network"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Indexer"}),": A ",(0,r.jsx)(t.a,{href:"https://github.com/bloxbean/yaci-store",children:"Yaci-Store"})," based indexer that stores blockchain data in PostgreSQL"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Rosetta API"}),": The implementation of the Mesh (formerly Rosetta) API specification"]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"system-requirements",children:"System Requirements"}),"\n",(0,r.jsx)(t.p,{children:"As Yaci-Store is relatively lightweight compared to other chain indexers, the system requirements are:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"4 CPU Cores"}),"\n",(0,r.jsx)(t.li,{children:"32GB RAM"}),"\n",(0,r.jsxs)(t.li,{children:["Storage:","\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"1TB (with pruning disabled - default)"}),"\n",(0,r.jsx)(t.li,{children:"400GB (with pruning enabled)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"Better hardware resources will improve indexer and node performance, resulting in faster chain synchronization."}),"\n",(0,r.jsx)(t.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,r.jsx)(t.p,{children:"The simplest way to run Cardano Rosetta Java is using Docker. You can either:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"Build from source"}),"\n",(0,r.jsxs)(t.li,{children:["Use pre-built images from the Cardano Foundation ",(0,r.jsx)(t.a,{href:"https://hub.docker.com/orgs/cardanofoundation/repositories",children:"DockerHub repository"})]}),"\n",(0,r.jsx)(t.li,{children:"Deploy using Docker Compose"}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:["Detailed installation and configuration instructions are available in the ",(0,r.jsx)(t.a,{href:"getting-started/docker",children:"Getting Started with Docker"})," section of this documentation."]})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>a});var i=n(6540);const r={},o=i.createContext(r);function s(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);