"use strict";(self.webpackChunkrosetta_docs=self.webpackChunkrosetta_docs||[]).push([[888],{3185:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>g,frontMatter:()=>i,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"development/performance/db-tuning","title":"Database Tuning","description":"Database performance tuning for Cardano Rosetta Java","source":"@site/docs/development/performance/db-tuning.md","sourceDirName":"development/performance","slug":"/development/performance/db-tuning","permalink":"/cardano-rosetta-java/docs/development/performance/db-tuning","draft":false,"unlisted":false,"editUrl":"https://github.com/cardano-foundation/cardano-rosetta-java/tree/main/docs/docs/development/performance/db-tuning.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"title":"Database Tuning","description":"Database performance tuning for Cardano Rosetta Java"},"sidebar":"tutorialSidebar","previous":{"title":"Performance","permalink":"/cardano-rosetta-java/docs/category/performance"},"next":{"title":"Performance Measurements","permalink":"/cardano-rosetta-java/docs/development/performance/measurements"}}');var r=s(4848),o=s(8453);const i={sidebar_position:1,title:"Database Tuning",description:"Database performance tuning for Cardano Rosetta Java"},a=void 0,l={},d=[{value:"<strong>1. Use <code>pg_stat_statements</code> (Best for Monitoring)</strong>",id:"1-use-pg_stat_statements-best-for-monitoring",level:2},{value:"<strong>Enable <code>pg_stat_statements</code></strong>",id:"enable-pg_stat_statements",level:3},{value:"<strong>Query to Check Queries Using Indexes</strong>",id:"query-to-check-queries-using-indexes",level:3},{value:"<strong>2. Log Queries That Don&#39;t Use Indexes</strong>",id:"2-log-queries-that-dont-use-indexes",level:2},{value:"<strong>Edit <code>postgresql.conf</code></strong>",id:"edit-postgresqlconf",level:3},{value:"<strong>Filter Queries Using Sequential Scan</strong>",id:"filter-queries-using-sequential-scan",level:3},{value:"<strong>3. Use <code>EXPLAIN (ANALYZE, BUFFERS)</code> Automatically</strong>",id:"3-use-explain-analyze-buffers-automatically",level:2},{value:"<strong>4. Use <code>auto_explain</code> (Automatic Logging of Query Plans)</strong>",id:"4-use-auto_explain-automatic-logging-of-query-plans",level:2},{value:"<strong>Enable <code>auto_explain</code></strong>",id:"enable-auto_explain",level:3},{value:"<strong>5. Third-Party Monitoring Tools</strong>",id:"5-third-party-monitoring-tools",level:2},{value:"<strong>Final Thoughts</strong>",id:"final-thoughts",level:3}];function c(e){const n={br:"br",code:"code",h2:"h2",h3:"h3",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"In order to diagnose Postgres SQL queries"}),"\n",(0,r.jsxs)(n.p,{children:["Enter docker container:\n",(0,r.jsx)(n.code,{children:"docker exec -ti cardano-rosetta-java-db-1 /bin/bash"})]}),"\n",(0,r.jsxs)(n.p,{children:["Connect to psql inside of docker container:\n",(0,r.jsx)(n.code,{children:"PGPASSWORD=weakpwd#123_d psql -h localhost -p 5432 -d rosetta-java  -U rosetta_db_admin"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Postgres SQL Performance Monitoring Options"})}),"\n",(0,r.jsxs)(n.p,{children:["Yes! You can ",(0,r.jsx)(n.strong,{children:"monitor all queries"})," in PostgreSQL and check whether they are using indexes using ",(0,r.jsx)(n.strong,{children:"pg_stat_statements"}),", logging, and EXPLAIN tools."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"1-use-pg_stat_statements-best-for-monitoring",children:(0,r.jsxs)(n.strong,{children:["1. Use ",(0,r.jsx)(n.code,{children:"pg_stat_statements"})," (Best for Monitoring)"]})}),"\n",(0,r.jsxs)(n.p,{children:["PostgreSQL provides a built-in extension ",(0,r.jsx)(n.code,{children:"pg_stat_statements"})," that tracks query performance, including index usage."]}),"\n",(0,r.jsx)(n.h3,{id:"enable-pg_stat_statements",children:(0,r.jsxs)(n.strong,{children:["Enable ",(0,r.jsx)(n.code,{children:"pg_stat_statements"})]})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Edit ",(0,r.jsx)(n.code,{children:"postgresql.conf"})," (inside your container):","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ini",children:"shared_preload_libraries = 'pg_stat_statements'\ntrack_activity_query_size = 2048\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Restart PostgreSQL:","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker restart <postgres_container_name>\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Run inside ",(0,r.jsx)(n.code,{children:"psql"}),":","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"CREATE EXTENSION IF NOT EXISTS pg_stat_statements;\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"query-to-check-queries-using-indexes",children:(0,r.jsx)(n.strong,{children:"Query to Check Queries Using Indexes"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT query, calls, total_exec_time, rows, shared_blks_hit, shared_blks_read\nFROM pg_stat_statements\nORDER BY total_exec_time DESC\nLIMIT 10;\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:[(0,r.jsx)(n.code,{children:"shared_blks_hit"})," > ",(0,r.jsx)(n.code,{children:"shared_blks_read"})]})," \u2192 More index usage."]}),"\n",(0,r.jsxs)(n.li,{children:["If ",(0,r.jsx)(n.code,{children:"shared_blks_read"})," is high, queries are scanning more blocks, possibly missing indexes."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"2-log-queries-that-dont-use-indexes",children:(0,r.jsx)(n.strong,{children:"2. Log Queries That Don't Use Indexes"})}),"\n",(0,r.jsxs)(n.p,{children:["If you want to log queries that perform ",(0,r.jsx)(n.strong,{children:"sequential scans"}),", enable logging."]}),"\n",(0,r.jsx)(n.h3,{id:"edit-postgresqlconf",children:(0,r.jsxs)(n.strong,{children:["Edit ",(0,r.jsx)(n.code,{children:"postgresql.conf"})]})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ini",children:"log_min_duration_statement = 500  # Log queries taking more than 500ms\nlog_checkpoints = on\nlog_connections = on\nlog_disconnections = on\nlog_lock_waits = on\nlog_statement = 'all'\nlog_temp_files = 0\nlog_autovacuum_min_duration = 0\n"})}),"\n",(0,r.jsx)(n.p,{children:"Then restart PostgreSQL."}),"\n",(0,r.jsx)(n.h3,{id:"filter-queries-using-sequential-scan",children:(0,r.jsx)(n.strong,{children:"Filter Queries Using Sequential Scan"})}),"\n",(0,r.jsxs)(n.p,{children:["Once logging is enabled, find queries ",(0,r.jsx)(n.strong,{children:"not using indexes"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cat /var/lib/postgresql/data/log/postgresql.log | grep 'Seq Scan'\n"})}),"\n",(0,r.jsxs)(n.p,{children:["If many queries are using ",(0,r.jsx)(n.code,{children:"Seq Scan"}),", they are not hitting indexes."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"3-use-explain-analyze-buffers-automatically",children:(0,r.jsxs)(n.strong,{children:["3. Use ",(0,r.jsx)(n.code,{children:"EXPLAIN (ANALYZE, BUFFERS)"})," Automatically"]})}),"\n",(0,r.jsx)(n.p,{children:"To analyze all queries dynamically:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"CREATE OR REPLACE FUNCTION log_explain() RETURNS event_trigger AS $$\nBEGIN\n  RAISE NOTICE '%', (SELECT json_agg(row_to_json(t))\n    FROM (\n      SELECT query, json_agg(row_to_json(p)) AS plan\n      FROM pg_stat_statements p, LATERAL (EXPLAIN (ANALYZE, BUFFERS) p.query) q\n    ) t);\nEND;\n$$ LANGUAGE plpgsql;\n"})}),"\n",(0,r.jsx)(n.p,{children:"Then attach it to queries."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"4-use-auto_explain-automatic-logging-of-query-plans",children:(0,r.jsxs)(n.strong,{children:["4. Use ",(0,r.jsx)(n.code,{children:"auto_explain"})," (Automatic Logging of Query Plans)"]})}),"\n",(0,r.jsx)(n.p,{children:"This extension logs execution plans automatically."}),"\n",(0,r.jsx)(n.h3,{id:"enable-auto_explain",children:(0,r.jsxs)(n.strong,{children:["Enable ",(0,r.jsx)(n.code,{children:"auto_explain"})]})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Edit ",(0,r.jsx)(n.code,{children:"postgresql.conf"}),":","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ini",children:"shared_preload_libraries = 'auto_explain'\nauto_explain.log_min_duration = 500  # Log queries taking more than 500ms\nauto_explain.log_analyze = true\nauto_explain.log_buffers = true\nauto_explain.log_nested_statements = true\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Restart PostgreSQL:","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker restart <postgres_container_name>\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Run in ",(0,r.jsx)(n.code,{children:"psql"}),":","\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"LOAD 'auto_explain';\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Now, PostgreSQL will log all slow queries with ",(0,r.jsx)(n.code,{children:"EXPLAIN ANALYZE"}),", allowing you to detect if indexes are used."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"5-third-party-monitoring-tools",children:(0,r.jsx)(n.strong,{children:"5. Third-Party Monitoring Tools"})}),"\n",(0,r.jsxs)(n.p,{children:["If you want a UI-based approach, tools like ",(0,r.jsx)(n.strong,{children:"pgAdmin"}),", ",(0,r.jsx)(n.strong,{children:"pganalyze"}),", or ",(0,r.jsx)(n.strong,{children:"pgwatch2"})," can track index usage visually."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"final-thoughts",children:(0,r.jsx)(n.strong,{children:"Final Thoughts"})}),"\n",(0,r.jsxs)(n.p,{children:["For ",(0,r.jsx)(n.strong,{children:"real-time monitoring"}),", use ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"pg_stat_statements"})}),".",(0,r.jsx)(n.br,{}),"\n","For ",(0,r.jsx)(n.strong,{children:"logging slow queries"}),", enable ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"auto_explain"})}),".",(0,r.jsx)(n.br,{}),"\n","For ",(0,r.jsx)(n.strong,{children:"detailed analysis"}),", filter logs for ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"Seq Scan"})}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Would you like help setting up any of these? \ud83d\ude80"})]})}function g(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>a});var t=s(6540);const r={},o=t.createContext(r);function i(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);