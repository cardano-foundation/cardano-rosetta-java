version: '3.8'
services:
  mithril:
    image: cardanofoundation/rosetta-mithril:${MITHRIL_VERSION}
    build:
      context: ./
      dockerfile: ./docker/dockerfiles/mithril/Dockerfile
      args: 
        MITHRIL_VERSION: ${MITHRIL_VERSION}
    environment:
      - NETWORK=${NETWORK}
      - MITHRIL_SYNC=${MITHRIL_SYNC}
      - SNAPSHOT_DIGEST=${SNAPSHOT_DIGEST}
      - AGGREGATOR_ENDPOINT=${AGGREGATOR_ENDPOINT}
      - GENESIS_VERIFICATION_KEY=${GENESIS_VERIFICATION_KEY}
      - ANCILLARY_VERIFICATION_KEY=${ANCILLARY_VERIFICATION_KEY}

    volumes:
      - ${CARDANO_NODE_DIR}:/node

  cardano-node:
    image: cardanofoundation/rosetta-cardano-node:${CARDANO_NODE_VERSION}
    build:
      context: ./
      dockerfile: ./docker/dockerfiles/node/Dockerfile
      args:
        CARDANO_NODE_VERSION: ${CARDANO_NODE_VERSION}
    environment:
      - NETWORK=${NETWORK}
      - PROTOCOL_MAGIC=${PROTOCOL_MAGIC}
      - CARDANO_NODE_SOCKET_PATH=${CARDANO_NODE_DIR}/node.socket
      - CARDANO_NODE_PORT=${CARDANO_NODE_PORT}
      - NODE_SUBMIT_API_PORT=${NODE_SUBMIT_API_PORT}
      - CARDANO_NODE_DB=${CARDANO_NODE_DB}
    volumes:
      - ${CARDANO_NODE_DIR}:${CARDANO_NODE_DIR}
      - ${CARDANO_NODE_DB}:${CARDANO_NODE_DB}
      - ${CARDANO_CONFIG}:/config
    restart: unless-stopped
    ports:
      - ${CARDANO_NODE_PORT}:${CARDANO_NODE_PORT}
      - ${NODE_SUBMIT_API_PORT}:${NODE_SUBMIT_API_PORT}
    depends_on:
      mithril:
        condition: service_completed_successfully

networks:
  default:
    name: cardano-rosetta-java-${NETWORK}
